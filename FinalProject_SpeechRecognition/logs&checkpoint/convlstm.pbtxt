node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "ReadFile"
  op: "ReadFile"
  input: "Placeholder"
}
node {
  name: "DecodeWav"
  op: "DecodeWav"
  input: "ReadFile"
  attr {
    key: "desired_channels"
    value {
      i: 1
    }
  }
  attr {
    key: "desired_samples"
    value {
      i: 16000
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "Mul"
  op: "Mul"
  input: "DecodeWav"
  input: "Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Pad"
  op: "Pad"
  input: "Mul"
  input: "Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200>\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Slice"
  op: "Slice"
  input: "Pad"
  input: "Placeholder_3"
  input: "Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16000
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "Mul_1"
  op: "Mul"
  input: "Placeholder_4"
  input: "Placeholder_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Add"
  op: "Add"
  input: "Mul_1"
  input: "Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_value/Minimum"
  op: "Minimum"
  input: "Add"
  input: "clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_value/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "clip_by_value"
  op: "Maximum"
  input: "clip_by_value/Minimum"
  input: "clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AudioSpectrogram"
  op: "AudioSpectrogram"
  input: "clip_by_value"
  attr {
    key: "magnitude_squared"
    value {
      b: true
    }
  }
  attr {
    key: "stride"
    value {
      i: 160
    }
  }
  attr {
    key: "window_size"
    value {
      i: 480
    }
  }
}
node {
  name: "Mfcc"
  op: "Mfcc"
  input: "AudioSpectrogram"
  input: "DecodeWav:1"
  attr {
    key: "dct_coefficient_count"
    value {
      i: 40
    }
  }
  attr {
    key: "filterbank_channel_count"
    value {
      i: 40
    }
  }
  attr {
    key: "lower_frequency_limit"
    value {
      f: 20.0
    }
  }
  attr {
    key: "upper_frequency_limit"
    value {
      f: 4000.0
    }
  }
}
node {
  name: "data_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 3920
        }
      }
    }
  }
}
node {
  name: "groundtruth_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "dropout_prob"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "train_mode"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "Shape"
  op: "Shape"
  input: "data_input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377b\000\000\000(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "data_input"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/Shape"
  op: "Shape"
  input: "Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/strided_slice"
  op: "StridedSlice"
  input: "resCONVLSTM_1/Shape"
  input: "resCONVLSTM_1/strided_slice/stack"
  input: "resCONVLSTM_1/strided_slice/stack_1"
  input: "resCONVLSTM_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_1/strided_slice"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState/ExpandDims"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState/Const"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState/zeros"
  op: "Fill"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState/concat"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "resCONVLSTM_1/strided_slice"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "resCONVLSTM_1/strided_slice"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState/ExpandDims_2"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState/Const_2"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState/concat_1"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "resCONVLSTM_1/strided_slice"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState_1/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_1/strided_slice"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState_1/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState_1/ExpandDims"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState_1/Const"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState_1/concat"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState_1/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState_1/ExpandDims_1"
  op: "ExpandDims"
  input: "resCONVLSTM_1/strided_slice"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState_1/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState_1/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState_1/ExpandDims_2"
  op: "ExpandDims"
  input: "resCONVLSTM_1/strided_slice"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState_1/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState_1/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState_1/concat_1"
  op: "ConcatV2"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState_1/ExpandDims_2"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState_1/Const_2"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState_1/concat_1"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState_1/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState_1/ExpandDims_3"
  op: "ExpandDims"
  input: "resCONVLSTM_1/strided_slice"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState_1/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/ConvLSTMCellZeroState_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/range"
  op: "Range"
  input: "resCONVLSTM_1/rnn/range/start"
  input: "resCONVLSTM_1/rnn/Rank"
  input: "resCONVLSTM_1/rnn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_1/rnn/concat/values_0"
  input: "resCONVLSTM_1/rnn/range"
  input: "resCONVLSTM_1/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/transpose"
  op: "Transpose"
  input: "Reshape"
  input: "resCONVLSTM_1/rnn/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/strided_slice"
  op: "StridedSlice"
  input: "resCONVLSTM_1/rnn/Shape"
  input: "resCONVLSTM_1/rnn/strided_slice/stack"
  input: "resCONVLSTM_1/rnn/strided_slice/stack_1"
  input: "resCONVLSTM_1/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_1/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/strided_slice_1"
  op: "StridedSlice"
  input: "resCONVLSTM_1/rnn/Shape_1"
  input: "resCONVLSTM_1/rnn/strided_slice_1/stack"
  input: "resCONVLSTM_1/rnn/strided_slice_1/stack_1"
  input: "resCONVLSTM_1/rnn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/Shape_2"
  op: "Shape"
  input: "resCONVLSTM_1/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/strided_slice_2"
  op: "StridedSlice"
  input: "resCONVLSTM_1/rnn/Shape_2"
  input: "resCONVLSTM_1/rnn/strided_slice_2/stack"
  input: "resCONVLSTM_1/rnn/strided_slice_2/stack_1"
  input: "resCONVLSTM_1/rnn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_1/rnn/strided_slice_2"
  input: "resCONVLSTM_1/rnn/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/concat_1"
  op: "ConcatV2"
  input: "resCONVLSTM_1/rnn/ExpandDims"
  input: "resCONVLSTM_1/rnn/Const"
  input: "resCONVLSTM_1/rnn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/zeros"
  op: "Fill"
  input: "resCONVLSTM_1/rnn/concat_1"
  input: "resCONVLSTM_1/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "resCONVLSTM_1/rnn/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "resCONVLSTM_1/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "resCONVLSTM_1/rnn/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "resCONVLSTM_1/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "resCONVLSTM_1/rnn/TensorArrayUnstack/Shape"
  input: "resCONVLSTM_1/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "resCONVLSTM_1/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "resCONVLSTM_1/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "resCONVLSTM_1/rnn/TensorArrayUnstack/range/start"
  input: "resCONVLSTM_1/rnn/TensorArrayUnstack/strided_slice"
  input: "resCONVLSTM_1/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "resCONVLSTM_1/rnn/TensorArray_1"
  input: "resCONVLSTM_1/rnn/TensorArrayUnstack/range"
  input: "resCONVLSTM_1/rnn/transpose"
  input: "resCONVLSTM_1/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/transpose"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/Maximum/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/Maximum"
  op: "Maximum"
  input: "resCONVLSTM_1/rnn/Maximum/x"
  input: "resCONVLSTM_1/rnn/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/Minimum"
  op: "Minimum"
  input: "resCONVLSTM_1/rnn/strided_slice_1"
  input: "resCONVLSTM_1/rnn/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Enter"
  op: "Enter"
  input: "resCONVLSTM_1/rnn/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Enter_1"
  op: "Enter"
  input: "resCONVLSTM_1/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Enter_2"
  op: "Enter"
  input: "resCONVLSTM_1/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Enter_3"
  op: "Enter"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Enter_4"
  op: "Enter"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Merge"
  op: "Merge"
  input: "resCONVLSTM_1/rnn/while/Enter"
  input: "resCONVLSTM_1/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Merge_1"
  op: "Merge"
  input: "resCONVLSTM_1/rnn/while/Enter_1"
  input: "resCONVLSTM_1/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Merge_2"
  op: "Merge"
  input: "resCONVLSTM_1/rnn/while/Enter_2"
  input: "resCONVLSTM_1/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Merge_3"
  op: "Merge"
  input: "resCONVLSTM_1/rnn/while/Enter_3"
  input: "resCONVLSTM_1/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Merge_4"
  op: "Merge"
  input: "resCONVLSTM_1/rnn/while/Enter_4"
  input: "resCONVLSTM_1/rnn/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Less"
  op: "Less"
  input: "resCONVLSTM_1/rnn/while/Merge"
  input: "resCONVLSTM_1/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Less/Enter"
  op: "Enter"
  input: "resCONVLSTM_1/rnn/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Less_1"
  op: "Less"
  input: "resCONVLSTM_1/rnn/while/Merge_1"
  input: "resCONVLSTM_1/rnn/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "resCONVLSTM_1/rnn/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "resCONVLSTM_1/rnn/while/Less"
  input: "resCONVLSTM_1/rnn/while/Less_1"
}
node {
  name: "resCONVLSTM_1/rnn/while/LoopCond"
  op: "LoopCond"
  input: "resCONVLSTM_1/rnn/while/LogicalAnd"
}
node {
  name: "resCONVLSTM_1/rnn/while/Switch"
  op: "Switch"
  input: "resCONVLSTM_1/rnn/while/Merge"
  input: "resCONVLSTM_1/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_1/rnn/while/Merge_1"
  input: "resCONVLSTM_1/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/Merge_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_1/rnn/while/Merge_2"
  input: "resCONVLSTM_1/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/Merge_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Switch_3"
  op: "Switch"
  input: "resCONVLSTM_1/rnn/while/Merge_3"
  input: "resCONVLSTM_1/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/Merge_3"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Switch_4"
  op: "Switch"
  input: "resCONVLSTM_1/rnn/while/Merge_4"
  input: "resCONVLSTM_1/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/Merge_4"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Identity"
  op: "Identity"
  input: "resCONVLSTM_1/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Identity_1"
  op: "Identity"
  input: "resCONVLSTM_1/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Identity_2"
  op: "Identity"
  input: "resCONVLSTM_1/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Identity_3"
  op: "Identity"
  input: "resCONVLSTM_1/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Identity_4"
  op: "Identity"
  input: "resCONVLSTM_1/rnn/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/add/y"
  op: "Const"
  input: "^resCONVLSTM_1/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/add"
  op: "Add"
  input: "resCONVLSTM_1/rnn/while/Identity"
  input: "resCONVLSTM_1/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "resCONVLSTM_1/rnn/while/TensorArrayReadV3/Enter"
  input: "resCONVLSTM_1/rnn/while/Identity_1"
  input: "resCONVLSTM_1/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_1/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "resCONVLSTM_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\n\000\000\000\002\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3162277638912201
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3162277638912201
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "resCONVLSTM_1/rnn/conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "resCONVLSTM_1/rnn/conv1/kernel/Initializer/random_uniform/max"
  input: "resCONVLSTM_1/rnn/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "resCONVLSTM_1/rnn/conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "resCONVLSTM_1/rnn/conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "resCONVLSTM_1/rnn/conv1/kernel/Initializer/random_uniform/mul"
  input: "resCONVLSTM_1/rnn/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/kernel/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv1/kernel"
  input: "resCONVLSTM_1/rnn/conv1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/kernel/read"
  op: "Identity"
  input: "resCONVLSTM_1/rnn/conv1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/concat/axis"
  op: "Const"
  input: "^resCONVLSTM_1/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_1/rnn/while/TensorArrayReadV3"
  input: "resCONVLSTM_1/rnn/while/Identity_4"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims/dim"
  op: "Const"
  input: "^resCONVLSTM_1/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/concat"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1/dim"
  op: "Const"
  input: "^resCONVLSTM_1/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter"
  op: "Enter"
  input: "resCONVLSTM_1/rnn/conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/conv1d"
  op: "Conv2D"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze"
  op: "Squeeze"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/conv1d"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/biases/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv1/biases"
  input: "resCONVLSTM_1/rnn/conv1/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/biases/read"
  op: "Identity"
  input: "resCONVLSTM_1/rnn/conv1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/add"
  op: "Add"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/add/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/add/Enter"
  op: "Enter"
  input: "resCONVLSTM_1/rnn/conv1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/Const"
  op: "Const"
  input: "^resCONVLSTM_1/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/split/split_dim"
  op: "Const"
  input: "^resCONVLSTM_1/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/split"
  op: "Split"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/split/split_dim"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/add_1/y"
  op: "Const"
  input: "^resCONVLSTM_1/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/add_1"
  op: "Add"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/split:2"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid"
  op: "Sigmoid"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/mul"
  op: "Mul"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid"
  input: "resCONVLSTM_1/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid_1"
  op: "Sigmoid"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/Tanh"
  op: "Tanh"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/mul_1"
  op: "Mul"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid_1"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/add_2"
  op: "Add"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/mul"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/Tanh_1"
  op: "Tanh"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid_2"
  op: "Sigmoid"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/rnn/conv1/mul_2"
  op: "Mul"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/Tanh_1"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "resCONVLSTM_1/rnn/while/Identity_1"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/mul_2"
  input: "resCONVLSTM_1/rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/rnn/conv1/mul_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_1/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/rnn/conv1/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/add_1/y"
  op: "Const"
  input: "^resCONVLSTM_1/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/add_1"
  op: "Add"
  input: "resCONVLSTM_1/rnn/while/Identity_1"
  input: "resCONVLSTM_1/rnn/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/NextIteration"
  op: "NextIteration"
  input: "resCONVLSTM_1/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "resCONVLSTM_1/rnn/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/NextIteration_4"
  op: "NextIteration"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Exit"
  op: "Exit"
  input: "resCONVLSTM_1/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Exit_1"
  op: "Exit"
  input: "resCONVLSTM_1/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Exit_2"
  op: "Exit"
  input: "resCONVLSTM_1/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Exit_3"
  op: "Exit"
  input: "resCONVLSTM_1/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/while/Exit_4"
  op: "Exit"
  input: "resCONVLSTM_1/rnn/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "resCONVLSTM_1/rnn/TensorArray"
  input: "resCONVLSTM_1/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/TensorArrayStack/range"
  op: "Range"
  input: "resCONVLSTM_1/rnn/TensorArrayStack/range/start"
  input: "resCONVLSTM_1/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "resCONVLSTM_1/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "resCONVLSTM_1/rnn/TensorArray"
  input: "resCONVLSTM_1/rnn/TensorArrayStack/range"
  input: "resCONVLSTM_1/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/range_1"
  op: "Range"
  input: "resCONVLSTM_1/rnn/range_1/start"
  input: "resCONVLSTM_1/rnn/Rank_1"
  input: "resCONVLSTM_1/rnn/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/concat_2"
  op: "ConcatV2"
  input: "resCONVLSTM_1/rnn/concat_2/values_0"
  input: "resCONVLSTM_1/rnn/range_1"
  input: "resCONVLSTM_1/rnn/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/transpose_1"
  op: "Transpose"
  input: "resCONVLSTM_1/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "resCONVLSTM_1/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm/beta"
  input: "resCONVLSTM_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/beta/read"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm/moving_mean"
  input: "resCONVLSTM_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm/moving_variance"
  input: "resCONVLSTM_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond/Switch"
  op: "Switch"
  input: "train_mode"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond/switch_t"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond/switch_f"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond/pred_id"
  op: "Identity"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond/Const"
  op: "Const"
  input: "^resCONVLSTM_1/BatchNorm/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond/Const_1"
  op: "Const"
  input: "^resCONVLSTM_1/BatchNorm/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm/Switch:1"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm/Switch_1:1"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm/Switch_2:1"
  input: "resCONVLSTM_1/BatchNorm/cond/Const"
  input: "resCONVLSTM_1/BatchNorm/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "resCONVLSTM_1/rnn/transpose_1"
  input: "resCONVLSTM_1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/transpose_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm/Const"
  input: "resCONVLSTM_1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/Const"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm/beta/read"
  input: "resCONVLSTM_1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1/Switch"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1/Switch_2"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "resCONVLSTM_1/rnn/transpose_1"
  input: "resCONVLSTM_1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/transpose_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm/Const"
  input: "resCONVLSTM_1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/Const"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm/beta/read"
  input: "resCONVLSTM_1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm/moving_mean/read"
  input: "resCONVLSTM_1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm/moving_variance/read"
  input: "resCONVLSTM_1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond/Merge"
  op: "Merge"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond/Merge_1"
  op: "Merge"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1:1"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond/Merge_2"
  op: "Merge"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1:2"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/Switch"
  op: "Switch"
  input: "train_mode"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/switch_t"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/switch_f"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/pred_id"
  op: "Identity"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/decay"
  op: "Const"
  input: "^resCONVLSTM_1/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/biased/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/biased"
  input: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/biased/read"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/local_step/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/local_step"
  input: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/local_step/read"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/sub"
  op: "Sub"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/sub/Switch:1"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/biased/read"
  input: "resCONVLSTM_1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/sub/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm/cond/Merge_1"
  input: "resCONVLSTM_1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/cond/Merge_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/mul"
  op: "Mul"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/sub"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/AssignSub/Switch:1"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/AssignSub/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/biased"
  input: "resCONVLSTM_1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  input: "^resCONVLSTM_1/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/Switch:1"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/local_step"
  input: "resCONVLSTM_1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/sub_1/x"
  op: "Const"
  input: "^resCONVLSTM_1/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/sub_1/x"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/Pow"
  op: "Pow"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/sub_1"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/sub_2/x"
  op: "Const"
  input: "^resCONVLSTM_1/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/sub_2/x"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/AssignSub"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/Switch:1"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_1/BatchNorm/moving_mean"
  input: "resCONVLSTM_1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^resCONVLSTM_1/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch:1"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm/moving_variance/read"
  input: "resCONVLSTM_1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm/cond/Merge_2"
  input: "resCONVLSTM_1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/cond/Merge_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg_1/sub"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg_1/Switch:1"
  input: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_1/BatchNorm/moving_variance"
  input: "resCONVLSTM_1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/Identity"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm/cond_1/Identity/Switch:1"
  input: "^resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg"
  input: "^resCONVLSTM_1/BatchNorm/cond_1/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/Identity/Switch"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm/cond/Merge"
  input: "resCONVLSTM_1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/cond/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm/cond/Merge"
  input: "resCONVLSTM_1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/cond/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/cond_1/Merge"
  op: "Merge"
  input: "resCONVLSTM_1/BatchNorm/cond_1/Switch_1"
  input: "resCONVLSTM_1/BatchNorm/cond_1/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/Relu"
  op: "Relu"
  input: "resCONVLSTM_1/BatchNorm/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/range"
  op: "Range"
  input: "resCONVLSTM_1/rnn_1/range/start"
  input: "resCONVLSTM_1/rnn_1/Rank"
  input: "resCONVLSTM_1/rnn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_1/rnn_1/concat/values_0"
  input: "resCONVLSTM_1/rnn_1/range"
  input: "resCONVLSTM_1/rnn_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/transpose"
  op: "Transpose"
  input: "resCONVLSTM_1/Relu"
  input: "resCONVLSTM_1/rnn_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/strided_slice"
  op: "StridedSlice"
  input: "resCONVLSTM_1/rnn_1/Shape"
  input: "resCONVLSTM_1/rnn_1/strided_slice/stack"
  input: "resCONVLSTM_1/rnn_1/strided_slice/stack_1"
  input: "resCONVLSTM_1/rnn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_1/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/strided_slice_1"
  op: "StridedSlice"
  input: "resCONVLSTM_1/rnn_1/Shape_1"
  input: "resCONVLSTM_1/rnn_1/strided_slice_1/stack"
  input: "resCONVLSTM_1/rnn_1/strided_slice_1/stack_1"
  input: "resCONVLSTM_1/rnn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/Shape_2"
  op: "Shape"
  input: "resCONVLSTM_1/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/strided_slice_2"
  op: "StridedSlice"
  input: "resCONVLSTM_1/rnn_1/Shape_2"
  input: "resCONVLSTM_1/rnn_1/strided_slice_2/stack"
  input: "resCONVLSTM_1/rnn_1/strided_slice_2/stack_1"
  input: "resCONVLSTM_1/rnn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_1/rnn_1/strided_slice_2"
  input: "resCONVLSTM_1/rnn_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/concat_1"
  op: "ConcatV2"
  input: "resCONVLSTM_1/rnn_1/ExpandDims"
  input: "resCONVLSTM_1/rnn_1/Const"
  input: "resCONVLSTM_1/rnn_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/zeros"
  op: "Fill"
  input: "resCONVLSTM_1/rnn_1/concat_1"
  input: "resCONVLSTM_1/rnn_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/TensorArray"
  op: "TensorArrayV3"
  input: "resCONVLSTM_1/rnn_1/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "resCONVLSTM_1/rnn_1/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/TensorArray_1"
  op: "TensorArrayV3"
  input: "resCONVLSTM_1/rnn_1/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "resCONVLSTM_1/rnn_1/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "resCONVLSTM_1/rnn_1/TensorArrayUnstack/Shape"
  input: "resCONVLSTM_1/rnn_1/TensorArrayUnstack/strided_slice/stack"
  input: "resCONVLSTM_1/rnn_1/TensorArrayUnstack/strided_slice/stack_1"
  input: "resCONVLSTM_1/rnn_1/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/TensorArrayUnstack/range"
  op: "Range"
  input: "resCONVLSTM_1/rnn_1/TensorArrayUnstack/range/start"
  input: "resCONVLSTM_1/rnn_1/TensorArrayUnstack/strided_slice"
  input: "resCONVLSTM_1/rnn_1/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "resCONVLSTM_1/rnn_1/TensorArray_1"
  input: "resCONVLSTM_1/rnn_1/TensorArrayUnstack/range"
  input: "resCONVLSTM_1/rnn_1/transpose"
  input: "resCONVLSTM_1/rnn_1/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/transpose"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/Maximum/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/Maximum"
  op: "Maximum"
  input: "resCONVLSTM_1/rnn_1/Maximum/x"
  input: "resCONVLSTM_1/rnn_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/Minimum"
  op: "Minimum"
  input: "resCONVLSTM_1/rnn_1/strided_slice_1"
  input: "resCONVLSTM_1/rnn_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Enter"
  op: "Enter"
  input: "resCONVLSTM_1/rnn_1/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Enter_1"
  op: "Enter"
  input: "resCONVLSTM_1/rnn_1/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Enter_2"
  op: "Enter"
  input: "resCONVLSTM_1/rnn_1/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Enter_3"
  op: "Enter"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Enter_4"
  op: "Enter"
  input: "resCONVLSTM_1/ConvLSTMCellZeroState_1/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Merge"
  op: "Merge"
  input: "resCONVLSTM_1/rnn_1/while/Enter"
  input: "resCONVLSTM_1/rnn_1/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Merge_1"
  op: "Merge"
  input: "resCONVLSTM_1/rnn_1/while/Enter_1"
  input: "resCONVLSTM_1/rnn_1/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Merge_2"
  op: "Merge"
  input: "resCONVLSTM_1/rnn_1/while/Enter_2"
  input: "resCONVLSTM_1/rnn_1/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Merge_3"
  op: "Merge"
  input: "resCONVLSTM_1/rnn_1/while/Enter_3"
  input: "resCONVLSTM_1/rnn_1/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Merge_4"
  op: "Merge"
  input: "resCONVLSTM_1/rnn_1/while/Enter_4"
  input: "resCONVLSTM_1/rnn_1/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Less"
  op: "Less"
  input: "resCONVLSTM_1/rnn_1/while/Merge"
  input: "resCONVLSTM_1/rnn_1/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Less/Enter"
  op: "Enter"
  input: "resCONVLSTM_1/rnn_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Less_1"
  op: "Less"
  input: "resCONVLSTM_1/rnn_1/while/Merge_1"
  input: "resCONVLSTM_1/rnn_1/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Less_1/Enter"
  op: "Enter"
  input: "resCONVLSTM_1/rnn_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/LogicalAnd"
  op: "LogicalAnd"
  input: "resCONVLSTM_1/rnn_1/while/Less"
  input: "resCONVLSTM_1/rnn_1/while/Less_1"
}
node {
  name: "resCONVLSTM_1/rnn_1/while/LoopCond"
  op: "LoopCond"
  input: "resCONVLSTM_1/rnn_1/while/LogicalAnd"
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Switch"
  op: "Switch"
  input: "resCONVLSTM_1/rnn_1/while/Merge"
  input: "resCONVLSTM_1/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_1/rnn_1/while/Merge_1"
  input: "resCONVLSTM_1/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/Merge_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_1/rnn_1/while/Merge_2"
  input: "resCONVLSTM_1/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/Merge_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Switch_3"
  op: "Switch"
  input: "resCONVLSTM_1/rnn_1/while/Merge_3"
  input: "resCONVLSTM_1/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/Merge_3"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Switch_4"
  op: "Switch"
  input: "resCONVLSTM_1/rnn_1/while/Merge_4"
  input: "resCONVLSTM_1/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/Merge_4"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Identity"
  op: "Identity"
  input: "resCONVLSTM_1/rnn_1/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Identity_1"
  op: "Identity"
  input: "resCONVLSTM_1/rnn_1/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Identity_2"
  op: "Identity"
  input: "resCONVLSTM_1/rnn_1/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Identity_3"
  op: "Identity"
  input: "resCONVLSTM_1/rnn_1/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Identity_4"
  op: "Identity"
  input: "resCONVLSTM_1/rnn_1/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/add/y"
  op: "Const"
  input: "^resCONVLSTM_1/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/add"
  op: "Add"
  input: "resCONVLSTM_1/rnn_1/while/Identity"
  input: "resCONVLSTM_1/rnn_1/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter"
  input: "resCONVLSTM_1/rnn_1/while/Identity_1"
  input: "resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_1/rnn_1/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "resCONVLSTM_1/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\n\000\000\000\002\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3162277638912201
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3162277638912201
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "resCONVLSTM_1/rnn/conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "resCONVLSTM_1/rnn/conv2/kernel/Initializer/random_uniform/max"
  input: "resCONVLSTM_1/rnn/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "resCONVLSTM_1/rnn/conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "resCONVLSTM_1/rnn/conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "resCONVLSTM_1/rnn/conv2/kernel/Initializer/random_uniform/mul"
  input: "resCONVLSTM_1/rnn/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/kernel/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv2/kernel"
  input: "resCONVLSTM_1/rnn/conv2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/kernel/read"
  op: "Identity"
  input: "resCONVLSTM_1/rnn/conv2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/concat/axis"
  op: "Const"
  input: "^resCONVLSTM_1/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_1/rnn_1/while/TensorArrayReadV3"
  input: "resCONVLSTM_1/rnn_1/while/Identity_4"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims/dim"
  op: "Const"
  input: "^resCONVLSTM_1/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/concat"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/dim"
  op: "Const"
  input: "^resCONVLSTM_1/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter"
  op: "Enter"
  input: "resCONVLSTM_1/rnn/conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d"
  op: "Conv2D"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze"
  op: "Squeeze"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/biases/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv2/biases"
  input: "resCONVLSTM_1/rnn/conv2/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/biases/read"
  op: "Identity"
  input: "resCONVLSTM_1/rnn/conv2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/add"
  op: "Add"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/add/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/add/Enter"
  op: "Enter"
  input: "resCONVLSTM_1/rnn/conv2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/Const"
  op: "Const"
  input: "^resCONVLSTM_1/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/split/split_dim"
  op: "Const"
  input: "^resCONVLSTM_1/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/split"
  op: "Split"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/split/split_dim"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1/y"
  op: "Const"
  input: "^resCONVLSTM_1/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1"
  op: "Add"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/split:2"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid"
  op: "Sigmoid"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/mul"
  op: "Mul"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid"
  input: "resCONVLSTM_1/rnn_1/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid_1"
  op: "Sigmoid"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/Tanh"
  op: "Tanh"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1"
  op: "Mul"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid_1"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2"
  op: "Add"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/mul"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/Tanh_1"
  op: "Tanh"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid_2"
  op: "Sigmoid"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2"
  op: "Mul"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/Tanh_1"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "resCONVLSTM_1/rnn_1/while/Identity_1"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2"
  input: "resCONVLSTM_1/rnn_1/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_1/rnn_1/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/add_1/y"
  op: "Const"
  input: "^resCONVLSTM_1/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/add_1"
  op: "Add"
  input: "resCONVLSTM_1/rnn_1/while/Identity_1"
  input: "resCONVLSTM_1/rnn_1/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/NextIteration"
  op: "NextIteration"
  input: "resCONVLSTM_1/rnn_1/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/NextIteration_1"
  op: "NextIteration"
  input: "resCONVLSTM_1/rnn_1/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/NextIteration_2"
  op: "NextIteration"
  input: "resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/NextIteration_3"
  op: "NextIteration"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/NextIteration_4"
  op: "NextIteration"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Exit"
  op: "Exit"
  input: "resCONVLSTM_1/rnn_1/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Exit_1"
  op: "Exit"
  input: "resCONVLSTM_1/rnn_1/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Exit_2"
  op: "Exit"
  input: "resCONVLSTM_1/rnn_1/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Exit_3"
  op: "Exit"
  input: "resCONVLSTM_1/rnn_1/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/while/Exit_4"
  op: "Exit"
  input: "resCONVLSTM_1/rnn_1/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "resCONVLSTM_1/rnn_1/TensorArray"
  input: "resCONVLSTM_1/rnn_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/TensorArray"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/TensorArrayStack/range"
  op: "Range"
  input: "resCONVLSTM_1/rnn_1/TensorArrayStack/range/start"
  input: "resCONVLSTM_1/rnn_1/TensorArrayStack/TensorArraySizeV3"
  input: "resCONVLSTM_1/rnn_1/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/TensorArray"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "resCONVLSTM_1/rnn_1/TensorArray"
  input: "resCONVLSTM_1/rnn_1/TensorArrayStack/range"
  input: "resCONVLSTM_1/rnn_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/range_1"
  op: "Range"
  input: "resCONVLSTM_1/rnn_1/range_1/start"
  input: "resCONVLSTM_1/rnn_1/Rank_1"
  input: "resCONVLSTM_1/rnn_1/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/concat_2"
  op: "ConcatV2"
  input: "resCONVLSTM_1/rnn_1/concat_2/values_0"
  input: "resCONVLSTM_1/rnn_1/range_1"
  input: "resCONVLSTM_1/rnn_1/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn_1/transpose_1"
  op: "Transpose"
  input: "resCONVLSTM_1/rnn_1/TensorArrayStack/TensorArrayGatherV3"
  input: "resCONVLSTM_1/rnn_1/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/beta/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm_1/beta"
  input: "resCONVLSTM_1/BatchNorm_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/beta/read"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/moving_mean/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm_1/moving_mean"
  input: "resCONVLSTM_1/BatchNorm_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/moving_mean/read"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/moving_variance/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm_1/moving_variance"
  input: "resCONVLSTM_1/BatchNorm_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/moving_variance/read"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond/Switch"
  op: "Switch"
  input: "train_mode"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond/switch_t"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond/switch_f"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond/pred_id"
  op: "Identity"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond/Const"
  op: "Const"
  input: "^resCONVLSTM_1/BatchNorm_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond/Const_1"
  op: "Const"
  input: "^resCONVLSTM_1/BatchNorm_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm/Switch:1"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm/Switch_1:1"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm/Switch_2:1"
  input: "resCONVLSTM_1/BatchNorm_1/cond/Const"
  input: "resCONVLSTM_1/BatchNorm_1/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "resCONVLSTM_1/rnn_1/transpose_1"
  input: "resCONVLSTM_1/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/transpose_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm_1/Const"
  input: "resCONVLSTM_1/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/Const"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm_1/beta/read"
  input: "resCONVLSTM_1/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1/Switch"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1/Switch_1"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1/Switch_2"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1/Switch_3"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "resCONVLSTM_1/rnn_1/transpose_1"
  input: "resCONVLSTM_1/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/transpose_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm_1/Const"
  input: "resCONVLSTM_1/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/Const"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm_1/beta/read"
  input: "resCONVLSTM_1/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm_1/moving_mean/read"
  input: "resCONVLSTM_1/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm_1/moving_variance/read"
  input: "resCONVLSTM_1/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond/Merge"
  op: "Merge"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond/Merge_1"
  op: "Merge"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1:1"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond/Merge_2"
  op: "Merge"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1:2"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/Switch"
  op: "Switch"
  input: "train_mode"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/switch_t"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/switch_f"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/pred_id"
  op: "Identity"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/decay"
  op: "Const"
  input: "^resCONVLSTM_1/BatchNorm_1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/biased"
  input: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/biased/read"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/local_step"
  input: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/local_step/read"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/sub"
  op: "Sub"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/sub/Switch:1"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/biased/read"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/sub/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm_1/cond/Merge_1"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/cond/Merge_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/mul"
  op: "Mul"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/sub"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/AssignSub/Switch:1"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/AssignSub/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/biased"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  input: "^resCONVLSTM_1/BatchNorm_1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd/Switch:1"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/local_step"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/sub_1/x"
  op: "Const"
  input: "^resCONVLSTM_1/BatchNorm_1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/sub_1/x"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/Pow"
  op: "Pow"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/sub_1"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/sub_2/x"
  op: "Const"
  input: "^resCONVLSTM_1/BatchNorm_1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/sub_2/x"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/AssignSub"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/Switch:1"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_1/BatchNorm_1/moving_mean"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^resCONVLSTM_1/BatchNorm_1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg_1/sub/Switch:1"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg_1/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm_1/moving_variance/read"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg_1/sub/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm_1/cond/Merge_2"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/cond/Merge_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg_1/sub"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg_1/Switch:1"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_1/BatchNorm_1/moving_variance"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/Identity"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/Identity/Switch:1"
  input: "^resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg"
  input: "^resCONVLSTM_1/BatchNorm_1/cond_1/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/Identity/Switch"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm_1/cond/Merge"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/cond/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm_1/cond/Merge"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/cond/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/cond_1/Merge"
  op: "Merge"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/Switch_1"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/Relu"
  op: "Relu"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/Add"
  op: "Add"
  input: "resCONVLSTM_1/BatchNorm_1/Relu"
  input: "Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_1/Relu_1"
  op: "Relu"
  input: "resCONVLSTM_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/strided_slice"
  op: "StridedSlice"
  input: "resCONVLSTM_2/Shape"
  input: "resCONVLSTM_2/strided_slice/stack"
  input: "resCONVLSTM_2/strided_slice/stack_1"
  input: "resCONVLSTM_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_2/strided_slice"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState/ExpandDims"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState/Const"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState/zeros"
  op: "Fill"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState/concat"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "resCONVLSTM_2/strided_slice"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "resCONVLSTM_2/strided_slice"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState/ExpandDims_2"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState/Const_2"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState/concat_1"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "resCONVLSTM_2/strided_slice"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState_1/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_2/strided_slice"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState_1/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState_1/ExpandDims"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState_1/Const"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState_1/concat"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState_1/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState_1/ExpandDims_1"
  op: "ExpandDims"
  input: "resCONVLSTM_2/strided_slice"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState_1/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState_1/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState_1/ExpandDims_2"
  op: "ExpandDims"
  input: "resCONVLSTM_2/strided_slice"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState_1/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState_1/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState_1/concat_1"
  op: "ConcatV2"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState_1/ExpandDims_2"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState_1/Const_2"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState_1/concat_1"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState_1/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState_1/ExpandDims_3"
  op: "ExpandDims"
  input: "resCONVLSTM_2/strided_slice"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState_1/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/ConvLSTMCellZeroState_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/range"
  op: "Range"
  input: "resCONVLSTM_2/rnn/range/start"
  input: "resCONVLSTM_2/rnn/Rank"
  input: "resCONVLSTM_2/rnn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_2/rnn/concat/values_0"
  input: "resCONVLSTM_2/rnn/range"
  input: "resCONVLSTM_2/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/transpose"
  op: "Transpose"
  input: "resCONVLSTM_1/Relu_1"
  input: "resCONVLSTM_2/rnn/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/strided_slice"
  op: "StridedSlice"
  input: "resCONVLSTM_2/rnn/Shape"
  input: "resCONVLSTM_2/rnn/strided_slice/stack"
  input: "resCONVLSTM_2/rnn/strided_slice/stack_1"
  input: "resCONVLSTM_2/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_2/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/strided_slice_1"
  op: "StridedSlice"
  input: "resCONVLSTM_2/rnn/Shape_1"
  input: "resCONVLSTM_2/rnn/strided_slice_1/stack"
  input: "resCONVLSTM_2/rnn/strided_slice_1/stack_1"
  input: "resCONVLSTM_2/rnn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/Shape_2"
  op: "Shape"
  input: "resCONVLSTM_2/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/strided_slice_2"
  op: "StridedSlice"
  input: "resCONVLSTM_2/rnn/Shape_2"
  input: "resCONVLSTM_2/rnn/strided_slice_2/stack"
  input: "resCONVLSTM_2/rnn/strided_slice_2/stack_1"
  input: "resCONVLSTM_2/rnn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_2/rnn/strided_slice_2"
  input: "resCONVLSTM_2/rnn/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/concat_1"
  op: "ConcatV2"
  input: "resCONVLSTM_2/rnn/ExpandDims"
  input: "resCONVLSTM_2/rnn/Const"
  input: "resCONVLSTM_2/rnn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/zeros"
  op: "Fill"
  input: "resCONVLSTM_2/rnn/concat_1"
  input: "resCONVLSTM_2/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "resCONVLSTM_2/rnn/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "resCONVLSTM_2/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "resCONVLSTM_2/rnn/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "resCONVLSTM_2/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "resCONVLSTM_2/rnn/TensorArrayUnstack/Shape"
  input: "resCONVLSTM_2/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "resCONVLSTM_2/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "resCONVLSTM_2/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "resCONVLSTM_2/rnn/TensorArrayUnstack/range/start"
  input: "resCONVLSTM_2/rnn/TensorArrayUnstack/strided_slice"
  input: "resCONVLSTM_2/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "resCONVLSTM_2/rnn/TensorArray_1"
  input: "resCONVLSTM_2/rnn/TensorArrayUnstack/range"
  input: "resCONVLSTM_2/rnn/transpose"
  input: "resCONVLSTM_2/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/transpose"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/Maximum/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/Maximum"
  op: "Maximum"
  input: "resCONVLSTM_2/rnn/Maximum/x"
  input: "resCONVLSTM_2/rnn/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/Minimum"
  op: "Minimum"
  input: "resCONVLSTM_2/rnn/strided_slice_1"
  input: "resCONVLSTM_2/rnn/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Enter"
  op: "Enter"
  input: "resCONVLSTM_2/rnn/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Enter_1"
  op: "Enter"
  input: "resCONVLSTM_2/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Enter_2"
  op: "Enter"
  input: "resCONVLSTM_2/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Enter_3"
  op: "Enter"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Enter_4"
  op: "Enter"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Merge"
  op: "Merge"
  input: "resCONVLSTM_2/rnn/while/Enter"
  input: "resCONVLSTM_2/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Merge_1"
  op: "Merge"
  input: "resCONVLSTM_2/rnn/while/Enter_1"
  input: "resCONVLSTM_2/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Merge_2"
  op: "Merge"
  input: "resCONVLSTM_2/rnn/while/Enter_2"
  input: "resCONVLSTM_2/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Merge_3"
  op: "Merge"
  input: "resCONVLSTM_2/rnn/while/Enter_3"
  input: "resCONVLSTM_2/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Merge_4"
  op: "Merge"
  input: "resCONVLSTM_2/rnn/while/Enter_4"
  input: "resCONVLSTM_2/rnn/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Less"
  op: "Less"
  input: "resCONVLSTM_2/rnn/while/Merge"
  input: "resCONVLSTM_2/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Less/Enter"
  op: "Enter"
  input: "resCONVLSTM_2/rnn/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Less_1"
  op: "Less"
  input: "resCONVLSTM_2/rnn/while/Merge_1"
  input: "resCONVLSTM_2/rnn/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "resCONVLSTM_2/rnn/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "resCONVLSTM_2/rnn/while/Less"
  input: "resCONVLSTM_2/rnn/while/Less_1"
}
node {
  name: "resCONVLSTM_2/rnn/while/LoopCond"
  op: "LoopCond"
  input: "resCONVLSTM_2/rnn/while/LogicalAnd"
}
node {
  name: "resCONVLSTM_2/rnn/while/Switch"
  op: "Switch"
  input: "resCONVLSTM_2/rnn/while/Merge"
  input: "resCONVLSTM_2/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_2/rnn/while/Merge_1"
  input: "resCONVLSTM_2/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/Merge_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_2/rnn/while/Merge_2"
  input: "resCONVLSTM_2/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/Merge_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Switch_3"
  op: "Switch"
  input: "resCONVLSTM_2/rnn/while/Merge_3"
  input: "resCONVLSTM_2/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/Merge_3"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Switch_4"
  op: "Switch"
  input: "resCONVLSTM_2/rnn/while/Merge_4"
  input: "resCONVLSTM_2/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/Merge_4"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Identity"
  op: "Identity"
  input: "resCONVLSTM_2/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Identity_1"
  op: "Identity"
  input: "resCONVLSTM_2/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Identity_2"
  op: "Identity"
  input: "resCONVLSTM_2/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Identity_3"
  op: "Identity"
  input: "resCONVLSTM_2/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Identity_4"
  op: "Identity"
  input: "resCONVLSTM_2/rnn/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/add/y"
  op: "Const"
  input: "^resCONVLSTM_2/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/add"
  op: "Add"
  input: "resCONVLSTM_2/rnn/while/Identity"
  input: "resCONVLSTM_2/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter"
  input: "resCONVLSTM_2/rnn/while/Identity_1"
  input: "resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_2/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "resCONVLSTM_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\n\000\000\000\002\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3162277638912201
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3162277638912201
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "resCONVLSTM_2/rnn/conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "resCONVLSTM_2/rnn/conv1/kernel/Initializer/random_uniform/max"
  input: "resCONVLSTM_2/rnn/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "resCONVLSTM_2/rnn/conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "resCONVLSTM_2/rnn/conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "resCONVLSTM_2/rnn/conv1/kernel/Initializer/random_uniform/mul"
  input: "resCONVLSTM_2/rnn/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/kernel/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv1/kernel"
  input: "resCONVLSTM_2/rnn/conv1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/kernel/read"
  op: "Identity"
  input: "resCONVLSTM_2/rnn/conv1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/concat/axis"
  op: "Const"
  input: "^resCONVLSTM_2/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_2/rnn/while/TensorArrayReadV3"
  input: "resCONVLSTM_2/rnn/while/Identity_4"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims/dim"
  op: "Const"
  input: "^resCONVLSTM_2/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/concat"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1/dim"
  op: "Const"
  input: "^resCONVLSTM_2/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter"
  op: "Enter"
  input: "resCONVLSTM_2/rnn/conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/conv1d"
  op: "Conv2D"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze"
  op: "Squeeze"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/conv1d"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/biases/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv1/biases"
  input: "resCONVLSTM_2/rnn/conv1/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/biases/read"
  op: "Identity"
  input: "resCONVLSTM_2/rnn/conv1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/add"
  op: "Add"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/add/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/add/Enter"
  op: "Enter"
  input: "resCONVLSTM_2/rnn/conv1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/Const"
  op: "Const"
  input: "^resCONVLSTM_2/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/split/split_dim"
  op: "Const"
  input: "^resCONVLSTM_2/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/split"
  op: "Split"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/split/split_dim"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/add_1/y"
  op: "Const"
  input: "^resCONVLSTM_2/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/add_1"
  op: "Add"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/split:2"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid"
  op: "Sigmoid"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/mul"
  op: "Mul"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid"
  input: "resCONVLSTM_2/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid_1"
  op: "Sigmoid"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/Tanh"
  op: "Tanh"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/mul_1"
  op: "Mul"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid_1"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/add_2"
  op: "Add"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/mul"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/Tanh_1"
  op: "Tanh"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid_2"
  op: "Sigmoid"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/rnn/conv1/mul_2"
  op: "Mul"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/Tanh_1"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "resCONVLSTM_2/rnn/while/Identity_1"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/mul_2"
  input: "resCONVLSTM_2/rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/rnn/conv1/mul_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_2/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/rnn/conv1/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/add_1/y"
  op: "Const"
  input: "^resCONVLSTM_2/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/add_1"
  op: "Add"
  input: "resCONVLSTM_2/rnn/while/Identity_1"
  input: "resCONVLSTM_2/rnn/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/NextIteration"
  op: "NextIteration"
  input: "resCONVLSTM_2/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "resCONVLSTM_2/rnn/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/NextIteration_4"
  op: "NextIteration"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Exit"
  op: "Exit"
  input: "resCONVLSTM_2/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Exit_1"
  op: "Exit"
  input: "resCONVLSTM_2/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Exit_2"
  op: "Exit"
  input: "resCONVLSTM_2/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Exit_3"
  op: "Exit"
  input: "resCONVLSTM_2/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/while/Exit_4"
  op: "Exit"
  input: "resCONVLSTM_2/rnn/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "resCONVLSTM_2/rnn/TensorArray"
  input: "resCONVLSTM_2/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/TensorArrayStack/range"
  op: "Range"
  input: "resCONVLSTM_2/rnn/TensorArrayStack/range/start"
  input: "resCONVLSTM_2/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "resCONVLSTM_2/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "resCONVLSTM_2/rnn/TensorArray"
  input: "resCONVLSTM_2/rnn/TensorArrayStack/range"
  input: "resCONVLSTM_2/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/range_1"
  op: "Range"
  input: "resCONVLSTM_2/rnn/range_1/start"
  input: "resCONVLSTM_2/rnn/Rank_1"
  input: "resCONVLSTM_2/rnn/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/concat_2"
  op: "ConcatV2"
  input: "resCONVLSTM_2/rnn/concat_2/values_0"
  input: "resCONVLSTM_2/rnn/range_1"
  input: "resCONVLSTM_2/rnn/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/transpose_1"
  op: "Transpose"
  input: "resCONVLSTM_2/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "resCONVLSTM_2/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm/beta"
  input: "resCONVLSTM_2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/beta/read"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm/moving_mean"
  input: "resCONVLSTM_2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm/moving_variance"
  input: "resCONVLSTM_2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond/Switch"
  op: "Switch"
  input: "train_mode"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond/switch_t"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond/switch_f"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond/pred_id"
  op: "Identity"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond/Const"
  op: "Const"
  input: "^resCONVLSTM_2/BatchNorm/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond/Const_1"
  op: "Const"
  input: "^resCONVLSTM_2/BatchNorm/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm/Switch:1"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm/Switch_1:1"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm/Switch_2:1"
  input: "resCONVLSTM_2/BatchNorm/cond/Const"
  input: "resCONVLSTM_2/BatchNorm/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "resCONVLSTM_2/rnn/transpose_1"
  input: "resCONVLSTM_2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/transpose_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm/Const"
  input: "resCONVLSTM_2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/Const"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm/beta/read"
  input: "resCONVLSTM_2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1/Switch"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1/Switch_2"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "resCONVLSTM_2/rnn/transpose_1"
  input: "resCONVLSTM_2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/transpose_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm/Const"
  input: "resCONVLSTM_2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/Const"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm/beta/read"
  input: "resCONVLSTM_2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm/moving_mean/read"
  input: "resCONVLSTM_2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm/moving_variance/read"
  input: "resCONVLSTM_2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond/Merge"
  op: "Merge"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond/Merge_1"
  op: "Merge"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1:1"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond/Merge_2"
  op: "Merge"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1:2"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/Switch"
  op: "Switch"
  input: "train_mode"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/switch_t"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/switch_f"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/pred_id"
  op: "Identity"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/decay"
  op: "Const"
  input: "^resCONVLSTM_2/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/biased/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/biased"
  input: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/biased/read"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/local_step/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/local_step"
  input: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/local_step/read"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/sub"
  op: "Sub"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/sub/Switch:1"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/biased/read"
  input: "resCONVLSTM_2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/sub/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm/cond/Merge_1"
  input: "resCONVLSTM_2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/cond/Merge_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/mul"
  op: "Mul"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/sub"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/AssignSub/Switch:1"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/AssignSub/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/biased"
  input: "resCONVLSTM_2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  input: "^resCONVLSTM_2/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/Switch:1"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/local_step"
  input: "resCONVLSTM_2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/sub_1/x"
  op: "Const"
  input: "^resCONVLSTM_2/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/sub_1/x"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/Pow"
  op: "Pow"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/sub_1"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/sub_2/x"
  op: "Const"
  input: "^resCONVLSTM_2/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/sub_2/x"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/AssignSub"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/Switch:1"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_2/BatchNorm/moving_mean"
  input: "resCONVLSTM_2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^resCONVLSTM_2/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch:1"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm/moving_variance/read"
  input: "resCONVLSTM_2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm/cond/Merge_2"
  input: "resCONVLSTM_2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/cond/Merge_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg_1/sub"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg_1/Switch:1"
  input: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_2/BatchNorm/moving_variance"
  input: "resCONVLSTM_2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/Identity"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm/cond_1/Identity/Switch:1"
  input: "^resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg"
  input: "^resCONVLSTM_2/BatchNorm/cond_1/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/Identity/Switch"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm/cond/Merge"
  input: "resCONVLSTM_2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/cond/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm/cond/Merge"
  input: "resCONVLSTM_2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/cond/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/cond_1/Merge"
  op: "Merge"
  input: "resCONVLSTM_2/BatchNorm/cond_1/Switch_1"
  input: "resCONVLSTM_2/BatchNorm/cond_1/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/Relu"
  op: "Relu"
  input: "resCONVLSTM_2/BatchNorm/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/range"
  op: "Range"
  input: "resCONVLSTM_2/rnn_1/range/start"
  input: "resCONVLSTM_2/rnn_1/Rank"
  input: "resCONVLSTM_2/rnn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_2/rnn_1/concat/values_0"
  input: "resCONVLSTM_2/rnn_1/range"
  input: "resCONVLSTM_2/rnn_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/transpose"
  op: "Transpose"
  input: "resCONVLSTM_2/Relu"
  input: "resCONVLSTM_2/rnn_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/strided_slice"
  op: "StridedSlice"
  input: "resCONVLSTM_2/rnn_1/Shape"
  input: "resCONVLSTM_2/rnn_1/strided_slice/stack"
  input: "resCONVLSTM_2/rnn_1/strided_slice/stack_1"
  input: "resCONVLSTM_2/rnn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_2/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/strided_slice_1"
  op: "StridedSlice"
  input: "resCONVLSTM_2/rnn_1/Shape_1"
  input: "resCONVLSTM_2/rnn_1/strided_slice_1/stack"
  input: "resCONVLSTM_2/rnn_1/strided_slice_1/stack_1"
  input: "resCONVLSTM_2/rnn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/Shape_2"
  op: "Shape"
  input: "resCONVLSTM_2/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/strided_slice_2"
  op: "StridedSlice"
  input: "resCONVLSTM_2/rnn_1/Shape_2"
  input: "resCONVLSTM_2/rnn_1/strided_slice_2/stack"
  input: "resCONVLSTM_2/rnn_1/strided_slice_2/stack_1"
  input: "resCONVLSTM_2/rnn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_2/rnn_1/strided_slice_2"
  input: "resCONVLSTM_2/rnn_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/concat_1"
  op: "ConcatV2"
  input: "resCONVLSTM_2/rnn_1/ExpandDims"
  input: "resCONVLSTM_2/rnn_1/Const"
  input: "resCONVLSTM_2/rnn_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/zeros"
  op: "Fill"
  input: "resCONVLSTM_2/rnn_1/concat_1"
  input: "resCONVLSTM_2/rnn_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/TensorArray"
  op: "TensorArrayV3"
  input: "resCONVLSTM_2/rnn_1/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "resCONVLSTM_2/rnn_1/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/TensorArray_1"
  op: "TensorArrayV3"
  input: "resCONVLSTM_2/rnn_1/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "resCONVLSTM_2/rnn_1/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "resCONVLSTM_2/rnn_1/TensorArrayUnstack/Shape"
  input: "resCONVLSTM_2/rnn_1/TensorArrayUnstack/strided_slice/stack"
  input: "resCONVLSTM_2/rnn_1/TensorArrayUnstack/strided_slice/stack_1"
  input: "resCONVLSTM_2/rnn_1/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/TensorArrayUnstack/range"
  op: "Range"
  input: "resCONVLSTM_2/rnn_1/TensorArrayUnstack/range/start"
  input: "resCONVLSTM_2/rnn_1/TensorArrayUnstack/strided_slice"
  input: "resCONVLSTM_2/rnn_1/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "resCONVLSTM_2/rnn_1/TensorArray_1"
  input: "resCONVLSTM_2/rnn_1/TensorArrayUnstack/range"
  input: "resCONVLSTM_2/rnn_1/transpose"
  input: "resCONVLSTM_2/rnn_1/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/transpose"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/Maximum/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/Maximum"
  op: "Maximum"
  input: "resCONVLSTM_2/rnn_1/Maximum/x"
  input: "resCONVLSTM_2/rnn_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/Minimum"
  op: "Minimum"
  input: "resCONVLSTM_2/rnn_1/strided_slice_1"
  input: "resCONVLSTM_2/rnn_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Enter"
  op: "Enter"
  input: "resCONVLSTM_2/rnn_1/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Enter_1"
  op: "Enter"
  input: "resCONVLSTM_2/rnn_1/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Enter_2"
  op: "Enter"
  input: "resCONVLSTM_2/rnn_1/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Enter_3"
  op: "Enter"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Enter_4"
  op: "Enter"
  input: "resCONVLSTM_2/ConvLSTMCellZeroState_1/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Merge"
  op: "Merge"
  input: "resCONVLSTM_2/rnn_1/while/Enter"
  input: "resCONVLSTM_2/rnn_1/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Merge_1"
  op: "Merge"
  input: "resCONVLSTM_2/rnn_1/while/Enter_1"
  input: "resCONVLSTM_2/rnn_1/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Merge_2"
  op: "Merge"
  input: "resCONVLSTM_2/rnn_1/while/Enter_2"
  input: "resCONVLSTM_2/rnn_1/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Merge_3"
  op: "Merge"
  input: "resCONVLSTM_2/rnn_1/while/Enter_3"
  input: "resCONVLSTM_2/rnn_1/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Merge_4"
  op: "Merge"
  input: "resCONVLSTM_2/rnn_1/while/Enter_4"
  input: "resCONVLSTM_2/rnn_1/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Less"
  op: "Less"
  input: "resCONVLSTM_2/rnn_1/while/Merge"
  input: "resCONVLSTM_2/rnn_1/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Less/Enter"
  op: "Enter"
  input: "resCONVLSTM_2/rnn_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Less_1"
  op: "Less"
  input: "resCONVLSTM_2/rnn_1/while/Merge_1"
  input: "resCONVLSTM_2/rnn_1/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Less_1/Enter"
  op: "Enter"
  input: "resCONVLSTM_2/rnn_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/LogicalAnd"
  op: "LogicalAnd"
  input: "resCONVLSTM_2/rnn_1/while/Less"
  input: "resCONVLSTM_2/rnn_1/while/Less_1"
}
node {
  name: "resCONVLSTM_2/rnn_1/while/LoopCond"
  op: "LoopCond"
  input: "resCONVLSTM_2/rnn_1/while/LogicalAnd"
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Switch"
  op: "Switch"
  input: "resCONVLSTM_2/rnn_1/while/Merge"
  input: "resCONVLSTM_2/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_2/rnn_1/while/Merge_1"
  input: "resCONVLSTM_2/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/Merge_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_2/rnn_1/while/Merge_2"
  input: "resCONVLSTM_2/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/Merge_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Switch_3"
  op: "Switch"
  input: "resCONVLSTM_2/rnn_1/while/Merge_3"
  input: "resCONVLSTM_2/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/Merge_3"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Switch_4"
  op: "Switch"
  input: "resCONVLSTM_2/rnn_1/while/Merge_4"
  input: "resCONVLSTM_2/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/Merge_4"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Identity"
  op: "Identity"
  input: "resCONVLSTM_2/rnn_1/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Identity_1"
  op: "Identity"
  input: "resCONVLSTM_2/rnn_1/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Identity_2"
  op: "Identity"
  input: "resCONVLSTM_2/rnn_1/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Identity_3"
  op: "Identity"
  input: "resCONVLSTM_2/rnn_1/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Identity_4"
  op: "Identity"
  input: "resCONVLSTM_2/rnn_1/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/add/y"
  op: "Const"
  input: "^resCONVLSTM_2/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/add"
  op: "Add"
  input: "resCONVLSTM_2/rnn_1/while/Identity"
  input: "resCONVLSTM_2/rnn_1/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter"
  input: "resCONVLSTM_2/rnn_1/while/Identity_1"
  input: "resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_2/rnn_1/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "resCONVLSTM_2/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\n\000\000\000\002\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3162277638912201
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3162277638912201
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "resCONVLSTM_2/rnn/conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "resCONVLSTM_2/rnn/conv2/kernel/Initializer/random_uniform/max"
  input: "resCONVLSTM_2/rnn/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "resCONVLSTM_2/rnn/conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "resCONVLSTM_2/rnn/conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "resCONVLSTM_2/rnn/conv2/kernel/Initializer/random_uniform/mul"
  input: "resCONVLSTM_2/rnn/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/kernel/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv2/kernel"
  input: "resCONVLSTM_2/rnn/conv2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/kernel/read"
  op: "Identity"
  input: "resCONVLSTM_2/rnn/conv2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/concat/axis"
  op: "Const"
  input: "^resCONVLSTM_2/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_2/rnn_1/while/TensorArrayReadV3"
  input: "resCONVLSTM_2/rnn_1/while/Identity_4"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims/dim"
  op: "Const"
  input: "^resCONVLSTM_2/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/concat"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/dim"
  op: "Const"
  input: "^resCONVLSTM_2/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter"
  op: "Enter"
  input: "resCONVLSTM_2/rnn/conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d"
  op: "Conv2D"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze"
  op: "Squeeze"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/biases/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv2/biases"
  input: "resCONVLSTM_2/rnn/conv2/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/biases/read"
  op: "Identity"
  input: "resCONVLSTM_2/rnn/conv2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/add"
  op: "Add"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/add/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/add/Enter"
  op: "Enter"
  input: "resCONVLSTM_2/rnn/conv2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/Const"
  op: "Const"
  input: "^resCONVLSTM_2/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/split/split_dim"
  op: "Const"
  input: "^resCONVLSTM_2/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/split"
  op: "Split"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/split/split_dim"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1/y"
  op: "Const"
  input: "^resCONVLSTM_2/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1"
  op: "Add"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/split:2"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid"
  op: "Sigmoid"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/mul"
  op: "Mul"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid"
  input: "resCONVLSTM_2/rnn_1/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid_1"
  op: "Sigmoid"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/Tanh"
  op: "Tanh"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1"
  op: "Mul"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid_1"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2"
  op: "Add"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/mul"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/Tanh_1"
  op: "Tanh"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid_2"
  op: "Sigmoid"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2"
  op: "Mul"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/Tanh_1"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "resCONVLSTM_2/rnn_1/while/Identity_1"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2"
  input: "resCONVLSTM_2/rnn_1/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_2/rnn_1/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/add_1/y"
  op: "Const"
  input: "^resCONVLSTM_2/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/add_1"
  op: "Add"
  input: "resCONVLSTM_2/rnn_1/while/Identity_1"
  input: "resCONVLSTM_2/rnn_1/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/NextIteration"
  op: "NextIteration"
  input: "resCONVLSTM_2/rnn_1/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/NextIteration_1"
  op: "NextIteration"
  input: "resCONVLSTM_2/rnn_1/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/NextIteration_2"
  op: "NextIteration"
  input: "resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/NextIteration_3"
  op: "NextIteration"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/NextIteration_4"
  op: "NextIteration"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Exit"
  op: "Exit"
  input: "resCONVLSTM_2/rnn_1/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Exit_1"
  op: "Exit"
  input: "resCONVLSTM_2/rnn_1/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Exit_2"
  op: "Exit"
  input: "resCONVLSTM_2/rnn_1/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Exit_3"
  op: "Exit"
  input: "resCONVLSTM_2/rnn_1/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/while/Exit_4"
  op: "Exit"
  input: "resCONVLSTM_2/rnn_1/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "resCONVLSTM_2/rnn_1/TensorArray"
  input: "resCONVLSTM_2/rnn_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/TensorArray"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/TensorArrayStack/range"
  op: "Range"
  input: "resCONVLSTM_2/rnn_1/TensorArrayStack/range/start"
  input: "resCONVLSTM_2/rnn_1/TensorArrayStack/TensorArraySizeV3"
  input: "resCONVLSTM_2/rnn_1/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/TensorArray"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "resCONVLSTM_2/rnn_1/TensorArray"
  input: "resCONVLSTM_2/rnn_1/TensorArrayStack/range"
  input: "resCONVLSTM_2/rnn_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/range_1"
  op: "Range"
  input: "resCONVLSTM_2/rnn_1/range_1/start"
  input: "resCONVLSTM_2/rnn_1/Rank_1"
  input: "resCONVLSTM_2/rnn_1/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/concat_2"
  op: "ConcatV2"
  input: "resCONVLSTM_2/rnn_1/concat_2/values_0"
  input: "resCONVLSTM_2/rnn_1/range_1"
  input: "resCONVLSTM_2/rnn_1/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn_1/transpose_1"
  op: "Transpose"
  input: "resCONVLSTM_2/rnn_1/TensorArrayStack/TensorArrayGatherV3"
  input: "resCONVLSTM_2/rnn_1/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/beta/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm_1/beta"
  input: "resCONVLSTM_2/BatchNorm_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/beta/read"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/moving_mean/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm_1/moving_mean"
  input: "resCONVLSTM_2/BatchNorm_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/moving_mean/read"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/moving_variance/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm_1/moving_variance"
  input: "resCONVLSTM_2/BatchNorm_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/moving_variance/read"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond/Switch"
  op: "Switch"
  input: "train_mode"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond/switch_t"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond/switch_f"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond/pred_id"
  op: "Identity"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond/Const"
  op: "Const"
  input: "^resCONVLSTM_2/BatchNorm_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond/Const_1"
  op: "Const"
  input: "^resCONVLSTM_2/BatchNorm_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm/Switch:1"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm/Switch_1:1"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm/Switch_2:1"
  input: "resCONVLSTM_2/BatchNorm_1/cond/Const"
  input: "resCONVLSTM_2/BatchNorm_1/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "resCONVLSTM_2/rnn_1/transpose_1"
  input: "resCONVLSTM_2/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/transpose_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm_1/Const"
  input: "resCONVLSTM_2/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/Const"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm_1/beta/read"
  input: "resCONVLSTM_2/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1/Switch"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1/Switch_1"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1/Switch_2"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1/Switch_3"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "resCONVLSTM_2/rnn_1/transpose_1"
  input: "resCONVLSTM_2/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/transpose_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm_1/Const"
  input: "resCONVLSTM_2/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/Const"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm_1/beta/read"
  input: "resCONVLSTM_2/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm_1/moving_mean/read"
  input: "resCONVLSTM_2/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm_1/moving_variance/read"
  input: "resCONVLSTM_2/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond/Merge"
  op: "Merge"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond/Merge_1"
  op: "Merge"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1:1"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond/Merge_2"
  op: "Merge"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1:2"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/Switch"
  op: "Switch"
  input: "train_mode"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/switch_t"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/switch_f"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/pred_id"
  op: "Identity"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/decay"
  op: "Const"
  input: "^resCONVLSTM_2/BatchNorm_1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/biased"
  input: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/biased/read"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/local_step"
  input: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/local_step/read"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/sub"
  op: "Sub"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/sub/Switch:1"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/biased/read"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/sub/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm_1/cond/Merge_1"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/cond/Merge_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/mul"
  op: "Mul"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/sub"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/AssignSub/Switch:1"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/AssignSub/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/biased"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  input: "^resCONVLSTM_2/BatchNorm_1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd/Switch:1"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/local_step"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/sub_1/x"
  op: "Const"
  input: "^resCONVLSTM_2/BatchNorm_1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/sub_1/x"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/Pow"
  op: "Pow"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/sub_1"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/sub_2/x"
  op: "Const"
  input: "^resCONVLSTM_2/BatchNorm_1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/sub_2/x"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/AssignSub"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/Switch:1"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_2/BatchNorm_1/moving_mean"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^resCONVLSTM_2/BatchNorm_1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg_1/sub/Switch:1"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg_1/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm_1/moving_variance/read"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg_1/sub/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm_1/cond/Merge_2"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/cond/Merge_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg_1/sub"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg_1/Switch:1"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_2/BatchNorm_1/moving_variance"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/Identity"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/Identity/Switch:1"
  input: "^resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg"
  input: "^resCONVLSTM_2/BatchNorm_1/cond_1/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/Identity/Switch"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm_1/cond/Merge"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/cond/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm_1/cond/Merge"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/cond/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/cond_1/Merge"
  op: "Merge"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/Switch_1"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/Relu"
  op: "Relu"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/Add"
  op: "Add"
  input: "resCONVLSTM_2/BatchNorm_1/Relu"
  input: "resCONVLSTM_1/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_2/Relu_1"
  op: "Relu"
  input: "resCONVLSTM_2/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/strided_slice"
  op: "StridedSlice"
  input: "resCONVLSTM_3/Shape"
  input: "resCONVLSTM_3/strided_slice/stack"
  input: "resCONVLSTM_3/strided_slice/stack_1"
  input: "resCONVLSTM_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_3/strided_slice"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState/ExpandDims"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState/Const"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState/zeros"
  op: "Fill"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState/concat"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "resCONVLSTM_3/strided_slice"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "resCONVLSTM_3/strided_slice"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState/ExpandDims_2"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState/Const_2"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState/concat_1"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "resCONVLSTM_3/strided_slice"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState_1/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_3/strided_slice"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState_1/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState_1/ExpandDims"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState_1/Const"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState_1/concat"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState_1/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState_1/ExpandDims_1"
  op: "ExpandDims"
  input: "resCONVLSTM_3/strided_slice"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState_1/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState_1/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState_1/ExpandDims_2"
  op: "ExpandDims"
  input: "resCONVLSTM_3/strided_slice"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState_1/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState_1/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState_1/concat_1"
  op: "ConcatV2"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState_1/ExpandDims_2"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState_1/Const_2"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState_1/concat_1"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState_1/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState_1/ExpandDims_3"
  op: "ExpandDims"
  input: "resCONVLSTM_3/strided_slice"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState_1/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/ConvLSTMCellZeroState_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/range"
  op: "Range"
  input: "resCONVLSTM_3/rnn/range/start"
  input: "resCONVLSTM_3/rnn/Rank"
  input: "resCONVLSTM_3/rnn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_3/rnn/concat/values_0"
  input: "resCONVLSTM_3/rnn/range"
  input: "resCONVLSTM_3/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/transpose"
  op: "Transpose"
  input: "resCONVLSTM_2/Relu_1"
  input: "resCONVLSTM_3/rnn/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/strided_slice"
  op: "StridedSlice"
  input: "resCONVLSTM_3/rnn/Shape"
  input: "resCONVLSTM_3/rnn/strided_slice/stack"
  input: "resCONVLSTM_3/rnn/strided_slice/stack_1"
  input: "resCONVLSTM_3/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_3/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/strided_slice_1"
  op: "StridedSlice"
  input: "resCONVLSTM_3/rnn/Shape_1"
  input: "resCONVLSTM_3/rnn/strided_slice_1/stack"
  input: "resCONVLSTM_3/rnn/strided_slice_1/stack_1"
  input: "resCONVLSTM_3/rnn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/Shape_2"
  op: "Shape"
  input: "resCONVLSTM_3/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/strided_slice_2"
  op: "StridedSlice"
  input: "resCONVLSTM_3/rnn/Shape_2"
  input: "resCONVLSTM_3/rnn/strided_slice_2/stack"
  input: "resCONVLSTM_3/rnn/strided_slice_2/stack_1"
  input: "resCONVLSTM_3/rnn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_3/rnn/strided_slice_2"
  input: "resCONVLSTM_3/rnn/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/concat_1"
  op: "ConcatV2"
  input: "resCONVLSTM_3/rnn/ExpandDims"
  input: "resCONVLSTM_3/rnn/Const"
  input: "resCONVLSTM_3/rnn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/zeros"
  op: "Fill"
  input: "resCONVLSTM_3/rnn/concat_1"
  input: "resCONVLSTM_3/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "resCONVLSTM_3/rnn/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "resCONVLSTM_3/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "resCONVLSTM_3/rnn/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "resCONVLSTM_3/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "resCONVLSTM_3/rnn/TensorArrayUnstack/Shape"
  input: "resCONVLSTM_3/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "resCONVLSTM_3/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "resCONVLSTM_3/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "resCONVLSTM_3/rnn/TensorArrayUnstack/range/start"
  input: "resCONVLSTM_3/rnn/TensorArrayUnstack/strided_slice"
  input: "resCONVLSTM_3/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "resCONVLSTM_3/rnn/TensorArray_1"
  input: "resCONVLSTM_3/rnn/TensorArrayUnstack/range"
  input: "resCONVLSTM_3/rnn/transpose"
  input: "resCONVLSTM_3/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/transpose"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/Maximum/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/Maximum"
  op: "Maximum"
  input: "resCONVLSTM_3/rnn/Maximum/x"
  input: "resCONVLSTM_3/rnn/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/Minimum"
  op: "Minimum"
  input: "resCONVLSTM_3/rnn/strided_slice_1"
  input: "resCONVLSTM_3/rnn/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Enter"
  op: "Enter"
  input: "resCONVLSTM_3/rnn/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Enter_1"
  op: "Enter"
  input: "resCONVLSTM_3/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Enter_2"
  op: "Enter"
  input: "resCONVLSTM_3/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Enter_3"
  op: "Enter"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Enter_4"
  op: "Enter"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Merge"
  op: "Merge"
  input: "resCONVLSTM_3/rnn/while/Enter"
  input: "resCONVLSTM_3/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Merge_1"
  op: "Merge"
  input: "resCONVLSTM_3/rnn/while/Enter_1"
  input: "resCONVLSTM_3/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Merge_2"
  op: "Merge"
  input: "resCONVLSTM_3/rnn/while/Enter_2"
  input: "resCONVLSTM_3/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Merge_3"
  op: "Merge"
  input: "resCONVLSTM_3/rnn/while/Enter_3"
  input: "resCONVLSTM_3/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Merge_4"
  op: "Merge"
  input: "resCONVLSTM_3/rnn/while/Enter_4"
  input: "resCONVLSTM_3/rnn/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Less"
  op: "Less"
  input: "resCONVLSTM_3/rnn/while/Merge"
  input: "resCONVLSTM_3/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Less/Enter"
  op: "Enter"
  input: "resCONVLSTM_3/rnn/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Less_1"
  op: "Less"
  input: "resCONVLSTM_3/rnn/while/Merge_1"
  input: "resCONVLSTM_3/rnn/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "resCONVLSTM_3/rnn/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "resCONVLSTM_3/rnn/while/Less"
  input: "resCONVLSTM_3/rnn/while/Less_1"
}
node {
  name: "resCONVLSTM_3/rnn/while/LoopCond"
  op: "LoopCond"
  input: "resCONVLSTM_3/rnn/while/LogicalAnd"
}
node {
  name: "resCONVLSTM_3/rnn/while/Switch"
  op: "Switch"
  input: "resCONVLSTM_3/rnn/while/Merge"
  input: "resCONVLSTM_3/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_3/rnn/while/Merge_1"
  input: "resCONVLSTM_3/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/Merge_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_3/rnn/while/Merge_2"
  input: "resCONVLSTM_3/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/Merge_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Switch_3"
  op: "Switch"
  input: "resCONVLSTM_3/rnn/while/Merge_3"
  input: "resCONVLSTM_3/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/Merge_3"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Switch_4"
  op: "Switch"
  input: "resCONVLSTM_3/rnn/while/Merge_4"
  input: "resCONVLSTM_3/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/Merge_4"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Identity"
  op: "Identity"
  input: "resCONVLSTM_3/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Identity_1"
  op: "Identity"
  input: "resCONVLSTM_3/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Identity_2"
  op: "Identity"
  input: "resCONVLSTM_3/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Identity_3"
  op: "Identity"
  input: "resCONVLSTM_3/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Identity_4"
  op: "Identity"
  input: "resCONVLSTM_3/rnn/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/add/y"
  op: "Const"
  input: "^resCONVLSTM_3/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/add"
  op: "Add"
  input: "resCONVLSTM_3/rnn/while/Identity"
  input: "resCONVLSTM_3/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter"
  input: "resCONVLSTM_3/rnn/while/Identity_1"
  input: "resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_3/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "resCONVLSTM_3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\n\000\000\000\002\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3162277638912201
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3162277638912201
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "resCONVLSTM_3/rnn/conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "resCONVLSTM_3/rnn/conv1/kernel/Initializer/random_uniform/max"
  input: "resCONVLSTM_3/rnn/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "resCONVLSTM_3/rnn/conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "resCONVLSTM_3/rnn/conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "resCONVLSTM_3/rnn/conv1/kernel/Initializer/random_uniform/mul"
  input: "resCONVLSTM_3/rnn/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/kernel/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv1/kernel"
  input: "resCONVLSTM_3/rnn/conv1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/kernel/read"
  op: "Identity"
  input: "resCONVLSTM_3/rnn/conv1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/concat/axis"
  op: "Const"
  input: "^resCONVLSTM_3/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_3/rnn/while/TensorArrayReadV3"
  input: "resCONVLSTM_3/rnn/while/Identity_4"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims/dim"
  op: "Const"
  input: "^resCONVLSTM_3/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/concat"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1/dim"
  op: "Const"
  input: "^resCONVLSTM_3/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter"
  op: "Enter"
  input: "resCONVLSTM_3/rnn/conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/conv1d"
  op: "Conv2D"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze"
  op: "Squeeze"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/conv1d"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/biases/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv1/biases"
  input: "resCONVLSTM_3/rnn/conv1/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/biases/read"
  op: "Identity"
  input: "resCONVLSTM_3/rnn/conv1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/add"
  op: "Add"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/add/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/add/Enter"
  op: "Enter"
  input: "resCONVLSTM_3/rnn/conv1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/Const"
  op: "Const"
  input: "^resCONVLSTM_3/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/split/split_dim"
  op: "Const"
  input: "^resCONVLSTM_3/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/split"
  op: "Split"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/split/split_dim"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/add_1/y"
  op: "Const"
  input: "^resCONVLSTM_3/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/add_1"
  op: "Add"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/split:2"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid"
  op: "Sigmoid"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/mul"
  op: "Mul"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid"
  input: "resCONVLSTM_3/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid_1"
  op: "Sigmoid"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/Tanh"
  op: "Tanh"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/mul_1"
  op: "Mul"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid_1"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/add_2"
  op: "Add"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/mul"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/Tanh_1"
  op: "Tanh"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid_2"
  op: "Sigmoid"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/rnn/conv1/mul_2"
  op: "Mul"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/Tanh_1"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "resCONVLSTM_3/rnn/while/Identity_1"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/mul_2"
  input: "resCONVLSTM_3/rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/rnn/conv1/mul_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_3/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/rnn/conv1/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/add_1/y"
  op: "Const"
  input: "^resCONVLSTM_3/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/add_1"
  op: "Add"
  input: "resCONVLSTM_3/rnn/while/Identity_1"
  input: "resCONVLSTM_3/rnn/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/NextIteration"
  op: "NextIteration"
  input: "resCONVLSTM_3/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "resCONVLSTM_3/rnn/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/NextIteration_4"
  op: "NextIteration"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Exit"
  op: "Exit"
  input: "resCONVLSTM_3/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Exit_1"
  op: "Exit"
  input: "resCONVLSTM_3/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Exit_2"
  op: "Exit"
  input: "resCONVLSTM_3/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Exit_3"
  op: "Exit"
  input: "resCONVLSTM_3/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/while/Exit_4"
  op: "Exit"
  input: "resCONVLSTM_3/rnn/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "resCONVLSTM_3/rnn/TensorArray"
  input: "resCONVLSTM_3/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/TensorArrayStack/range"
  op: "Range"
  input: "resCONVLSTM_3/rnn/TensorArrayStack/range/start"
  input: "resCONVLSTM_3/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "resCONVLSTM_3/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "resCONVLSTM_3/rnn/TensorArray"
  input: "resCONVLSTM_3/rnn/TensorArrayStack/range"
  input: "resCONVLSTM_3/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/range_1"
  op: "Range"
  input: "resCONVLSTM_3/rnn/range_1/start"
  input: "resCONVLSTM_3/rnn/Rank_1"
  input: "resCONVLSTM_3/rnn/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/concat_2"
  op: "ConcatV2"
  input: "resCONVLSTM_3/rnn/concat_2/values_0"
  input: "resCONVLSTM_3/rnn/range_1"
  input: "resCONVLSTM_3/rnn/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/transpose_1"
  op: "Transpose"
  input: "resCONVLSTM_3/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "resCONVLSTM_3/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm/beta"
  input: "resCONVLSTM_3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/beta/read"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm/moving_mean"
  input: "resCONVLSTM_3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm/moving_variance"
  input: "resCONVLSTM_3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond/Switch"
  op: "Switch"
  input: "train_mode"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond/switch_t"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond/switch_f"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond/pred_id"
  op: "Identity"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond/Const"
  op: "Const"
  input: "^resCONVLSTM_3/BatchNorm/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond/Const_1"
  op: "Const"
  input: "^resCONVLSTM_3/BatchNorm/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm/Switch:1"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm/Switch_1:1"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm/Switch_2:1"
  input: "resCONVLSTM_3/BatchNorm/cond/Const"
  input: "resCONVLSTM_3/BatchNorm/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "resCONVLSTM_3/rnn/transpose_1"
  input: "resCONVLSTM_3/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/transpose_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm/Const"
  input: "resCONVLSTM_3/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/Const"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm/beta/read"
  input: "resCONVLSTM_3/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1/Switch"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1/Switch_2"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "resCONVLSTM_3/rnn/transpose_1"
  input: "resCONVLSTM_3/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/transpose_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm/Const"
  input: "resCONVLSTM_3/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/Const"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm/beta/read"
  input: "resCONVLSTM_3/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm/moving_mean/read"
  input: "resCONVLSTM_3/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm/moving_variance/read"
  input: "resCONVLSTM_3/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond/Merge"
  op: "Merge"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond/Merge_1"
  op: "Merge"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1:1"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond/Merge_2"
  op: "Merge"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1:2"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/Switch"
  op: "Switch"
  input: "train_mode"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/switch_t"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/switch_f"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/pred_id"
  op: "Identity"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/decay"
  op: "Const"
  input: "^resCONVLSTM_3/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/biased/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/biased"
  input: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/biased/read"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/local_step/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/local_step"
  input: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/local_step/read"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/sub"
  op: "Sub"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/sub/Switch:1"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/biased/read"
  input: "resCONVLSTM_3/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/sub/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm/cond/Merge_1"
  input: "resCONVLSTM_3/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/cond/Merge_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/mul"
  op: "Mul"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/sub"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/AssignSub/Switch:1"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/AssignSub/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/biased"
  input: "resCONVLSTM_3/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  input: "^resCONVLSTM_3/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/Switch:1"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/local_step"
  input: "resCONVLSTM_3/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/sub_1/x"
  op: "Const"
  input: "^resCONVLSTM_3/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/sub_1/x"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/Pow"
  op: "Pow"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/sub_1"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/sub_2/x"
  op: "Const"
  input: "^resCONVLSTM_3/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/sub_2/x"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/AssignSub"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/Switch:1"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_3/BatchNorm/moving_mean"
  input: "resCONVLSTM_3/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^resCONVLSTM_3/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch:1"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm/moving_variance/read"
  input: "resCONVLSTM_3/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm/cond/Merge_2"
  input: "resCONVLSTM_3/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/cond/Merge_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg_1/sub"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg_1/Switch:1"
  input: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_3/BatchNorm/moving_variance"
  input: "resCONVLSTM_3/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/Identity"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm/cond_1/Identity/Switch:1"
  input: "^resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg"
  input: "^resCONVLSTM_3/BatchNorm/cond_1/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/Identity/Switch"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm/cond/Merge"
  input: "resCONVLSTM_3/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/cond/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm/cond/Merge"
  input: "resCONVLSTM_3/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/cond/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/cond_1/Merge"
  op: "Merge"
  input: "resCONVLSTM_3/BatchNorm/cond_1/Switch_1"
  input: "resCONVLSTM_3/BatchNorm/cond_1/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/Relu"
  op: "Relu"
  input: "resCONVLSTM_3/BatchNorm/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/range"
  op: "Range"
  input: "resCONVLSTM_3/rnn_1/range/start"
  input: "resCONVLSTM_3/rnn_1/Rank"
  input: "resCONVLSTM_3/rnn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_3/rnn_1/concat/values_0"
  input: "resCONVLSTM_3/rnn_1/range"
  input: "resCONVLSTM_3/rnn_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/transpose"
  op: "Transpose"
  input: "resCONVLSTM_3/Relu"
  input: "resCONVLSTM_3/rnn_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/strided_slice"
  op: "StridedSlice"
  input: "resCONVLSTM_3/rnn_1/Shape"
  input: "resCONVLSTM_3/rnn_1/strided_slice/stack"
  input: "resCONVLSTM_3/rnn_1/strided_slice/stack_1"
  input: "resCONVLSTM_3/rnn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_3/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/strided_slice_1"
  op: "StridedSlice"
  input: "resCONVLSTM_3/rnn_1/Shape_1"
  input: "resCONVLSTM_3/rnn_1/strided_slice_1/stack"
  input: "resCONVLSTM_3/rnn_1/strided_slice_1/stack_1"
  input: "resCONVLSTM_3/rnn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/Shape_2"
  op: "Shape"
  input: "resCONVLSTM_3/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/strided_slice_2"
  op: "StridedSlice"
  input: "resCONVLSTM_3/rnn_1/Shape_2"
  input: "resCONVLSTM_3/rnn_1/strided_slice_2/stack"
  input: "resCONVLSTM_3/rnn_1/strided_slice_2/stack_1"
  input: "resCONVLSTM_3/rnn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_3/rnn_1/strided_slice_2"
  input: "resCONVLSTM_3/rnn_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/concat_1"
  op: "ConcatV2"
  input: "resCONVLSTM_3/rnn_1/ExpandDims"
  input: "resCONVLSTM_3/rnn_1/Const"
  input: "resCONVLSTM_3/rnn_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/zeros"
  op: "Fill"
  input: "resCONVLSTM_3/rnn_1/concat_1"
  input: "resCONVLSTM_3/rnn_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/TensorArray"
  op: "TensorArrayV3"
  input: "resCONVLSTM_3/rnn_1/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "resCONVLSTM_3/rnn_1/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/TensorArray_1"
  op: "TensorArrayV3"
  input: "resCONVLSTM_3/rnn_1/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "resCONVLSTM_3/rnn_1/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "resCONVLSTM_3/rnn_1/TensorArrayUnstack/Shape"
  input: "resCONVLSTM_3/rnn_1/TensorArrayUnstack/strided_slice/stack"
  input: "resCONVLSTM_3/rnn_1/TensorArrayUnstack/strided_slice/stack_1"
  input: "resCONVLSTM_3/rnn_1/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/TensorArrayUnstack/range"
  op: "Range"
  input: "resCONVLSTM_3/rnn_1/TensorArrayUnstack/range/start"
  input: "resCONVLSTM_3/rnn_1/TensorArrayUnstack/strided_slice"
  input: "resCONVLSTM_3/rnn_1/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "resCONVLSTM_3/rnn_1/TensorArray_1"
  input: "resCONVLSTM_3/rnn_1/TensorArrayUnstack/range"
  input: "resCONVLSTM_3/rnn_1/transpose"
  input: "resCONVLSTM_3/rnn_1/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/transpose"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/Maximum/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/Maximum"
  op: "Maximum"
  input: "resCONVLSTM_3/rnn_1/Maximum/x"
  input: "resCONVLSTM_3/rnn_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/Minimum"
  op: "Minimum"
  input: "resCONVLSTM_3/rnn_1/strided_slice_1"
  input: "resCONVLSTM_3/rnn_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Enter"
  op: "Enter"
  input: "resCONVLSTM_3/rnn_1/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Enter_1"
  op: "Enter"
  input: "resCONVLSTM_3/rnn_1/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Enter_2"
  op: "Enter"
  input: "resCONVLSTM_3/rnn_1/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Enter_3"
  op: "Enter"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Enter_4"
  op: "Enter"
  input: "resCONVLSTM_3/ConvLSTMCellZeroState_1/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Merge"
  op: "Merge"
  input: "resCONVLSTM_3/rnn_1/while/Enter"
  input: "resCONVLSTM_3/rnn_1/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Merge_1"
  op: "Merge"
  input: "resCONVLSTM_3/rnn_1/while/Enter_1"
  input: "resCONVLSTM_3/rnn_1/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Merge_2"
  op: "Merge"
  input: "resCONVLSTM_3/rnn_1/while/Enter_2"
  input: "resCONVLSTM_3/rnn_1/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Merge_3"
  op: "Merge"
  input: "resCONVLSTM_3/rnn_1/while/Enter_3"
  input: "resCONVLSTM_3/rnn_1/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Merge_4"
  op: "Merge"
  input: "resCONVLSTM_3/rnn_1/while/Enter_4"
  input: "resCONVLSTM_3/rnn_1/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Less"
  op: "Less"
  input: "resCONVLSTM_3/rnn_1/while/Merge"
  input: "resCONVLSTM_3/rnn_1/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Less/Enter"
  op: "Enter"
  input: "resCONVLSTM_3/rnn_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Less_1"
  op: "Less"
  input: "resCONVLSTM_3/rnn_1/while/Merge_1"
  input: "resCONVLSTM_3/rnn_1/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Less_1/Enter"
  op: "Enter"
  input: "resCONVLSTM_3/rnn_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/LogicalAnd"
  op: "LogicalAnd"
  input: "resCONVLSTM_3/rnn_1/while/Less"
  input: "resCONVLSTM_3/rnn_1/while/Less_1"
}
node {
  name: "resCONVLSTM_3/rnn_1/while/LoopCond"
  op: "LoopCond"
  input: "resCONVLSTM_3/rnn_1/while/LogicalAnd"
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Switch"
  op: "Switch"
  input: "resCONVLSTM_3/rnn_1/while/Merge"
  input: "resCONVLSTM_3/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_3/rnn_1/while/Merge_1"
  input: "resCONVLSTM_3/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/Merge_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_3/rnn_1/while/Merge_2"
  input: "resCONVLSTM_3/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/Merge_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Switch_3"
  op: "Switch"
  input: "resCONVLSTM_3/rnn_1/while/Merge_3"
  input: "resCONVLSTM_3/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/Merge_3"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Switch_4"
  op: "Switch"
  input: "resCONVLSTM_3/rnn_1/while/Merge_4"
  input: "resCONVLSTM_3/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/Merge_4"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Identity"
  op: "Identity"
  input: "resCONVLSTM_3/rnn_1/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Identity_1"
  op: "Identity"
  input: "resCONVLSTM_3/rnn_1/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Identity_2"
  op: "Identity"
  input: "resCONVLSTM_3/rnn_1/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Identity_3"
  op: "Identity"
  input: "resCONVLSTM_3/rnn_1/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Identity_4"
  op: "Identity"
  input: "resCONVLSTM_3/rnn_1/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/add/y"
  op: "Const"
  input: "^resCONVLSTM_3/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/add"
  op: "Add"
  input: "resCONVLSTM_3/rnn_1/while/Identity"
  input: "resCONVLSTM_3/rnn_1/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter"
  input: "resCONVLSTM_3/rnn_1/while/Identity_1"
  input: "resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_3/rnn_1/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "resCONVLSTM_3/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\n\000\000\000\002\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3162277638912201
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3162277638912201
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "resCONVLSTM_3/rnn/conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "resCONVLSTM_3/rnn/conv2/kernel/Initializer/random_uniform/max"
  input: "resCONVLSTM_3/rnn/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "resCONVLSTM_3/rnn/conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "resCONVLSTM_3/rnn/conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "resCONVLSTM_3/rnn/conv2/kernel/Initializer/random_uniform/mul"
  input: "resCONVLSTM_3/rnn/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/kernel/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv2/kernel"
  input: "resCONVLSTM_3/rnn/conv2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/kernel/read"
  op: "Identity"
  input: "resCONVLSTM_3/rnn/conv2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/concat/axis"
  op: "Const"
  input: "^resCONVLSTM_3/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_3/rnn_1/while/TensorArrayReadV3"
  input: "resCONVLSTM_3/rnn_1/while/Identity_4"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims/dim"
  op: "Const"
  input: "^resCONVLSTM_3/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/concat"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/dim"
  op: "Const"
  input: "^resCONVLSTM_3/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter"
  op: "Enter"
  input: "resCONVLSTM_3/rnn/conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d"
  op: "Conv2D"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze"
  op: "Squeeze"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/biases/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv2/biases"
  input: "resCONVLSTM_3/rnn/conv2/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/biases/read"
  op: "Identity"
  input: "resCONVLSTM_3/rnn/conv2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/add"
  op: "Add"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/add/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/add/Enter"
  op: "Enter"
  input: "resCONVLSTM_3/rnn/conv2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/Const"
  op: "Const"
  input: "^resCONVLSTM_3/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/split/split_dim"
  op: "Const"
  input: "^resCONVLSTM_3/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/split"
  op: "Split"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/split/split_dim"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1/y"
  op: "Const"
  input: "^resCONVLSTM_3/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1"
  op: "Add"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/split:2"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid"
  op: "Sigmoid"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/mul"
  op: "Mul"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid"
  input: "resCONVLSTM_3/rnn_1/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid_1"
  op: "Sigmoid"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/Tanh"
  op: "Tanh"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1"
  op: "Mul"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid_1"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2"
  op: "Add"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/mul"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/Tanh_1"
  op: "Tanh"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid_2"
  op: "Sigmoid"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2"
  op: "Mul"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/Tanh_1"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "resCONVLSTM_3/rnn_1/while/Identity_1"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2"
  input: "resCONVLSTM_3/rnn_1/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_3/rnn_1/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/add_1/y"
  op: "Const"
  input: "^resCONVLSTM_3/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/add_1"
  op: "Add"
  input: "resCONVLSTM_3/rnn_1/while/Identity_1"
  input: "resCONVLSTM_3/rnn_1/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/NextIteration"
  op: "NextIteration"
  input: "resCONVLSTM_3/rnn_1/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/NextIteration_1"
  op: "NextIteration"
  input: "resCONVLSTM_3/rnn_1/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/NextIteration_2"
  op: "NextIteration"
  input: "resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/NextIteration_3"
  op: "NextIteration"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/NextIteration_4"
  op: "NextIteration"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Exit"
  op: "Exit"
  input: "resCONVLSTM_3/rnn_1/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Exit_1"
  op: "Exit"
  input: "resCONVLSTM_3/rnn_1/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Exit_2"
  op: "Exit"
  input: "resCONVLSTM_3/rnn_1/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Exit_3"
  op: "Exit"
  input: "resCONVLSTM_3/rnn_1/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/while/Exit_4"
  op: "Exit"
  input: "resCONVLSTM_3/rnn_1/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "resCONVLSTM_3/rnn_1/TensorArray"
  input: "resCONVLSTM_3/rnn_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/TensorArray"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/TensorArrayStack/range"
  op: "Range"
  input: "resCONVLSTM_3/rnn_1/TensorArrayStack/range/start"
  input: "resCONVLSTM_3/rnn_1/TensorArrayStack/TensorArraySizeV3"
  input: "resCONVLSTM_3/rnn_1/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/TensorArray"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "resCONVLSTM_3/rnn_1/TensorArray"
  input: "resCONVLSTM_3/rnn_1/TensorArrayStack/range"
  input: "resCONVLSTM_3/rnn_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/range_1"
  op: "Range"
  input: "resCONVLSTM_3/rnn_1/range_1/start"
  input: "resCONVLSTM_3/rnn_1/Rank_1"
  input: "resCONVLSTM_3/rnn_1/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/concat_2"
  op: "ConcatV2"
  input: "resCONVLSTM_3/rnn_1/concat_2/values_0"
  input: "resCONVLSTM_3/rnn_1/range_1"
  input: "resCONVLSTM_3/rnn_1/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn_1/transpose_1"
  op: "Transpose"
  input: "resCONVLSTM_3/rnn_1/TensorArrayStack/TensorArrayGatherV3"
  input: "resCONVLSTM_3/rnn_1/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/beta/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm_1/beta"
  input: "resCONVLSTM_3/BatchNorm_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/beta/read"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/moving_mean/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm_1/moving_mean"
  input: "resCONVLSTM_3/BatchNorm_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/moving_mean/read"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/moving_variance/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm_1/moving_variance"
  input: "resCONVLSTM_3/BatchNorm_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/moving_variance/read"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond/Switch"
  op: "Switch"
  input: "train_mode"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond/switch_t"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond/switch_f"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond/pred_id"
  op: "Identity"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond/Const"
  op: "Const"
  input: "^resCONVLSTM_3/BatchNorm_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond/Const_1"
  op: "Const"
  input: "^resCONVLSTM_3/BatchNorm_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm/Switch:1"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm/Switch_1:1"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm/Switch_2:1"
  input: "resCONVLSTM_3/BatchNorm_1/cond/Const"
  input: "resCONVLSTM_3/BatchNorm_1/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "resCONVLSTM_3/rnn_1/transpose_1"
  input: "resCONVLSTM_3/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/transpose_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm_1/Const"
  input: "resCONVLSTM_3/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/Const"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm_1/beta/read"
  input: "resCONVLSTM_3/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1/Switch"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1/Switch_1"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1/Switch_2"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1/Switch_3"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "resCONVLSTM_3/rnn_1/transpose_1"
  input: "resCONVLSTM_3/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/transpose_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm_1/Const"
  input: "resCONVLSTM_3/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/Const"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm_1/beta/read"
  input: "resCONVLSTM_3/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm_1/moving_mean/read"
  input: "resCONVLSTM_3/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm_1/moving_variance/read"
  input: "resCONVLSTM_3/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond/Merge"
  op: "Merge"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond/Merge_1"
  op: "Merge"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1:1"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond/Merge_2"
  op: "Merge"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1:2"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/Switch"
  op: "Switch"
  input: "train_mode"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/switch_t"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/switch_f"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/pred_id"
  op: "Identity"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/decay"
  op: "Const"
  input: "^resCONVLSTM_3/BatchNorm_1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/biased"
  input: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/biased/read"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/local_step"
  input: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/local_step/read"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/sub"
  op: "Sub"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/sub/Switch:1"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/biased/read"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/sub/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm_1/cond/Merge_1"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/cond/Merge_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/mul"
  op: "Mul"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/sub"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/AssignSub/Switch:1"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/AssignSub/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/biased"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  input: "^resCONVLSTM_3/BatchNorm_1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd/Switch:1"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/local_step"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/sub_1/x"
  op: "Const"
  input: "^resCONVLSTM_3/BatchNorm_1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/sub_1/x"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/Pow"
  op: "Pow"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/sub_1"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/sub_2/x"
  op: "Const"
  input: "^resCONVLSTM_3/BatchNorm_1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/sub_2/x"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/AssignSub"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/Switch:1"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_3/BatchNorm_1/moving_mean"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^resCONVLSTM_3/BatchNorm_1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg_1/sub/Switch:1"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg_1/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm_1/moving_variance/read"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg_1/sub/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm_1/cond/Merge_2"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/cond/Merge_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg_1/sub"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg_1/Switch:1"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_3/BatchNorm_1/moving_variance"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/Identity"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/Identity/Switch:1"
  input: "^resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg"
  input: "^resCONVLSTM_3/BatchNorm_1/cond_1/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/Identity/Switch"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm_1/cond/Merge"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/cond/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm_1/cond/Merge"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/cond/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/cond_1/Merge"
  op: "Merge"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/Switch_1"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/Relu"
  op: "Relu"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/Add"
  op: "Add"
  input: "resCONVLSTM_3/BatchNorm_1/Relu"
  input: "resCONVLSTM_2/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_3/Relu_1"
  op: "Relu"
  input: "resCONVLSTM_3/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/strided_slice"
  op: "StridedSlice"
  input: "resCONVLSTM_4/Shape"
  input: "resCONVLSTM_4/strided_slice/stack"
  input: "resCONVLSTM_4/strided_slice/stack_1"
  input: "resCONVLSTM_4/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_4/strided_slice"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState/ExpandDims"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState/Const"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState/zeros"
  op: "Fill"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState/concat"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "resCONVLSTM_4/strided_slice"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "resCONVLSTM_4/strided_slice"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState/ExpandDims_2"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState/Const_2"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState/concat_1"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "resCONVLSTM_4/strided_slice"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState_1/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_4/strided_slice"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState_1/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState_1/ExpandDims"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState_1/Const"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState_1/concat"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState_1/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState_1/ExpandDims_1"
  op: "ExpandDims"
  input: "resCONVLSTM_4/strided_slice"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState_1/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState_1/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState_1/ExpandDims_2"
  op: "ExpandDims"
  input: "resCONVLSTM_4/strided_slice"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState_1/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState_1/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState_1/concat_1"
  op: "ConcatV2"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState_1/ExpandDims_2"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState_1/Const_2"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState_1/concat_1"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState_1/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState_1/ExpandDims_3"
  op: "ExpandDims"
  input: "resCONVLSTM_4/strided_slice"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState_1/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/ConvLSTMCellZeroState_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/range"
  op: "Range"
  input: "resCONVLSTM_4/rnn/range/start"
  input: "resCONVLSTM_4/rnn/Rank"
  input: "resCONVLSTM_4/rnn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_4/rnn/concat/values_0"
  input: "resCONVLSTM_4/rnn/range"
  input: "resCONVLSTM_4/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/transpose"
  op: "Transpose"
  input: "resCONVLSTM_3/Relu_1"
  input: "resCONVLSTM_4/rnn/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/strided_slice"
  op: "StridedSlice"
  input: "resCONVLSTM_4/rnn/Shape"
  input: "resCONVLSTM_4/rnn/strided_slice/stack"
  input: "resCONVLSTM_4/rnn/strided_slice/stack_1"
  input: "resCONVLSTM_4/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_4/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/strided_slice_1"
  op: "StridedSlice"
  input: "resCONVLSTM_4/rnn/Shape_1"
  input: "resCONVLSTM_4/rnn/strided_slice_1/stack"
  input: "resCONVLSTM_4/rnn/strided_slice_1/stack_1"
  input: "resCONVLSTM_4/rnn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/Shape_2"
  op: "Shape"
  input: "resCONVLSTM_4/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/strided_slice_2"
  op: "StridedSlice"
  input: "resCONVLSTM_4/rnn/Shape_2"
  input: "resCONVLSTM_4/rnn/strided_slice_2/stack"
  input: "resCONVLSTM_4/rnn/strided_slice_2/stack_1"
  input: "resCONVLSTM_4/rnn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_4/rnn/strided_slice_2"
  input: "resCONVLSTM_4/rnn/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/concat_1"
  op: "ConcatV2"
  input: "resCONVLSTM_4/rnn/ExpandDims"
  input: "resCONVLSTM_4/rnn/Const"
  input: "resCONVLSTM_4/rnn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/zeros"
  op: "Fill"
  input: "resCONVLSTM_4/rnn/concat_1"
  input: "resCONVLSTM_4/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "resCONVLSTM_4/rnn/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "resCONVLSTM_4/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "resCONVLSTM_4/rnn/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "resCONVLSTM_4/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "resCONVLSTM_4/rnn/TensorArrayUnstack/Shape"
  input: "resCONVLSTM_4/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "resCONVLSTM_4/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "resCONVLSTM_4/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "resCONVLSTM_4/rnn/TensorArrayUnstack/range/start"
  input: "resCONVLSTM_4/rnn/TensorArrayUnstack/strided_slice"
  input: "resCONVLSTM_4/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "resCONVLSTM_4/rnn/TensorArray_1"
  input: "resCONVLSTM_4/rnn/TensorArrayUnstack/range"
  input: "resCONVLSTM_4/rnn/transpose"
  input: "resCONVLSTM_4/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/transpose"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/Maximum/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/Maximum"
  op: "Maximum"
  input: "resCONVLSTM_4/rnn/Maximum/x"
  input: "resCONVLSTM_4/rnn/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/Minimum"
  op: "Minimum"
  input: "resCONVLSTM_4/rnn/strided_slice_1"
  input: "resCONVLSTM_4/rnn/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Enter"
  op: "Enter"
  input: "resCONVLSTM_4/rnn/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Enter_1"
  op: "Enter"
  input: "resCONVLSTM_4/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Enter_2"
  op: "Enter"
  input: "resCONVLSTM_4/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Enter_3"
  op: "Enter"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Enter_4"
  op: "Enter"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Merge"
  op: "Merge"
  input: "resCONVLSTM_4/rnn/while/Enter"
  input: "resCONVLSTM_4/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Merge_1"
  op: "Merge"
  input: "resCONVLSTM_4/rnn/while/Enter_1"
  input: "resCONVLSTM_4/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Merge_2"
  op: "Merge"
  input: "resCONVLSTM_4/rnn/while/Enter_2"
  input: "resCONVLSTM_4/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Merge_3"
  op: "Merge"
  input: "resCONVLSTM_4/rnn/while/Enter_3"
  input: "resCONVLSTM_4/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Merge_4"
  op: "Merge"
  input: "resCONVLSTM_4/rnn/while/Enter_4"
  input: "resCONVLSTM_4/rnn/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Less"
  op: "Less"
  input: "resCONVLSTM_4/rnn/while/Merge"
  input: "resCONVLSTM_4/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Less/Enter"
  op: "Enter"
  input: "resCONVLSTM_4/rnn/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Less_1"
  op: "Less"
  input: "resCONVLSTM_4/rnn/while/Merge_1"
  input: "resCONVLSTM_4/rnn/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "resCONVLSTM_4/rnn/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "resCONVLSTM_4/rnn/while/Less"
  input: "resCONVLSTM_4/rnn/while/Less_1"
}
node {
  name: "resCONVLSTM_4/rnn/while/LoopCond"
  op: "LoopCond"
  input: "resCONVLSTM_4/rnn/while/LogicalAnd"
}
node {
  name: "resCONVLSTM_4/rnn/while/Switch"
  op: "Switch"
  input: "resCONVLSTM_4/rnn/while/Merge"
  input: "resCONVLSTM_4/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_4/rnn/while/Merge_1"
  input: "resCONVLSTM_4/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/Merge_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_4/rnn/while/Merge_2"
  input: "resCONVLSTM_4/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/Merge_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Switch_3"
  op: "Switch"
  input: "resCONVLSTM_4/rnn/while/Merge_3"
  input: "resCONVLSTM_4/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/Merge_3"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Switch_4"
  op: "Switch"
  input: "resCONVLSTM_4/rnn/while/Merge_4"
  input: "resCONVLSTM_4/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/Merge_4"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Identity"
  op: "Identity"
  input: "resCONVLSTM_4/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Identity_1"
  op: "Identity"
  input: "resCONVLSTM_4/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Identity_2"
  op: "Identity"
  input: "resCONVLSTM_4/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Identity_3"
  op: "Identity"
  input: "resCONVLSTM_4/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Identity_4"
  op: "Identity"
  input: "resCONVLSTM_4/rnn/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/add/y"
  op: "Const"
  input: "^resCONVLSTM_4/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/add"
  op: "Add"
  input: "resCONVLSTM_4/rnn/while/Identity"
  input: "resCONVLSTM_4/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter"
  input: "resCONVLSTM_4/rnn/while/Identity_1"
  input: "resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_4/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "resCONVLSTM_4/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\n\000\000\000\002\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3162277638912201
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3162277638912201
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "resCONVLSTM_4/rnn/conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "resCONVLSTM_4/rnn/conv1/kernel/Initializer/random_uniform/max"
  input: "resCONVLSTM_4/rnn/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "resCONVLSTM_4/rnn/conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "resCONVLSTM_4/rnn/conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "resCONVLSTM_4/rnn/conv1/kernel/Initializer/random_uniform/mul"
  input: "resCONVLSTM_4/rnn/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/kernel/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv1/kernel"
  input: "resCONVLSTM_4/rnn/conv1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/kernel/read"
  op: "Identity"
  input: "resCONVLSTM_4/rnn/conv1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/concat/axis"
  op: "Const"
  input: "^resCONVLSTM_4/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_4/rnn/while/TensorArrayReadV3"
  input: "resCONVLSTM_4/rnn/while/Identity_4"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims/dim"
  op: "Const"
  input: "^resCONVLSTM_4/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/concat"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1/dim"
  op: "Const"
  input: "^resCONVLSTM_4/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter"
  op: "Enter"
  input: "resCONVLSTM_4/rnn/conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/conv1d"
  op: "Conv2D"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze"
  op: "Squeeze"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/conv1d"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/biases/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv1/biases"
  input: "resCONVLSTM_4/rnn/conv1/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/biases/read"
  op: "Identity"
  input: "resCONVLSTM_4/rnn/conv1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/add"
  op: "Add"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/add/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/add/Enter"
  op: "Enter"
  input: "resCONVLSTM_4/rnn/conv1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/Const"
  op: "Const"
  input: "^resCONVLSTM_4/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/split/split_dim"
  op: "Const"
  input: "^resCONVLSTM_4/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/split"
  op: "Split"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/split/split_dim"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/add_1/y"
  op: "Const"
  input: "^resCONVLSTM_4/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/add_1"
  op: "Add"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/split:2"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid"
  op: "Sigmoid"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/mul"
  op: "Mul"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid"
  input: "resCONVLSTM_4/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid_1"
  op: "Sigmoid"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/Tanh"
  op: "Tanh"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/mul_1"
  op: "Mul"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid_1"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/add_2"
  op: "Add"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/mul"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/Tanh_1"
  op: "Tanh"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid_2"
  op: "Sigmoid"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/rnn/conv1/mul_2"
  op: "Mul"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/Tanh_1"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "resCONVLSTM_4/rnn/while/Identity_1"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/mul_2"
  input: "resCONVLSTM_4/rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/rnn/conv1/mul_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_4/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/rnn/conv1/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/add_1/y"
  op: "Const"
  input: "^resCONVLSTM_4/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/add_1"
  op: "Add"
  input: "resCONVLSTM_4/rnn/while/Identity_1"
  input: "resCONVLSTM_4/rnn/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/NextIteration"
  op: "NextIteration"
  input: "resCONVLSTM_4/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "resCONVLSTM_4/rnn/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/NextIteration_4"
  op: "NextIteration"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Exit"
  op: "Exit"
  input: "resCONVLSTM_4/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Exit_1"
  op: "Exit"
  input: "resCONVLSTM_4/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Exit_2"
  op: "Exit"
  input: "resCONVLSTM_4/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Exit_3"
  op: "Exit"
  input: "resCONVLSTM_4/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/while/Exit_4"
  op: "Exit"
  input: "resCONVLSTM_4/rnn/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "resCONVLSTM_4/rnn/TensorArray"
  input: "resCONVLSTM_4/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/TensorArrayStack/range"
  op: "Range"
  input: "resCONVLSTM_4/rnn/TensorArrayStack/range/start"
  input: "resCONVLSTM_4/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "resCONVLSTM_4/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "resCONVLSTM_4/rnn/TensorArray"
  input: "resCONVLSTM_4/rnn/TensorArrayStack/range"
  input: "resCONVLSTM_4/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/range_1"
  op: "Range"
  input: "resCONVLSTM_4/rnn/range_1/start"
  input: "resCONVLSTM_4/rnn/Rank_1"
  input: "resCONVLSTM_4/rnn/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/concat_2"
  op: "ConcatV2"
  input: "resCONVLSTM_4/rnn/concat_2/values_0"
  input: "resCONVLSTM_4/rnn/range_1"
  input: "resCONVLSTM_4/rnn/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/transpose_1"
  op: "Transpose"
  input: "resCONVLSTM_4/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "resCONVLSTM_4/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm/beta"
  input: "resCONVLSTM_4/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/beta/read"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm/moving_mean"
  input: "resCONVLSTM_4/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm/moving_variance"
  input: "resCONVLSTM_4/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond/Switch"
  op: "Switch"
  input: "train_mode"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond/switch_t"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond/switch_f"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond/pred_id"
  op: "Identity"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond/Const"
  op: "Const"
  input: "^resCONVLSTM_4/BatchNorm/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond/Const_1"
  op: "Const"
  input: "^resCONVLSTM_4/BatchNorm/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm/Switch:1"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm/Switch_1:1"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm/Switch_2:1"
  input: "resCONVLSTM_4/BatchNorm/cond/Const"
  input: "resCONVLSTM_4/BatchNorm/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "resCONVLSTM_4/rnn/transpose_1"
  input: "resCONVLSTM_4/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/transpose_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm/Const"
  input: "resCONVLSTM_4/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/Const"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm/beta/read"
  input: "resCONVLSTM_4/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1/Switch"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1/Switch_2"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "resCONVLSTM_4/rnn/transpose_1"
  input: "resCONVLSTM_4/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/transpose_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm/Const"
  input: "resCONVLSTM_4/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/Const"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm/beta/read"
  input: "resCONVLSTM_4/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm/moving_mean/read"
  input: "resCONVLSTM_4/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm/moving_variance/read"
  input: "resCONVLSTM_4/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond/Merge"
  op: "Merge"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond/Merge_1"
  op: "Merge"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1:1"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond/Merge_2"
  op: "Merge"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1:2"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/Switch"
  op: "Switch"
  input: "train_mode"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/switch_t"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/switch_f"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/pred_id"
  op: "Identity"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/decay"
  op: "Const"
  input: "^resCONVLSTM_4/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/biased/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/biased"
  input: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/biased/read"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/local_step/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/local_step"
  input: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/local_step/read"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/sub"
  op: "Sub"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/sub/Switch:1"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/biased/read"
  input: "resCONVLSTM_4/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/sub/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm/cond/Merge_1"
  input: "resCONVLSTM_4/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/cond/Merge_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/mul"
  op: "Mul"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/sub"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/AssignSub/Switch:1"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/AssignSub/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/biased"
  input: "resCONVLSTM_4/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  input: "^resCONVLSTM_4/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/Switch:1"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/local_step"
  input: "resCONVLSTM_4/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/sub_1/x"
  op: "Const"
  input: "^resCONVLSTM_4/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/sub_1/x"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/Pow"
  op: "Pow"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/sub_1"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/sub_2/x"
  op: "Const"
  input: "^resCONVLSTM_4/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/sub_2/x"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/AssignSub"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/Switch:1"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_4/BatchNorm/moving_mean"
  input: "resCONVLSTM_4/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^resCONVLSTM_4/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch:1"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm/moving_variance/read"
  input: "resCONVLSTM_4/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm/cond/Merge_2"
  input: "resCONVLSTM_4/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/cond/Merge_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg_1/sub"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg_1/Switch:1"
  input: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_4/BatchNorm/moving_variance"
  input: "resCONVLSTM_4/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/Identity"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm/cond_1/Identity/Switch:1"
  input: "^resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg"
  input: "^resCONVLSTM_4/BatchNorm/cond_1/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/Identity/Switch"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm/cond/Merge"
  input: "resCONVLSTM_4/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/cond/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm/cond/Merge"
  input: "resCONVLSTM_4/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/cond/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/cond_1/Merge"
  op: "Merge"
  input: "resCONVLSTM_4/BatchNorm/cond_1/Switch_1"
  input: "resCONVLSTM_4/BatchNorm/cond_1/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/Relu"
  op: "Relu"
  input: "resCONVLSTM_4/BatchNorm/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/range"
  op: "Range"
  input: "resCONVLSTM_4/rnn_1/range/start"
  input: "resCONVLSTM_4/rnn_1/Rank"
  input: "resCONVLSTM_4/rnn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_4/rnn_1/concat/values_0"
  input: "resCONVLSTM_4/rnn_1/range"
  input: "resCONVLSTM_4/rnn_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/transpose"
  op: "Transpose"
  input: "resCONVLSTM_4/Relu"
  input: "resCONVLSTM_4/rnn_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/strided_slice"
  op: "StridedSlice"
  input: "resCONVLSTM_4/rnn_1/Shape"
  input: "resCONVLSTM_4/rnn_1/strided_slice/stack"
  input: "resCONVLSTM_4/rnn_1/strided_slice/stack_1"
  input: "resCONVLSTM_4/rnn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_4/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/strided_slice_1"
  op: "StridedSlice"
  input: "resCONVLSTM_4/rnn_1/Shape_1"
  input: "resCONVLSTM_4/rnn_1/strided_slice_1/stack"
  input: "resCONVLSTM_4/rnn_1/strided_slice_1/stack_1"
  input: "resCONVLSTM_4/rnn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/Shape_2"
  op: "Shape"
  input: "resCONVLSTM_4/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/strided_slice_2"
  op: "StridedSlice"
  input: "resCONVLSTM_4/rnn_1/Shape_2"
  input: "resCONVLSTM_4/rnn_1/strided_slice_2/stack"
  input: "resCONVLSTM_4/rnn_1/strided_slice_2/stack_1"
  input: "resCONVLSTM_4/rnn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_4/rnn_1/strided_slice_2"
  input: "resCONVLSTM_4/rnn_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/concat_1"
  op: "ConcatV2"
  input: "resCONVLSTM_4/rnn_1/ExpandDims"
  input: "resCONVLSTM_4/rnn_1/Const"
  input: "resCONVLSTM_4/rnn_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/zeros"
  op: "Fill"
  input: "resCONVLSTM_4/rnn_1/concat_1"
  input: "resCONVLSTM_4/rnn_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/TensorArray"
  op: "TensorArrayV3"
  input: "resCONVLSTM_4/rnn_1/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "resCONVLSTM_4/rnn_1/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/TensorArray_1"
  op: "TensorArrayV3"
  input: "resCONVLSTM_4/rnn_1/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "resCONVLSTM_4/rnn_1/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "resCONVLSTM_4/rnn_1/TensorArrayUnstack/Shape"
  input: "resCONVLSTM_4/rnn_1/TensorArrayUnstack/strided_slice/stack"
  input: "resCONVLSTM_4/rnn_1/TensorArrayUnstack/strided_slice/stack_1"
  input: "resCONVLSTM_4/rnn_1/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/TensorArrayUnstack/range"
  op: "Range"
  input: "resCONVLSTM_4/rnn_1/TensorArrayUnstack/range/start"
  input: "resCONVLSTM_4/rnn_1/TensorArrayUnstack/strided_slice"
  input: "resCONVLSTM_4/rnn_1/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "resCONVLSTM_4/rnn_1/TensorArray_1"
  input: "resCONVLSTM_4/rnn_1/TensorArrayUnstack/range"
  input: "resCONVLSTM_4/rnn_1/transpose"
  input: "resCONVLSTM_4/rnn_1/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/transpose"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/Maximum/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/Maximum"
  op: "Maximum"
  input: "resCONVLSTM_4/rnn_1/Maximum/x"
  input: "resCONVLSTM_4/rnn_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/Minimum"
  op: "Minimum"
  input: "resCONVLSTM_4/rnn_1/strided_slice_1"
  input: "resCONVLSTM_4/rnn_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Enter"
  op: "Enter"
  input: "resCONVLSTM_4/rnn_1/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Enter_1"
  op: "Enter"
  input: "resCONVLSTM_4/rnn_1/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Enter_2"
  op: "Enter"
  input: "resCONVLSTM_4/rnn_1/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Enter_3"
  op: "Enter"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Enter_4"
  op: "Enter"
  input: "resCONVLSTM_4/ConvLSTMCellZeroState_1/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Merge"
  op: "Merge"
  input: "resCONVLSTM_4/rnn_1/while/Enter"
  input: "resCONVLSTM_4/rnn_1/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Merge_1"
  op: "Merge"
  input: "resCONVLSTM_4/rnn_1/while/Enter_1"
  input: "resCONVLSTM_4/rnn_1/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Merge_2"
  op: "Merge"
  input: "resCONVLSTM_4/rnn_1/while/Enter_2"
  input: "resCONVLSTM_4/rnn_1/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Merge_3"
  op: "Merge"
  input: "resCONVLSTM_4/rnn_1/while/Enter_3"
  input: "resCONVLSTM_4/rnn_1/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Merge_4"
  op: "Merge"
  input: "resCONVLSTM_4/rnn_1/while/Enter_4"
  input: "resCONVLSTM_4/rnn_1/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Less"
  op: "Less"
  input: "resCONVLSTM_4/rnn_1/while/Merge"
  input: "resCONVLSTM_4/rnn_1/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Less/Enter"
  op: "Enter"
  input: "resCONVLSTM_4/rnn_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Less_1"
  op: "Less"
  input: "resCONVLSTM_4/rnn_1/while/Merge_1"
  input: "resCONVLSTM_4/rnn_1/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Less_1/Enter"
  op: "Enter"
  input: "resCONVLSTM_4/rnn_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/LogicalAnd"
  op: "LogicalAnd"
  input: "resCONVLSTM_4/rnn_1/while/Less"
  input: "resCONVLSTM_4/rnn_1/while/Less_1"
}
node {
  name: "resCONVLSTM_4/rnn_1/while/LoopCond"
  op: "LoopCond"
  input: "resCONVLSTM_4/rnn_1/while/LogicalAnd"
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Switch"
  op: "Switch"
  input: "resCONVLSTM_4/rnn_1/while/Merge"
  input: "resCONVLSTM_4/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_4/rnn_1/while/Merge_1"
  input: "resCONVLSTM_4/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/Merge_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_4/rnn_1/while/Merge_2"
  input: "resCONVLSTM_4/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/Merge_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Switch_3"
  op: "Switch"
  input: "resCONVLSTM_4/rnn_1/while/Merge_3"
  input: "resCONVLSTM_4/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/Merge_3"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Switch_4"
  op: "Switch"
  input: "resCONVLSTM_4/rnn_1/while/Merge_4"
  input: "resCONVLSTM_4/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/Merge_4"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Identity"
  op: "Identity"
  input: "resCONVLSTM_4/rnn_1/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Identity_1"
  op: "Identity"
  input: "resCONVLSTM_4/rnn_1/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Identity_2"
  op: "Identity"
  input: "resCONVLSTM_4/rnn_1/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Identity_3"
  op: "Identity"
  input: "resCONVLSTM_4/rnn_1/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Identity_4"
  op: "Identity"
  input: "resCONVLSTM_4/rnn_1/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/add/y"
  op: "Const"
  input: "^resCONVLSTM_4/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/add"
  op: "Add"
  input: "resCONVLSTM_4/rnn_1/while/Identity"
  input: "resCONVLSTM_4/rnn_1/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter"
  input: "resCONVLSTM_4/rnn_1/while/Identity_1"
  input: "resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_4/rnn_1/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "resCONVLSTM_4/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\n\000\000\000\002\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3162277638912201
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3162277638912201
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "resCONVLSTM_4/rnn/conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "resCONVLSTM_4/rnn/conv2/kernel/Initializer/random_uniform/max"
  input: "resCONVLSTM_4/rnn/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "resCONVLSTM_4/rnn/conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "resCONVLSTM_4/rnn/conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "resCONVLSTM_4/rnn/conv2/kernel/Initializer/random_uniform/mul"
  input: "resCONVLSTM_4/rnn/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/kernel/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv2/kernel"
  input: "resCONVLSTM_4/rnn/conv2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/kernel/read"
  op: "Identity"
  input: "resCONVLSTM_4/rnn/conv2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/concat/axis"
  op: "Const"
  input: "^resCONVLSTM_4/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/concat"
  op: "ConcatV2"
  input: "resCONVLSTM_4/rnn_1/while/TensorArrayReadV3"
  input: "resCONVLSTM_4/rnn_1/while/Identity_4"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims/dim"
  op: "Const"
  input: "^resCONVLSTM_4/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/concat"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/dim"
  op: "Const"
  input: "^resCONVLSTM_4/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter"
  op: "Enter"
  input: "resCONVLSTM_4/rnn/conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d"
  op: "Conv2D"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze"
  op: "Squeeze"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/biases/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv2/biases"
  input: "resCONVLSTM_4/rnn/conv2/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/biases/read"
  op: "Identity"
  input: "resCONVLSTM_4/rnn/conv2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/add"
  op: "Add"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/add/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/add/Enter"
  op: "Enter"
  input: "resCONVLSTM_4/rnn/conv2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/Const"
  op: "Const"
  input: "^resCONVLSTM_4/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/split/split_dim"
  op: "Const"
  input: "^resCONVLSTM_4/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/split"
  op: "Split"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/split/split_dim"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1/y"
  op: "Const"
  input: "^resCONVLSTM_4/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1"
  op: "Add"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/split:2"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid"
  op: "Sigmoid"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/mul"
  op: "Mul"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid"
  input: "resCONVLSTM_4/rnn_1/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid_1"
  op: "Sigmoid"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/Tanh"
  op: "Tanh"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1"
  op: "Mul"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid_1"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2"
  op: "Add"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/mul"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/Tanh_1"
  op: "Tanh"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid_2"
  op: "Sigmoid"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2"
  op: "Mul"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/Tanh_1"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "resCONVLSTM_4/rnn_1/while/Identity_1"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2"
  input: "resCONVLSTM_4/rnn_1/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_4/rnn_1/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/add_1/y"
  op: "Const"
  input: "^resCONVLSTM_4/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/add_1"
  op: "Add"
  input: "resCONVLSTM_4/rnn_1/while/Identity_1"
  input: "resCONVLSTM_4/rnn_1/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/NextIteration"
  op: "NextIteration"
  input: "resCONVLSTM_4/rnn_1/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/NextIteration_1"
  op: "NextIteration"
  input: "resCONVLSTM_4/rnn_1/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/NextIteration_2"
  op: "NextIteration"
  input: "resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/NextIteration_3"
  op: "NextIteration"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/NextIteration_4"
  op: "NextIteration"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Exit"
  op: "Exit"
  input: "resCONVLSTM_4/rnn_1/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Exit_1"
  op: "Exit"
  input: "resCONVLSTM_4/rnn_1/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Exit_2"
  op: "Exit"
  input: "resCONVLSTM_4/rnn_1/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Exit_3"
  op: "Exit"
  input: "resCONVLSTM_4/rnn_1/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/while/Exit_4"
  op: "Exit"
  input: "resCONVLSTM_4/rnn_1/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "resCONVLSTM_4/rnn_1/TensorArray"
  input: "resCONVLSTM_4/rnn_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/TensorArray"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/TensorArrayStack/range"
  op: "Range"
  input: "resCONVLSTM_4/rnn_1/TensorArrayStack/range/start"
  input: "resCONVLSTM_4/rnn_1/TensorArrayStack/TensorArraySizeV3"
  input: "resCONVLSTM_4/rnn_1/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/TensorArray"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "resCONVLSTM_4/rnn_1/TensorArray"
  input: "resCONVLSTM_4/rnn_1/TensorArrayStack/range"
  input: "resCONVLSTM_4/rnn_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/range_1"
  op: "Range"
  input: "resCONVLSTM_4/rnn_1/range_1/start"
  input: "resCONVLSTM_4/rnn_1/Rank_1"
  input: "resCONVLSTM_4/rnn_1/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/concat_2"
  op: "ConcatV2"
  input: "resCONVLSTM_4/rnn_1/concat_2/values_0"
  input: "resCONVLSTM_4/rnn_1/range_1"
  input: "resCONVLSTM_4/rnn_1/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn_1/transpose_1"
  op: "Transpose"
  input: "resCONVLSTM_4/rnn_1/TensorArrayStack/TensorArrayGatherV3"
  input: "resCONVLSTM_4/rnn_1/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/beta/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm_1/beta"
  input: "resCONVLSTM_4/BatchNorm_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/beta/read"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/moving_mean/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm_1/moving_mean"
  input: "resCONVLSTM_4/BatchNorm_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/moving_mean/read"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/moving_variance/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm_1/moving_variance"
  input: "resCONVLSTM_4/BatchNorm_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/moving_variance/read"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond/Switch"
  op: "Switch"
  input: "train_mode"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond/switch_t"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond/switch_f"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond/pred_id"
  op: "Identity"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond/Const"
  op: "Const"
  input: "^resCONVLSTM_4/BatchNorm_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond/Const_1"
  op: "Const"
  input: "^resCONVLSTM_4/BatchNorm_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm/Switch:1"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm/Switch_1:1"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm/Switch_2:1"
  input: "resCONVLSTM_4/BatchNorm_1/cond/Const"
  input: "resCONVLSTM_4/BatchNorm_1/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "resCONVLSTM_4/rnn_1/transpose_1"
  input: "resCONVLSTM_4/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/transpose_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm_1/Const"
  input: "resCONVLSTM_4/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/Const"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm_1/beta/read"
  input: "resCONVLSTM_4/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1/Switch"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1/Switch_1"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1/Switch_2"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1/Switch_3"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "resCONVLSTM_4/rnn_1/transpose_1"
  input: "resCONVLSTM_4/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/transpose_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm_1/Const"
  input: "resCONVLSTM_4/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/Const"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm_1/beta/read"
  input: "resCONVLSTM_4/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm_1/moving_mean/read"
  input: "resCONVLSTM_4/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm_1/moving_variance/read"
  input: "resCONVLSTM_4/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond/Merge"
  op: "Merge"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond/Merge_1"
  op: "Merge"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1:1"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond/Merge_2"
  op: "Merge"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1:2"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/Switch"
  op: "Switch"
  input: "train_mode"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/switch_t"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/switch_f"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/pred_id"
  op: "Identity"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/decay"
  op: "Const"
  input: "^resCONVLSTM_4/BatchNorm_1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/biased"
  input: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/biased/read"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/local_step"
  input: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/local_step/read"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/sub"
  op: "Sub"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/sub/Switch:1"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/biased/read"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/sub/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm_1/cond/Merge_1"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/cond/Merge_1"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/mul"
  op: "Mul"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/sub"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/AssignSub/Switch:1"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/AssignSub/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/biased"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  input: "^resCONVLSTM_4/BatchNorm_1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd/Switch:1"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/local_step"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/sub_1/x"
  op: "Const"
  input: "^resCONVLSTM_4/BatchNorm_1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/sub_1/x"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/Pow"
  op: "Pow"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/sub_1"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/sub_2/x"
  op: "Const"
  input: "^resCONVLSTM_4/BatchNorm_1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/sub_2/x"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/AssignSub"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/Switch:1"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_4/BatchNorm_1/moving_mean"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^resCONVLSTM_4/BatchNorm_1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg_1/sub/Switch:1"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg_1/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm_1/moving_variance/read"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg_1/sub/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm_1/cond/Merge_2"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/cond/Merge_2"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg_1/sub"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg_1/Switch:1"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "resCONVLSTM_4/BatchNorm_1/moving_variance"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/Identity"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/Identity/Switch:1"
  input: "^resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg"
  input: "^resCONVLSTM_4/BatchNorm_1/cond_1/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/Identity/Switch"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm_1/cond/Merge"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/cond/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/Switch_1"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm_1/cond/Merge"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/cond/Merge"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/cond_1/Merge"
  op: "Merge"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/Switch_1"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/Relu"
  op: "Relu"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/Add"
  op: "Add"
  input: "resCONVLSTM_4/BatchNorm_1/Relu"
  input: "resCONVLSTM_3/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resCONVLSTM_4/Relu_1"
  op: "Relu"
  input: "resCONVLSTM_4/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377b\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "resCONVLSTM_4/Relu_1"
  input: "Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/LSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm1/LSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "strided_slice"
  input: "lstm1/LSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/LSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 650
      }
    }
  }
}
node {
  name: "lstm1/LSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm1/LSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "lstm1/LSTMCellZeroState/ExpandDims"
  input: "lstm1/LSTMCellZeroState/Const"
  input: "lstm1/LSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/LSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm1/LSTMCellZeroState/zeros"
  op: "Fill"
  input: "lstm1/LSTMCellZeroState/concat"
  input: "lstm1/LSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/LSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm1/LSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "strided_slice"
  input: "lstm1/LSTMCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/LSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 650
      }
    }
  }
}
node {
  name: "lstm1/LSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm1/LSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "strided_slice"
  input: "lstm1/LSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/LSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "lstm1/LSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm1/LSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "lstm1/LSTMCellZeroState/ExpandDims_2"
  input: "lstm1/LSTMCellZeroState/Const_2"
  input: "lstm1/LSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/LSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm1/LSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "lstm1/LSTMCellZeroState/concat_1"
  input: "lstm1/LSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/LSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm1/LSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "strided_slice"
  input: "lstm1/LSTMCellZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/LSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "lstm1/rnn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "lstm1/rnn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm1/rnn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm1/rnn/range"
  op: "Range"
  input: "lstm1/rnn/range/start"
  input: "lstm1/rnn/Rank"
  input: "lstm1/rnn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "lstm1/rnn/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm1/rnn/concat"
  op: "ConcatV2"
  input: "lstm1/rnn/concat/values_0"
  input: "lstm1/rnn/range"
  input: "lstm1/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/transpose"
  op: "Transpose"
  input: "Reshape_1"
  input: "lstm1/rnn/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/Shape"
  op: "Shape"
  input: "lstm1/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm1/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm1/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm1/rnn/strided_slice"
  op: "StridedSlice"
  input: "lstm1/rnn/Shape"
  input: "lstm1/rnn/strided_slice/stack"
  input: "lstm1/rnn/strided_slice/stack_1"
  input: "lstm1/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "lstm1/rnn/Shape_1"
  op: "Shape"
  input: "lstm1/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm1/rnn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm1/rnn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm1/rnn/strided_slice_1"
  op: "StridedSlice"
  input: "lstm1/rnn/Shape_1"
  input: "lstm1/rnn/strided_slice_1/stack"
  input: "lstm1/rnn/strided_slice_1/stack_1"
  input: "lstm1/rnn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "lstm1/rnn/Shape_2"
  op: "Shape"
  input: "lstm1/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm1/rnn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm1/rnn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm1/rnn/strided_slice_2"
  op: "StridedSlice"
  input: "lstm1/rnn/Shape_2"
  input: "lstm1/rnn/strided_slice_2/stack"
  input: "lstm1/rnn/strided_slice_2/stack_1"
  input: "lstm1/rnn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "lstm1/rnn/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm1/rnn/ExpandDims"
  op: "ExpandDims"
  input: "lstm1/rnn/strided_slice_2"
  input: "lstm1/rnn/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "lstm1/rnn/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm1/rnn/concat_1"
  op: "ConcatV2"
  input: "lstm1/rnn/ExpandDims"
  input: "lstm1/rnn/Const"
  input: "lstm1/rnn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm1/rnn/zeros"
  op: "Fill"
  input: "lstm1/rnn/concat_1"
  input: "lstm1/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm1/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "lstm1/rnn/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "lstm1/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "lstm1/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "lstm1/rnn/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "lstm1/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "lstm1/rnn/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "lstm1/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm1/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm1/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm1/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "lstm1/rnn/TensorArrayUnstack/Shape"
  input: "lstm1/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "lstm1/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "lstm1/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "lstm1/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm1/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm1/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "lstm1/rnn/TensorArrayUnstack/range/start"
  input: "lstm1/rnn/TensorArrayUnstack/strided_slice"
  input: "lstm1/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "lstm1/rnn/TensorArray_1"
  input: "lstm1/rnn/TensorArrayUnstack/range"
  input: "lstm1/rnn/transpose"
  input: "lstm1/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/transpose"
      }
    }
  }
}
node {
  name: "lstm1/rnn/Maximum/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm1/rnn/Maximum"
  op: "Maximum"
  input: "lstm1/rnn/Maximum/x"
  input: "lstm1/rnn/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/Minimum"
  op: "Minimum"
  input: "lstm1/rnn/strided_slice_1"
  input: "lstm1/rnn/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm1/rnn/while/Enter"
  op: "Enter"
  input: "lstm1/rnn/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm1/rnn/while/Enter_1"
  op: "Enter"
  input: "lstm1/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm1/rnn/while/Enter_2"
  op: "Enter"
  input: "lstm1/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm1/rnn/while/Enter_3"
  op: "Enter"
  input: "lstm1/LSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm1/rnn/while/Enter_4"
  op: "Enter"
  input: "lstm1/LSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm1/rnn/while/Merge"
  op: "Merge"
  input: "lstm1/rnn/while/Enter"
  input: "lstm1/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/while/Merge_1"
  op: "Merge"
  input: "lstm1/rnn/while/Enter_1"
  input: "lstm1/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/while/Merge_2"
  op: "Merge"
  input: "lstm1/rnn/while/Enter_2"
  input: "lstm1/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/while/Merge_3"
  op: "Merge"
  input: "lstm1/rnn/while/Enter_3"
  input: "lstm1/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/while/Merge_4"
  op: "Merge"
  input: "lstm1/rnn/while/Enter_4"
  input: "lstm1/rnn/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/while/Less"
  op: "Less"
  input: "lstm1/rnn/while/Merge"
  input: "lstm1/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/while/Less/Enter"
  op: "Enter"
  input: "lstm1/rnn/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm1/rnn/while/Less_1"
  op: "Less"
  input: "lstm1/rnn/while/Merge_1"
  input: "lstm1/rnn/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "lstm1/rnn/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm1/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "lstm1/rnn/while/Less"
  input: "lstm1/rnn/while/Less_1"
}
node {
  name: "lstm1/rnn/while/LoopCond"
  op: "LoopCond"
  input: "lstm1/rnn/while/LogicalAnd"
}
node {
  name: "lstm1/rnn/while/Switch"
  op: "Switch"
  input: "lstm1/rnn/while/Merge"
  input: "lstm1/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/Merge"
      }
    }
  }
}
node {
  name: "lstm1/rnn/while/Switch_1"
  op: "Switch"
  input: "lstm1/rnn/while/Merge_1"
  input: "lstm1/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/Merge_1"
      }
    }
  }
}
node {
  name: "lstm1/rnn/while/Switch_2"
  op: "Switch"
  input: "lstm1/rnn/while/Merge_2"
  input: "lstm1/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/Merge_2"
      }
    }
  }
}
node {
  name: "lstm1/rnn/while/Switch_3"
  op: "Switch"
  input: "lstm1/rnn/while/Merge_3"
  input: "lstm1/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/Merge_3"
      }
    }
  }
}
node {
  name: "lstm1/rnn/while/Switch_4"
  op: "Switch"
  input: "lstm1/rnn/while/Merge_4"
  input: "lstm1/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/Merge_4"
      }
    }
  }
}
node {
  name: "lstm1/rnn/while/Identity"
  op: "Identity"
  input: "lstm1/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/while/Identity_1"
  op: "Identity"
  input: "lstm1/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/while/Identity_2"
  op: "Identity"
  input: "lstm1/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/while/Identity_3"
  op: "Identity"
  input: "lstm1/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/while/Identity_4"
  op: "Identity"
  input: "lstm1/rnn/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/while/add/y"
  op: "Const"
  input: "^lstm1/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm1/rnn/while/add"
  op: "Add"
  input: "lstm1/rnn/while/Identity"
  input: "lstm1/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "lstm1/rnn/while/TensorArrayReadV3/Enter"
  input: "lstm1/rnn/while/Identity_1"
  input: "lstm1/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "lstm1/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm1/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "lstm1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "P\000\000\000(\n\000\000"
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04731602221727371
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04731602221727371
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "lstm1/rnn/lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "lstm1/rnn/lstm_cell/kernel/Initializer/random_uniform/max"
  input: "lstm1/rnn/lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "lstm1/rnn/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "lstm1/rnn/lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "lstm1/rnn/lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "lstm1/rnn/lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
        dim {
          size: 2600
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/kernel/Assign"
  op: "Assign"
  input: "lstm1/rnn/lstm_cell/kernel"
  input: "lstm1/rnn/lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/kernel/read"
  op: "Identity"
  input: "lstm1/rnn/lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2600
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/bias/Initializer/zeros"
  op: "Fill"
  input: "lstm1/rnn/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  input: "lstm1/rnn/lstm_cell/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2600
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/bias/Assign"
  op: "Assign"
  input: "lstm1/rnn/lstm_cell/bias"
  input: "lstm1/rnn/lstm_cell/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/bias/read"
  op: "Identity"
  input: "lstm1/rnn/lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\212\002\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09325048327445984
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09325048327445984
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/max"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/RandomUniform"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/projection/kernel/Initializer/random_uniform"
  op: "Add"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/mul"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/projection/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 650
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/projection/kernel/Assign"
  op: "Assign"
  input: "lstm1/rnn/lstm_cell/projection/kernel"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/projection/kernel/read"
  op: "Identity"
  input: "lstm1/rnn/lstm_cell/projection/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/while/lstm_cell/concat/axis"
  op: "Const"
  input: "^lstm1/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm1/rnn/while/lstm_cell/concat"
  op: "ConcatV2"
  input: "lstm1/rnn/while/TensorArrayReadV3"
  input: "lstm1/rnn/while/Identity_4"
  input: "lstm1/rnn/while/lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/while/lstm_cell/MatMul"
  op: "MatMul"
  input: "lstm1/rnn/while/lstm_cell/concat"
  input: "lstm1/rnn/while/lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm1/rnn/while/lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "lstm1/rnn/lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm1/rnn/while/lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "lstm1/rnn/while/lstm_cell/MatMul"
  input: "lstm1/rnn/while/lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "lstm1/rnn/while/lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "lstm1/rnn/lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm1/rnn/while/lstm_cell/Const"
  op: "Const"
  input: "^lstm1/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "lstm1/rnn/while/lstm_cell/split/split_dim"
  op: "Const"
  input: "^lstm1/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm1/rnn/while/lstm_cell/split"
  op: "Split"
  input: "lstm1/rnn/while/lstm_cell/split/split_dim"
  input: "lstm1/rnn/while/lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "lstm1/rnn/while/lstm_cell/add/y"
  op: "Const"
  input: "^lstm1/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm1/rnn/while/lstm_cell/add"
  op: "Add"
  input: "lstm1/rnn/while/lstm_cell/split:2"
  input: "lstm1/rnn/while/lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/while/lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "lstm1/rnn/while/lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/while/lstm_cell/mul"
  op: "Mul"
  input: "lstm1/rnn/while/lstm_cell/Sigmoid"
  input: "lstm1/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/while/lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "lstm1/rnn/while/lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/while/lstm_cell/Tanh"
  op: "Tanh"
  input: "lstm1/rnn/while/lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/while/lstm_cell/mul_1"
  op: "Mul"
  input: "lstm1/rnn/while/lstm_cell/Sigmoid_1"
  input: "lstm1/rnn/while/lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/while/lstm_cell/add_1"
  op: "Add"
  input: "lstm1/rnn/while/lstm_cell/mul"
  input: "lstm1/rnn/while/lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/while/lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "lstm1/rnn/while/lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/while/lstm_cell/Tanh_1"
  op: "Tanh"
  input: "lstm1/rnn/while/lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/while/lstm_cell/mul_2"
  op: "Mul"
  input: "lstm1/rnn/while/lstm_cell/Sigmoid_2"
  input: "lstm1/rnn/while/lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/while/lstm_cell/MatMul_1"
  op: "MatMul"
  input: "lstm1/rnn/while/lstm_cell/mul_2"
  input: "lstm1/rnn/while/lstm_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm1/rnn/while/lstm_cell/MatMul_1/Enter"
  op: "Enter"
  input: "lstm1/rnn/lstm_cell/projection/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "lstm1/rnn/while/Identity_1"
  input: "lstm1/rnn/while/lstm_cell/MatMul_1"
  input: "lstm1/rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/lstm_cell/MatMul_1"
      }
    }
  }
}
node {
  name: "lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "lstm1/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/lstm_cell/MatMul_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm1/rnn/while/add_1/y"
  op: "Const"
  input: "^lstm1/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm1/rnn/while/add_1"
  op: "Add"
  input: "lstm1/rnn/while/Identity_1"
  input: "lstm1/rnn/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/while/NextIteration"
  op: "NextIteration"
  input: "lstm1/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "lstm1/rnn/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "lstm1/rnn/while/lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/while/NextIteration_4"
  op: "NextIteration"
  input: "lstm1/rnn/while/lstm_cell/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/while/Exit"
  op: "Exit"
  input: "lstm1/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/while/Exit_1"
  op: "Exit"
  input: "lstm1/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/while/Exit_2"
  op: "Exit"
  input: "lstm1/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/while/Exit_3"
  op: "Exit"
  input: "lstm1/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/while/Exit_4"
  op: "Exit"
  input: "lstm1/rnn/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "lstm1/rnn/TensorArray"
  input: "lstm1/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "lstm1/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm1/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm1/rnn/TensorArrayStack/range"
  op: "Range"
  input: "lstm1/rnn/TensorArrayStack/range/start"
  input: "lstm1/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "lstm1/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "lstm1/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "lstm1/rnn/TensorArray"
  input: "lstm1/rnn/TensorArrayStack/range"
  input: "lstm1/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
      }
    }
  }
}
node {
  name: "lstm1/rnn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "lstm1/rnn/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "lstm1/rnn/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm1/rnn/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm1/rnn/range_1"
  op: "Range"
  input: "lstm1/rnn/range_1/start"
  input: "lstm1/rnn/Rank_1"
  input: "lstm1/rnn/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "lstm1/rnn/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm1/rnn/concat_2"
  op: "ConcatV2"
  input: "lstm1/rnn/concat_2/values_0"
  input: "lstm1/rnn/range_1"
  input: "lstm1/rnn/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/transpose_1"
  op: "Transpose"
  input: "lstm1/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "lstm1/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377b\000\000\000(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "lstm1/Reshape"
  op: "Reshape"
  input: "lstm1/rnn/transpose_1"
  input: "lstm1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/nin1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "lstm1/nin1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7320507764816284
      }
    }
  }
}
node {
  name: "lstm1/nin1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.7320507764816284
      }
    }
  }
}
node {
  name: "lstm1/nin1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "lstm1/nin1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm1/nin1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "lstm1/nin1/kernel/Initializer/random_uniform/max"
  input: "lstm1/nin1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/kernel"
      }
    }
  }
}
node {
  name: "lstm1/nin1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "lstm1/nin1/kernel/Initializer/random_uniform/RandomUniform"
  input: "lstm1/nin1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/kernel"
      }
    }
  }
}
node {
  name: "lstm1/nin1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "lstm1/nin1/kernel/Initializer/random_uniform/mul"
  input: "lstm1/nin1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/kernel"
      }
    }
  }
}
node {
  name: "lstm1/nin1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm1/nin1/kernel/Assign"
  op: "Assign"
  input: "lstm1/nin1/kernel"
  input: "lstm1/nin1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/nin1/kernel/read"
  op: "Identity"
  input: "lstm1/nin1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/kernel"
      }
    }
  }
}
node {
  name: "lstm1/nin1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm1/nin1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm1/nin1/bias/Assign"
  op: "Assign"
  input: "lstm1/nin1/bias"
  input: "lstm1/nin1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/nin1/bias/read"
  op: "Identity"
  input: "lstm1/nin1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/bias"
      }
    }
  }
}
node {
  name: "lstm1/nin1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "lstm1/nin1/Conv2D"
  op: "Conv2D"
  input: "lstm1/Reshape"
  input: "lstm1/nin1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/nin1/BiasAdd"
  op: "BiasAdd"
  input: "lstm1/nin1/Conv2D"
  input: "lstm1/nin1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "lstm1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "lstm1/BatchNorm/beta"
  input: "lstm1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/BatchNorm/beta/read"
  op: "Identity"
  input: "lstm1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "lstm1/BatchNorm/moving_mean"
  input: "lstm1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "lstm1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "lstm1/BatchNorm/moving_variance"
  input: "lstm1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "lstm1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond/Switch"
  op: "Switch"
  input: "train_mode"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond/switch_t"
  op: "Identity"
  input: "lstm1/BatchNorm/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond/switch_f"
  op: "Identity"
  input: "lstm1/BatchNorm/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond/pred_id"
  op: "Identity"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond/Const"
  op: "Const"
  input: "^lstm1/BatchNorm/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond/Const_1"
  op: "Const"
  input: "^lstm1/BatchNorm/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm/Switch:1"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm/Switch_1:1"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm/Switch_2:1"
  input: "lstm1/BatchNorm/cond/Const"
  input: "lstm1/BatchNorm/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "lstm1/nin1/BiasAdd"
  input: "lstm1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/BiasAdd"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "lstm1/BatchNorm/Const"
  input: "lstm1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/Const"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "lstm1/BatchNorm/beta/read"
  input: "lstm1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm_1/Switch"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm_1/Switch_2"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "lstm1/nin1/BiasAdd"
  input: "lstm1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/BiasAdd"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "lstm1/BatchNorm/Const"
  input: "lstm1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/Const"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "lstm1/BatchNorm/beta/read"
  input: "lstm1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "lstm1/BatchNorm/moving_mean/read"
  input: "lstm1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "lstm1/BatchNorm/moving_variance/read"
  input: "lstm1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond/Merge"
  op: "Merge"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm_1"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond/Merge_1"
  op: "Merge"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm_1:1"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond/Merge_2"
  op: "Merge"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm_1:2"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/Switch"
  op: "Switch"
  input: "train_mode"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/switch_t"
  op: "Identity"
  input: "lstm1/BatchNorm/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/switch_f"
  op: "Identity"
  input: "lstm1/BatchNorm/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/pred_id"
  op: "Identity"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg/decay"
  op: "Const"
  input: "^lstm1/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/biased/Assign"
  op: "Assign"
  input: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/biased"
  input: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/biased/read"
  op: "Identity"
  input: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/local_step/Assign"
  op: "Assign"
  input: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/local_step"
  input: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/local_step/read"
  op: "Identity"
  input: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg/sub"
  op: "Sub"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg/sub/Switch:1"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/biased/read"
  input: "lstm1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg/sub/Switch_1"
  op: "Switch"
  input: "lstm1/BatchNorm/cond/Merge_1"
  input: "lstm1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/cond/Merge_1"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg/mul"
  op: "Mul"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg/sub"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg/AssignSub/Switch:1"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg/AssignSub/Switch"
  op: "RefSwitch"
  input: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/biased"
  input: "lstm1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  input: "^lstm1/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/Switch:1"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/Switch"
  op: "RefSwitch"
  input: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/local_step"
  input: "lstm1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg/sub_1/x"
  op: "Const"
  input: "^lstm1/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg/sub_1/x"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg/Pow"
  op: "Pow"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg/sub_1"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg/sub_2/x"
  op: "Const"
  input: "^lstm1/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg/sub_2/x"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg/AssignSub"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg"
  op: "Assign"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg/Switch:1"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "lstm1/BatchNorm/moving_mean"
  input: "lstm1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^lstm1/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch:1"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "lstm1/BatchNorm/moving_variance/read"
  input: "lstm1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch_1"
  op: "Switch"
  input: "lstm1/BatchNorm/cond/Merge_2"
  input: "lstm1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/cond/Merge_2"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg_1/sub"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg_1/Switch:1"
  input: "lstm1/BatchNorm/cond_1/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "lstm1/BatchNorm/moving_variance"
  input: "lstm1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/Identity"
  op: "Identity"
  input: "lstm1/BatchNorm/cond_1/Identity/Switch:1"
  input: "^lstm1/BatchNorm/cond_1/AssignMovingAvg"
  input: "^lstm1/BatchNorm/cond_1/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/Identity/Switch"
  op: "Switch"
  input: "lstm1/BatchNorm/cond/Merge"
  input: "lstm1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/cond/Merge"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/Switch_1"
  op: "Switch"
  input: "lstm1/BatchNorm/cond/Merge"
  input: "lstm1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/cond/Merge"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/cond_1/Merge"
  op: "Merge"
  input: "lstm1/BatchNorm/cond_1/Switch_1"
  input: "lstm1/BatchNorm/cond_1/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/BatchNorm/Relu"
  op: "Relu"
  input: "lstm1/BatchNorm/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm1/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377b\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "lstm1/Reshape_1"
  op: "Reshape"
  input: "lstm1/BatchNorm/Relu"
  input: "lstm1/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/LSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm2/LSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "strided_slice"
  input: "lstm2/LSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/LSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 650
      }
    }
  }
}
node {
  name: "lstm2/LSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm2/LSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "lstm2/LSTMCellZeroState/ExpandDims"
  input: "lstm2/LSTMCellZeroState/Const"
  input: "lstm2/LSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/LSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2/LSTMCellZeroState/zeros"
  op: "Fill"
  input: "lstm2/LSTMCellZeroState/concat"
  input: "lstm2/LSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/LSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm2/LSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "strided_slice"
  input: "lstm2/LSTMCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/LSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 650
      }
    }
  }
}
node {
  name: "lstm2/LSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm2/LSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "strided_slice"
  input: "lstm2/LSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/LSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "lstm2/LSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm2/LSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "lstm2/LSTMCellZeroState/ExpandDims_2"
  input: "lstm2/LSTMCellZeroState/Const_2"
  input: "lstm2/LSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/LSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2/LSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "lstm2/LSTMCellZeroState/concat_1"
  input: "lstm2/LSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/LSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm2/LSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "strided_slice"
  input: "lstm2/LSTMCellZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/LSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "lstm2/rnn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "lstm2/rnn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm2/rnn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm2/rnn/range"
  op: "Range"
  input: "lstm2/rnn/range/start"
  input: "lstm2/rnn/Rank"
  input: "lstm2/rnn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2/rnn/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm2/rnn/concat"
  op: "ConcatV2"
  input: "lstm2/rnn/concat/values_0"
  input: "lstm2/rnn/range"
  input: "lstm2/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/transpose"
  op: "Transpose"
  input: "lstm1/Reshape_1"
  input: "lstm2/rnn/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/Shape"
  op: "Shape"
  input: "lstm2/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm2/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm2/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm2/rnn/strided_slice"
  op: "StridedSlice"
  input: "lstm2/rnn/Shape"
  input: "lstm2/rnn/strided_slice/stack"
  input: "lstm2/rnn/strided_slice/stack_1"
  input: "lstm2/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "lstm2/rnn/Shape_1"
  op: "Shape"
  input: "lstm2/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm2/rnn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm2/rnn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm2/rnn/strided_slice_1"
  op: "StridedSlice"
  input: "lstm2/rnn/Shape_1"
  input: "lstm2/rnn/strided_slice_1/stack"
  input: "lstm2/rnn/strided_slice_1/stack_1"
  input: "lstm2/rnn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "lstm2/rnn/Shape_2"
  op: "Shape"
  input: "lstm2/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm2/rnn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm2/rnn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm2/rnn/strided_slice_2"
  op: "StridedSlice"
  input: "lstm2/rnn/Shape_2"
  input: "lstm2/rnn/strided_slice_2/stack"
  input: "lstm2/rnn/strided_slice_2/stack_1"
  input: "lstm2/rnn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "lstm2/rnn/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm2/rnn/ExpandDims"
  op: "ExpandDims"
  input: "lstm2/rnn/strided_slice_2"
  input: "lstm2/rnn/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "lstm2/rnn/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm2/rnn/concat_1"
  op: "ConcatV2"
  input: "lstm2/rnn/ExpandDims"
  input: "lstm2/rnn/Const"
  input: "lstm2/rnn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2/rnn/zeros"
  op: "Fill"
  input: "lstm2/rnn/concat_1"
  input: "lstm2/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm2/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "lstm2/rnn/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "lstm2/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "lstm2/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "lstm2/rnn/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "lstm2/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "lstm2/rnn/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "lstm2/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm2/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm2/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm2/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "lstm2/rnn/TensorArrayUnstack/Shape"
  input: "lstm2/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "lstm2/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "lstm2/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "lstm2/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm2/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm2/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "lstm2/rnn/TensorArrayUnstack/range/start"
  input: "lstm2/rnn/TensorArrayUnstack/strided_slice"
  input: "lstm2/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "lstm2/rnn/TensorArray_1"
  input: "lstm2/rnn/TensorArrayUnstack/range"
  input: "lstm2/rnn/transpose"
  input: "lstm2/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/transpose"
      }
    }
  }
}
node {
  name: "lstm2/rnn/Maximum/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm2/rnn/Maximum"
  op: "Maximum"
  input: "lstm2/rnn/Maximum/x"
  input: "lstm2/rnn/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/Minimum"
  op: "Minimum"
  input: "lstm2/rnn/strided_slice_1"
  input: "lstm2/rnn/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm2/rnn/while/Enter"
  op: "Enter"
  input: "lstm2/rnn/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm2/rnn/while/Enter_1"
  op: "Enter"
  input: "lstm2/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm2/rnn/while/Enter_2"
  op: "Enter"
  input: "lstm2/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm2/rnn/while/Enter_3"
  op: "Enter"
  input: "lstm2/LSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm2/rnn/while/Enter_4"
  op: "Enter"
  input: "lstm2/LSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm2/rnn/while/Merge"
  op: "Merge"
  input: "lstm2/rnn/while/Enter"
  input: "lstm2/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/while/Merge_1"
  op: "Merge"
  input: "lstm2/rnn/while/Enter_1"
  input: "lstm2/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/while/Merge_2"
  op: "Merge"
  input: "lstm2/rnn/while/Enter_2"
  input: "lstm2/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/while/Merge_3"
  op: "Merge"
  input: "lstm2/rnn/while/Enter_3"
  input: "lstm2/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/while/Merge_4"
  op: "Merge"
  input: "lstm2/rnn/while/Enter_4"
  input: "lstm2/rnn/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/while/Less"
  op: "Less"
  input: "lstm2/rnn/while/Merge"
  input: "lstm2/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/while/Less/Enter"
  op: "Enter"
  input: "lstm2/rnn/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm2/rnn/while/Less_1"
  op: "Less"
  input: "lstm2/rnn/while/Merge_1"
  input: "lstm2/rnn/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "lstm2/rnn/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm2/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "lstm2/rnn/while/Less"
  input: "lstm2/rnn/while/Less_1"
}
node {
  name: "lstm2/rnn/while/LoopCond"
  op: "LoopCond"
  input: "lstm2/rnn/while/LogicalAnd"
}
node {
  name: "lstm2/rnn/while/Switch"
  op: "Switch"
  input: "lstm2/rnn/while/Merge"
  input: "lstm2/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/Merge"
      }
    }
  }
}
node {
  name: "lstm2/rnn/while/Switch_1"
  op: "Switch"
  input: "lstm2/rnn/while/Merge_1"
  input: "lstm2/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/Merge_1"
      }
    }
  }
}
node {
  name: "lstm2/rnn/while/Switch_2"
  op: "Switch"
  input: "lstm2/rnn/while/Merge_2"
  input: "lstm2/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/Merge_2"
      }
    }
  }
}
node {
  name: "lstm2/rnn/while/Switch_3"
  op: "Switch"
  input: "lstm2/rnn/while/Merge_3"
  input: "lstm2/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/Merge_3"
      }
    }
  }
}
node {
  name: "lstm2/rnn/while/Switch_4"
  op: "Switch"
  input: "lstm2/rnn/while/Merge_4"
  input: "lstm2/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/Merge_4"
      }
    }
  }
}
node {
  name: "lstm2/rnn/while/Identity"
  op: "Identity"
  input: "lstm2/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/while/Identity_1"
  op: "Identity"
  input: "lstm2/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/while/Identity_2"
  op: "Identity"
  input: "lstm2/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/while/Identity_3"
  op: "Identity"
  input: "lstm2/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/while/Identity_4"
  op: "Identity"
  input: "lstm2/rnn/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/while/add/y"
  op: "Const"
  input: "^lstm2/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm2/rnn/while/add"
  op: "Add"
  input: "lstm2/rnn/while/Identity"
  input: "lstm2/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "lstm2/rnn/while/TensorArrayReadV3/Enter"
  input: "lstm2/rnn/while/Identity_1"
  input: "lstm2/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "lstm2/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm2/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "lstm2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "P\000\000\000(\n\000\000"
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04731602221727371
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04731602221727371
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "lstm2/rnn/lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "lstm2/rnn/lstm_cell/kernel/Initializer/random_uniform/max"
  input: "lstm2/rnn/lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "lstm2/rnn/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "lstm2/rnn/lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "lstm2/rnn/lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "lstm2/rnn/lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
        dim {
          size: 2600
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/kernel/Assign"
  op: "Assign"
  input: "lstm2/rnn/lstm_cell/kernel"
  input: "lstm2/rnn/lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/kernel/read"
  op: "Identity"
  input: "lstm2/rnn/lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2600
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/bias/Initializer/zeros"
  op: "Fill"
  input: "lstm2/rnn/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  input: "lstm2/rnn/lstm_cell/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2600
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/bias/Assign"
  op: "Assign"
  input: "lstm2/rnn/lstm_cell/bias"
  input: "lstm2/rnn/lstm_cell/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/bias/read"
  op: "Identity"
  input: "lstm2/rnn/lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\212\002\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09325048327445984
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09325048327445984
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/max"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/RandomUniform"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/projection/kernel/Initializer/random_uniform"
  op: "Add"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/mul"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/projection/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 650
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/projection/kernel/Assign"
  op: "Assign"
  input: "lstm2/rnn/lstm_cell/projection/kernel"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/projection/kernel/read"
  op: "Identity"
  input: "lstm2/rnn/lstm_cell/projection/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/while/lstm_cell/concat/axis"
  op: "Const"
  input: "^lstm2/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm2/rnn/while/lstm_cell/concat"
  op: "ConcatV2"
  input: "lstm2/rnn/while/TensorArrayReadV3"
  input: "lstm2/rnn/while/Identity_4"
  input: "lstm2/rnn/while/lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/while/lstm_cell/MatMul"
  op: "MatMul"
  input: "lstm2/rnn/while/lstm_cell/concat"
  input: "lstm2/rnn/while/lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm2/rnn/while/lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "lstm2/rnn/lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm2/rnn/while/lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "lstm2/rnn/while/lstm_cell/MatMul"
  input: "lstm2/rnn/while/lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "lstm2/rnn/while/lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "lstm2/rnn/lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm2/rnn/while/lstm_cell/Const"
  op: "Const"
  input: "^lstm2/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "lstm2/rnn/while/lstm_cell/split/split_dim"
  op: "Const"
  input: "^lstm2/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm2/rnn/while/lstm_cell/split"
  op: "Split"
  input: "lstm2/rnn/while/lstm_cell/split/split_dim"
  input: "lstm2/rnn/while/lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "lstm2/rnn/while/lstm_cell/add/y"
  op: "Const"
  input: "^lstm2/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm2/rnn/while/lstm_cell/add"
  op: "Add"
  input: "lstm2/rnn/while/lstm_cell/split:2"
  input: "lstm2/rnn/while/lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/while/lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "lstm2/rnn/while/lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/while/lstm_cell/mul"
  op: "Mul"
  input: "lstm2/rnn/while/lstm_cell/Sigmoid"
  input: "lstm2/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/while/lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "lstm2/rnn/while/lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/while/lstm_cell/Tanh"
  op: "Tanh"
  input: "lstm2/rnn/while/lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/while/lstm_cell/mul_1"
  op: "Mul"
  input: "lstm2/rnn/while/lstm_cell/Sigmoid_1"
  input: "lstm2/rnn/while/lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/while/lstm_cell/add_1"
  op: "Add"
  input: "lstm2/rnn/while/lstm_cell/mul"
  input: "lstm2/rnn/while/lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/while/lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "lstm2/rnn/while/lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/while/lstm_cell/Tanh_1"
  op: "Tanh"
  input: "lstm2/rnn/while/lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/while/lstm_cell/mul_2"
  op: "Mul"
  input: "lstm2/rnn/while/lstm_cell/Sigmoid_2"
  input: "lstm2/rnn/while/lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/while/lstm_cell/MatMul_1"
  op: "MatMul"
  input: "lstm2/rnn/while/lstm_cell/mul_2"
  input: "lstm2/rnn/while/lstm_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm2/rnn/while/lstm_cell/MatMul_1/Enter"
  op: "Enter"
  input: "lstm2/rnn/lstm_cell/projection/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "lstm2/rnn/while/Identity_1"
  input: "lstm2/rnn/while/lstm_cell/MatMul_1"
  input: "lstm2/rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/lstm_cell/MatMul_1"
      }
    }
  }
}
node {
  name: "lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "lstm2/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/lstm_cell/MatMul_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm2/rnn/while/add_1/y"
  op: "Const"
  input: "^lstm2/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm2/rnn/while/add_1"
  op: "Add"
  input: "lstm2/rnn/while/Identity_1"
  input: "lstm2/rnn/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/while/NextIteration"
  op: "NextIteration"
  input: "lstm2/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "lstm2/rnn/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "lstm2/rnn/while/lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/while/NextIteration_4"
  op: "NextIteration"
  input: "lstm2/rnn/while/lstm_cell/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/while/Exit"
  op: "Exit"
  input: "lstm2/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/while/Exit_1"
  op: "Exit"
  input: "lstm2/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/while/Exit_2"
  op: "Exit"
  input: "lstm2/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/while/Exit_3"
  op: "Exit"
  input: "lstm2/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/while/Exit_4"
  op: "Exit"
  input: "lstm2/rnn/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "lstm2/rnn/TensorArray"
  input: "lstm2/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "lstm2/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm2/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm2/rnn/TensorArrayStack/range"
  op: "Range"
  input: "lstm2/rnn/TensorArrayStack/range/start"
  input: "lstm2/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "lstm2/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "lstm2/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "lstm2/rnn/TensorArray"
  input: "lstm2/rnn/TensorArrayStack/range"
  input: "lstm2/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
      }
    }
  }
}
node {
  name: "lstm2/rnn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "lstm2/rnn/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "lstm2/rnn/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm2/rnn/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm2/rnn/range_1"
  op: "Range"
  input: "lstm2/rnn/range_1/start"
  input: "lstm2/rnn/Rank_1"
  input: "lstm2/rnn/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2/rnn/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm2/rnn/concat_2"
  op: "ConcatV2"
  input: "lstm2/rnn/concat_2/values_0"
  input: "lstm2/rnn/range_1"
  input: "lstm2/rnn/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/transpose_1"
  op: "Transpose"
  input: "lstm2/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "lstm2/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377b\000\000\000(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2/Reshape"
  op: "Reshape"
  input: "lstm2/rnn/transpose_1"
  input: "lstm2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/nin1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2/nin1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7320507764816284
      }
    }
  }
}
node {
  name: "lstm2/nin1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.7320507764816284
      }
    }
  }
}
node {
  name: "lstm2/nin1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "lstm2/nin1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm2/nin1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "lstm2/nin1/kernel/Initializer/random_uniform/max"
  input: "lstm2/nin1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/kernel"
      }
    }
  }
}
node {
  name: "lstm2/nin1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "lstm2/nin1/kernel/Initializer/random_uniform/RandomUniform"
  input: "lstm2/nin1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/kernel"
      }
    }
  }
}
node {
  name: "lstm2/nin1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "lstm2/nin1/kernel/Initializer/random_uniform/mul"
  input: "lstm2/nin1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/kernel"
      }
    }
  }
}
node {
  name: "lstm2/nin1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2/nin1/kernel/Assign"
  op: "Assign"
  input: "lstm2/nin1/kernel"
  input: "lstm2/nin1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/nin1/kernel/read"
  op: "Identity"
  input: "lstm2/nin1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/kernel"
      }
    }
  }
}
node {
  name: "lstm2/nin1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2/nin1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2/nin1/bias/Assign"
  op: "Assign"
  input: "lstm2/nin1/bias"
  input: "lstm2/nin1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/nin1/bias/read"
  op: "Identity"
  input: "lstm2/nin1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/bias"
      }
    }
  }
}
node {
  name: "lstm2/nin1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2/nin1/Conv2D"
  op: "Conv2D"
  input: "lstm2/Reshape"
  input: "lstm2/nin1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/nin1/BiasAdd"
  op: "BiasAdd"
  input: "lstm2/nin1/Conv2D"
  input: "lstm2/nin1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "lstm2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "lstm2/BatchNorm/beta"
  input: "lstm2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/BatchNorm/beta/read"
  op: "Identity"
  input: "lstm2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "lstm2/BatchNorm/moving_mean"
  input: "lstm2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "lstm2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "lstm2/BatchNorm/moving_variance"
  input: "lstm2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "lstm2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond/Switch"
  op: "Switch"
  input: "train_mode"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond/switch_t"
  op: "Identity"
  input: "lstm2/BatchNorm/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond/switch_f"
  op: "Identity"
  input: "lstm2/BatchNorm/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond/pred_id"
  op: "Identity"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond/Const"
  op: "Const"
  input: "^lstm2/BatchNorm/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond/Const_1"
  op: "Const"
  input: "^lstm2/BatchNorm/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm/Switch:1"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm/Switch_1:1"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm/Switch_2:1"
  input: "lstm2/BatchNorm/cond/Const"
  input: "lstm2/BatchNorm/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "lstm2/nin1/BiasAdd"
  input: "lstm2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/BiasAdd"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "lstm2/BatchNorm/Const"
  input: "lstm2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/Const"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "lstm2/BatchNorm/beta/read"
  input: "lstm2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm_1/Switch"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm_1/Switch_2"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "lstm2/nin1/BiasAdd"
  input: "lstm2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/BiasAdd"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "lstm2/BatchNorm/Const"
  input: "lstm2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/Const"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "lstm2/BatchNorm/beta/read"
  input: "lstm2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "lstm2/BatchNorm/moving_mean/read"
  input: "lstm2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "lstm2/BatchNorm/moving_variance/read"
  input: "lstm2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond/Merge"
  op: "Merge"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm_1"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond/Merge_1"
  op: "Merge"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm_1:1"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond/Merge_2"
  op: "Merge"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm_1:2"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/Switch"
  op: "Switch"
  input: "train_mode"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/switch_t"
  op: "Identity"
  input: "lstm2/BatchNorm/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/switch_f"
  op: "Identity"
  input: "lstm2/BatchNorm/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/pred_id"
  op: "Identity"
  input: "train_mode"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg/decay"
  op: "Const"
  input: "^lstm2/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/biased/Assign"
  op: "Assign"
  input: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/biased"
  input: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/biased/read"
  op: "Identity"
  input: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/local_step/Assign"
  op: "Assign"
  input: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/local_step"
  input: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/local_step/read"
  op: "Identity"
  input: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg/sub"
  op: "Sub"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg/sub/Switch:1"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/biased/read"
  input: "lstm2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg/sub/Switch_1"
  op: "Switch"
  input: "lstm2/BatchNorm/cond/Merge_1"
  input: "lstm2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/cond/Merge_1"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg/mul"
  op: "Mul"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg/sub"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg/AssignSub/Switch:1"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg/AssignSub/Switch"
  op: "RefSwitch"
  input: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/biased"
  input: "lstm2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  input: "^lstm2/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/Switch:1"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg/AssignAdd/Switch"
  op: "RefSwitch"
  input: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/local_step"
  input: "lstm2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg/sub_1/x"
  op: "Const"
  input: "^lstm2/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg/sub_1/x"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg/Pow"
  op: "Pow"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg/sub_1"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg/sub_2/x"
  op: "Const"
  input: "^lstm2/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg/sub_2/x"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg/AssignSub"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg"
  op: "Assign"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg/Switch:1"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "lstm2/BatchNorm/moving_mean"
  input: "lstm2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^lstm2/BatchNorm/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch:1"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "lstm2/BatchNorm/moving_variance/read"
  input: "lstm2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch_1"
  op: "Switch"
  input: "lstm2/BatchNorm/cond/Merge_2"
  input: "lstm2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/cond/Merge_2"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg_1/sub"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg_1/Switch:1"
  input: "lstm2/BatchNorm/cond_1/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "lstm2/BatchNorm/moving_variance"
  input: "lstm2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/Identity"
  op: "Identity"
  input: "lstm2/BatchNorm/cond_1/Identity/Switch:1"
  input: "^lstm2/BatchNorm/cond_1/AssignMovingAvg"
  input: "^lstm2/BatchNorm/cond_1/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/Identity/Switch"
  op: "Switch"
  input: "lstm2/BatchNorm/cond/Merge"
  input: "lstm2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/cond/Merge"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/Switch_1"
  op: "Switch"
  input: "lstm2/BatchNorm/cond/Merge"
  input: "lstm2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/cond/Merge"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/cond_1/Merge"
  op: "Merge"
  input: "lstm2/BatchNorm/cond_1/Switch_1"
  input: "lstm2/BatchNorm/cond_1/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/BatchNorm/Relu"
  op: "Relu"
  input: "lstm2/BatchNorm/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm2/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377b\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2/Reshape_1"
  op: "Reshape"
  input: "lstm2/BatchNorm/Relu"
  input: "lstm2/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/LSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm3/LSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "strided_slice"
  input: "lstm3/LSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/LSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 650
      }
    }
  }
}
node {
  name: "lstm3/LSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm3/LSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "lstm3/LSTMCellZeroState/ExpandDims"
  input: "lstm3/LSTMCellZeroState/Const"
  input: "lstm3/LSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/LSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm3/LSTMCellZeroState/zeros"
  op: "Fill"
  input: "lstm3/LSTMCellZeroState/concat"
  input: "lstm3/LSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/LSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm3/LSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "strided_slice"
  input: "lstm3/LSTMCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/LSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 650
      }
    }
  }
}
node {
  name: "lstm3/LSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm3/LSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "strided_slice"
  input: "lstm3/LSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/LSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "lstm3/LSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm3/LSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "lstm3/LSTMCellZeroState/ExpandDims_2"
  input: "lstm3/LSTMCellZeroState/Const_2"
  input: "lstm3/LSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/LSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm3/LSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "lstm3/LSTMCellZeroState/concat_1"
  input: "lstm3/LSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/LSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm3/LSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "strided_slice"
  input: "lstm3/LSTMCellZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/LSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "lstm3/rnn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "lstm3/rnn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm3/rnn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm3/rnn/range"
  op: "Range"
  input: "lstm3/rnn/range/start"
  input: "lstm3/rnn/Rank"
  input: "lstm3/rnn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "lstm3/rnn/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm3/rnn/concat"
  op: "ConcatV2"
  input: "lstm3/rnn/concat/values_0"
  input: "lstm3/rnn/range"
  input: "lstm3/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/transpose"
  op: "Transpose"
  input: "lstm2/Reshape_1"
  input: "lstm3/rnn/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/Shape"
  op: "Shape"
  input: "lstm3/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm3/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm3/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm3/rnn/strided_slice"
  op: "StridedSlice"
  input: "lstm3/rnn/Shape"
  input: "lstm3/rnn/strided_slice/stack"
  input: "lstm3/rnn/strided_slice/stack_1"
  input: "lstm3/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "lstm3/rnn/Shape_1"
  op: "Shape"
  input: "lstm3/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm3/rnn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm3/rnn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm3/rnn/strided_slice_1"
  op: "StridedSlice"
  input: "lstm3/rnn/Shape_1"
  input: "lstm3/rnn/strided_slice_1/stack"
  input: "lstm3/rnn/strided_slice_1/stack_1"
  input: "lstm3/rnn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "lstm3/rnn/Shape_2"
  op: "Shape"
  input: "lstm3/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm3/rnn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm3/rnn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm3/rnn/strided_slice_2"
  op: "StridedSlice"
  input: "lstm3/rnn/Shape_2"
  input: "lstm3/rnn/strided_slice_2/stack"
  input: "lstm3/rnn/strided_slice_2/stack_1"
  input: "lstm3/rnn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "lstm3/rnn/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm3/rnn/ExpandDims"
  op: "ExpandDims"
  input: "lstm3/rnn/strided_slice_2"
  input: "lstm3/rnn/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "lstm3/rnn/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm3/rnn/concat_1"
  op: "ConcatV2"
  input: "lstm3/rnn/ExpandDims"
  input: "lstm3/rnn/Const"
  input: "lstm3/rnn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm3/rnn/zeros"
  op: "Fill"
  input: "lstm3/rnn/concat_1"
  input: "lstm3/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm3/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "lstm3/rnn/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "lstm3/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "lstm3/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "lstm3/rnn/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "lstm3/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "lstm3/rnn/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "lstm3/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm3/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm3/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm3/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "lstm3/rnn/TensorArrayUnstack/Shape"
  input: "lstm3/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "lstm3/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "lstm3/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "lstm3/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm3/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm3/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "lstm3/rnn/TensorArrayUnstack/range/start"
  input: "lstm3/rnn/TensorArrayUnstack/strided_slice"
  input: "lstm3/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "lstm3/rnn/TensorArray_1"
  input: "lstm3/rnn/TensorArrayUnstack/range"
  input: "lstm3/rnn/transpose"
  input: "lstm3/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/transpose"
      }
    }
  }
}
node {
  name: "lstm3/rnn/Maximum/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm3/rnn/Maximum"
  op: "Maximum"
  input: "lstm3/rnn/Maximum/x"
  input: "lstm3/rnn/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/Minimum"
  op: "Minimum"
  input: "lstm3/rnn/strided_slice_1"
  input: "lstm3/rnn/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm3/rnn/while/Enter"
  op: "Enter"
  input: "lstm3/rnn/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm3/rnn/while/Enter_1"
  op: "Enter"
  input: "lstm3/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm3/rnn/while/Enter_2"
  op: "Enter"
  input: "lstm3/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm3/rnn/while/Enter_3"
  op: "Enter"
  input: "lstm3/LSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm3/rnn/while/Enter_4"
  op: "Enter"
  input: "lstm3/LSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm3/rnn/while/Merge"
  op: "Merge"
  input: "lstm3/rnn/while/Enter"
  input: "lstm3/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/while/Merge_1"
  op: "Merge"
  input: "lstm3/rnn/while/Enter_1"
  input: "lstm3/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/while/Merge_2"
  op: "Merge"
  input: "lstm3/rnn/while/Enter_2"
  input: "lstm3/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/while/Merge_3"
  op: "Merge"
  input: "lstm3/rnn/while/Enter_3"
  input: "lstm3/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/while/Merge_4"
  op: "Merge"
  input: "lstm3/rnn/while/Enter_4"
  input: "lstm3/rnn/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/while/Less"
  op: "Less"
  input: "lstm3/rnn/while/Merge"
  input: "lstm3/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/while/Less/Enter"
  op: "Enter"
  input: "lstm3/rnn/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm3/rnn/while/Less_1"
  op: "Less"
  input: "lstm3/rnn/while/Merge_1"
  input: "lstm3/rnn/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "lstm3/rnn/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm3/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "lstm3/rnn/while/Less"
  input: "lstm3/rnn/while/Less_1"
}
node {
  name: "lstm3/rnn/while/LoopCond"
  op: "LoopCond"
  input: "lstm3/rnn/while/LogicalAnd"
}
node {
  name: "lstm3/rnn/while/Switch"
  op: "Switch"
  input: "lstm3/rnn/while/Merge"
  input: "lstm3/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/Merge"
      }
    }
  }
}
node {
  name: "lstm3/rnn/while/Switch_1"
  op: "Switch"
  input: "lstm3/rnn/while/Merge_1"
  input: "lstm3/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/Merge_1"
      }
    }
  }
}
node {
  name: "lstm3/rnn/while/Switch_2"
  op: "Switch"
  input: "lstm3/rnn/while/Merge_2"
  input: "lstm3/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/Merge_2"
      }
    }
  }
}
node {
  name: "lstm3/rnn/while/Switch_3"
  op: "Switch"
  input: "lstm3/rnn/while/Merge_3"
  input: "lstm3/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/Merge_3"
      }
    }
  }
}
node {
  name: "lstm3/rnn/while/Switch_4"
  op: "Switch"
  input: "lstm3/rnn/while/Merge_4"
  input: "lstm3/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/Merge_4"
      }
    }
  }
}
node {
  name: "lstm3/rnn/while/Identity"
  op: "Identity"
  input: "lstm3/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/while/Identity_1"
  op: "Identity"
  input: "lstm3/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/while/Identity_2"
  op: "Identity"
  input: "lstm3/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/while/Identity_3"
  op: "Identity"
  input: "lstm3/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/while/Identity_4"
  op: "Identity"
  input: "lstm3/rnn/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/while/add/y"
  op: "Const"
  input: "^lstm3/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm3/rnn/while/add"
  op: "Add"
  input: "lstm3/rnn/while/Identity"
  input: "lstm3/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "lstm3/rnn/while/TensorArrayReadV3/Enter"
  input: "lstm3/rnn/while/Identity_1"
  input: "lstm3/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "lstm3/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm3/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "lstm3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "P\000\000\000(\n\000\000"
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04731602221727371
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04731602221727371
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "lstm3/rnn/lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "lstm3/rnn/lstm_cell/kernel/Initializer/random_uniform/max"
  input: "lstm3/rnn/lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "lstm3/rnn/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "lstm3/rnn/lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "lstm3/rnn/lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "lstm3/rnn/lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
        dim {
          size: 2600
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/kernel/Assign"
  op: "Assign"
  input: "lstm3/rnn/lstm_cell/kernel"
  input: "lstm3/rnn/lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/kernel/read"
  op: "Identity"
  input: "lstm3/rnn/lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2600
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/bias/Initializer/zeros"
  op: "Fill"
  input: "lstm3/rnn/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  input: "lstm3/rnn/lstm_cell/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2600
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/bias/Assign"
  op: "Assign"
  input: "lstm3/rnn/lstm_cell/bias"
  input: "lstm3/rnn/lstm_cell/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/bias/read"
  op: "Identity"
  input: "lstm3/rnn/lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\212\002\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09325048327445984
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09325048327445984
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/max"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/RandomUniform"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/projection/kernel/Initializer/random_uniform"
  op: "Add"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/mul"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/projection/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 650
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/projection/kernel/Assign"
  op: "Assign"
  input: "lstm3/rnn/lstm_cell/projection/kernel"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/projection/kernel/read"
  op: "Identity"
  input: "lstm3/rnn/lstm_cell/projection/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/while/lstm_cell/concat/axis"
  op: "Const"
  input: "^lstm3/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm3/rnn/while/lstm_cell/concat"
  op: "ConcatV2"
  input: "lstm3/rnn/while/TensorArrayReadV3"
  input: "lstm3/rnn/while/Identity_4"
  input: "lstm3/rnn/while/lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/while/lstm_cell/MatMul"
  op: "MatMul"
  input: "lstm3/rnn/while/lstm_cell/concat"
  input: "lstm3/rnn/while/lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm3/rnn/while/lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "lstm3/rnn/lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm3/rnn/while/lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "lstm3/rnn/while/lstm_cell/MatMul"
  input: "lstm3/rnn/while/lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "lstm3/rnn/while/lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "lstm3/rnn/lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm3/rnn/while/lstm_cell/Const"
  op: "Const"
  input: "^lstm3/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "lstm3/rnn/while/lstm_cell/split/split_dim"
  op: "Const"
  input: "^lstm3/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm3/rnn/while/lstm_cell/split"
  op: "Split"
  input: "lstm3/rnn/while/lstm_cell/split/split_dim"
  input: "lstm3/rnn/while/lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "lstm3/rnn/while/lstm_cell/add/y"
  op: "Const"
  input: "^lstm3/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm3/rnn/while/lstm_cell/add"
  op: "Add"
  input: "lstm3/rnn/while/lstm_cell/split:2"
  input: "lstm3/rnn/while/lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/while/lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "lstm3/rnn/while/lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/while/lstm_cell/mul"
  op: "Mul"
  input: "lstm3/rnn/while/lstm_cell/Sigmoid"
  input: "lstm3/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/while/lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "lstm3/rnn/while/lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/while/lstm_cell/Tanh"
  op: "Tanh"
  input: "lstm3/rnn/while/lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/while/lstm_cell/mul_1"
  op: "Mul"
  input: "lstm3/rnn/while/lstm_cell/Sigmoid_1"
  input: "lstm3/rnn/while/lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/while/lstm_cell/add_1"
  op: "Add"
  input: "lstm3/rnn/while/lstm_cell/mul"
  input: "lstm3/rnn/while/lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/while/lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "lstm3/rnn/while/lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/while/lstm_cell/Tanh_1"
  op: "Tanh"
  input: "lstm3/rnn/while/lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/while/lstm_cell/mul_2"
  op: "Mul"
  input: "lstm3/rnn/while/lstm_cell/Sigmoid_2"
  input: "lstm3/rnn/while/lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/while/lstm_cell/MatMul_1"
  op: "MatMul"
  input: "lstm3/rnn/while/lstm_cell/mul_2"
  input: "lstm3/rnn/while/lstm_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm3/rnn/while/lstm_cell/MatMul_1/Enter"
  op: "Enter"
  input: "lstm3/rnn/lstm_cell/projection/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "lstm3/rnn/while/Identity_1"
  input: "lstm3/rnn/while/lstm_cell/MatMul_1"
  input: "lstm3/rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/lstm_cell/MatMul_1"
      }
    }
  }
}
node {
  name: "lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "lstm3/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/lstm_cell/MatMul_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm3/rnn/while/add_1/y"
  op: "Const"
  input: "^lstm3/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm3/rnn/while/add_1"
  op: "Add"
  input: "lstm3/rnn/while/Identity_1"
  input: "lstm3/rnn/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/while/NextIteration"
  op: "NextIteration"
  input: "lstm3/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "lstm3/rnn/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "lstm3/rnn/while/lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/while/NextIteration_4"
  op: "NextIteration"
  input: "lstm3/rnn/while/lstm_cell/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/while/Exit"
  op: "Exit"
  input: "lstm3/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/while/Exit_1"
  op: "Exit"
  input: "lstm3/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/while/Exit_2"
  op: "Exit"
  input: "lstm3/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/while/Exit_3"
  op: "Exit"
  input: "lstm3/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/while/Exit_4"
  op: "Exit"
  input: "lstm3/rnn/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm3/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "lstm3/rnn/TensorArray"
  input: "lstm3/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "lstm3/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm3/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm3/rnn/TensorArrayStack/range"
  op: "Range"
  input: "lstm3/rnn/TensorArrayStack/range/start"
  input: "lstm3/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "lstm3/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "lstm3/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "lstm3/rnn/TensorArray"
  input: "lstm3/rnn/TensorArrayStack/range"
  input: "lstm3/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 40
        }
      }
    }
  }
}
node {
  name: "lstm3/rnn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "lstm3/rnn/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "lstm3/rnn/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm3/rnn/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm3/rnn/range_1"
  op: "Range"
  input: "lstm3/rnn/range_1/start"
  input: "lstm3/rnn/Rank_1"
  input: "lstm3/rnn/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "lstm3/rnn/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm3/rnn/concat_2"
  op: "ConcatV2"
  input: "lstm3/rnn/concat_2/values_0"
  input: "lstm3/rnn/range_1"
  input: "lstm3/rnn/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/transpose_1"
  op: "Transpose"
  input: "lstm3/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "lstm3/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377b\000\000\000(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "lstm3/Reshape"
  op: "Reshape"
  input: "lstm3/rnn/transpose_1"
  input: "lstm3/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377P\017\000\000"
      }
    }
  }
}
node {
  name: "Reshape_2"
  op: "Reshape"
  input: "lstm3/Reshape"
  input: "Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "sub/x"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/Shape"
  op: "Shape"
  input: "Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout/random_uniform/max"
  input: "dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout/random_uniform/RandomUniform"
  input: "dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/random_uniform"
  op: "Add"
  input: "dropout/random_uniform/mul"
  input: "dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/sub"
  op: "Sub"
  input: "dropout/sub/x"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/truediv"
  op: "RealDiv"
  input: "dropout/truediv/x"
  input: "dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout/random_uniform"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/mul"
  op: "Mul"
  input: "Reshape_2"
  input: "dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/Cast"
  op: "Cast"
  input: "dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout/mul_1"
  op: "Mul"
  input: "dropout/mul"
  input: "dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "P\017\000\000\356\002\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03584405779838562
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03584405779838562
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense/kernel/Initializer/random_uniform/max"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense/kernel/Initializer/random_uniform/mul"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3920
        }
        dim {
          size: 750
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/kernel/Assign"
  op: "Assign"
  input: "dense/kernel"
  input: "dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/kernel/read"
  op: "Identity"
  input: "dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 750
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 750
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/bias/Assign"
  op: "Assign"
  input: "dense/bias"
  input: "dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/bias/read"
  op: "Identity"
  input: "dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
}
node {
  name: "dense/MatMul"
  op: "MatMul"
  input: "dropout/mul_1"
  input: "dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense/BiasAdd"
  op: "BiasAdd"
  input: "dense/MatMul"
  input: "dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Relu"
  op: "Relu"
  input: "dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sub_1"
  op: "Sub"
  input: "sub_1/x"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/Shape"
  op: "Shape"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_1/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_1/random_uniform/sub"
  op: "Sub"
  input: "dropout_1/random_uniform/max"
  input: "dropout_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/random_uniform/mul"
  op: "Mul"
  input: "dropout_1/random_uniform/RandomUniform"
  input: "dropout_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/random_uniform"
  op: "Add"
  input: "dropout_1/random_uniform/mul"
  input: "dropout_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/sub"
  op: "Sub"
  input: "dropout_1/sub/x"
  input: "sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/truediv"
  op: "RealDiv"
  input: "dropout_1/truediv/x"
  input: "dropout_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_1/random_uniform"
  input: "sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/mul"
  op: "Mul"
  input: "Relu"
  input: "dropout_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/Cast"
  op: "Cast"
  input: "dropout_1/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_1/mul_1"
  op: "Mul"
  input: "dropout_1/mul"
  input: "dropout_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\356\002\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal/mul"
  op: "Mul"
  input: "truncated_normal/TruncatedNormal"
  input: "truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal"
  op: "Add"
  input: "truncated_normal/mul"
  input: "truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 750
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable/Assign"
  op: "Assign"
  input: "Variable"
  input: "truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable/read"
  op: "Identity"
  input: "Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_1/Assign"
  op: "Assign"
  input: "Variable_1"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_1/read"
  op: "Identity"
  input: "Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "dropout_1/mul_1"
  input: "Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add_1"
  op: "Add"
  input: "MatMul"
  input: "Variable_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/labels_stop_gradient"
  op: "StopGradient"
  input: "groundtruth_input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Shape"
  op: "Shape"
  input: "add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Shape_1"
  op: "Shape"
  input: "add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub"
  op: "Sub"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Rank_1"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice/begin"
  op: "Pack"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice"
  op: "Slice"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Shape_1"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice/begin"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat"
  op: "ConcatV2"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat/values_0"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape"
  op: "Reshape"
  input: "add_1"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Shape_2"
  op: "Shape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/labels_stop_gradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_1"
  op: "Sub"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Rank_2"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_1/begin"
  op: "Pack"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_1"
  op: "Slice"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Shape_2"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_1/begin"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat_1"
  op: "ConcatV2"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat_1/values_0"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_1"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_1"
  op: "Reshape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/labels_stop_gradient"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_2"
  op: "Sub"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Rank"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_2/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_2/size"
  op: "Pack"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_2"
  op: "Slice"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Shape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_2/begin"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2"
  op: "Reshape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/Mean"
  op: "Mean"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2"
  input: "cross_entropy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy_1/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "cross_entropy_1"
      }
    }
  }
}
node {
  name: "cross_entropy_1"
  op: "ScalarSummary"
  input: "cross_entropy_1/tags"
  input: "cross_entropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/learning_rate_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "train/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "train/gradients/Fill"
  op: "Fill"
  input: "train/gradients/Shape"
  input: "train/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/f_count_1"
  op: "Enter"
  input: "train/gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge"
  op: "Merge"
  input: "train/gradients/f_count_1"
  input: "train/gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Switch"
  op: "Switch"
  input: "train/gradients/Merge"
  input: "lstm3/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add/y"
  op: "Const"
  input: "^lstm3/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Add"
  op: "Add"
  input: "train/gradients/Switch:1"
  input: "train/gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration"
  op: "NextIteration"
  input: "train/gradients/Add"
  input: "^train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/StackPushV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul/StackPushV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul/StackPushV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul/StackPushV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_2"
  op: "Exit"
  input: "train/gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/b_count_1"
  op: "Enter"
  input: "train/gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_1"
  op: "Merge"
  input: "train/gradients/b_count_1"
  input: "train/gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "train/gradients/Merge_1"
  input: "train/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "train/gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/b_count_2"
  op: "LoopCond"
  input: "train/gradients/GreaterEqual"
}
node {
  name: "train/gradients/Switch_1"
  op: "Switch"
  input: "train/gradients/Merge_1"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Sub"
  op: "Sub"
  input: "train/gradients/Switch_1:1"
  input: "train/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_1"
  op: "NextIteration"
  input: "train/gradients/Sub"
  input: "^train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_3"
  op: "Exit"
  input: "train/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/f_count_4"
  op: "Enter"
  input: "train/gradients/f_count_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_2"
  op: "Merge"
  input: "train/gradients/f_count_4"
  input: "train/gradients/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Switch_2"
  op: "Switch"
  input: "train/gradients/Merge_2"
  input: "lstm2/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_1/y"
  op: "Const"
  input: "^lstm2/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Add_1"
  op: "Add"
  input: "train/gradients/Switch_2:1"
  input: "train/gradients/Add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_2"
  op: "NextIteration"
  input: "train/gradients/Add_1"
  input: "^train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/StackPushV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul/StackPushV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul/StackPushV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul/StackPushV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_5"
  op: "Exit"
  input: "train/gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/b_count_5"
  op: "Enter"
  input: "train/gradients/f_count_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_3"
  op: "Merge"
  input: "train/gradients/b_count_5"
  input: "train/gradients/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_1"
  op: "GreaterEqual"
  input: "train/gradients/Merge_3"
  input: "train/gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_1/Enter"
  op: "Enter"
  input: "train/gradients/b_count_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/b_count_6"
  op: "LoopCond"
  input: "train/gradients/GreaterEqual_1"
}
node {
  name: "train/gradients/Switch_3"
  op: "Switch"
  input: "train/gradients/Merge_3"
  input: "train/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Sub_1"
  op: "Sub"
  input: "train/gradients/Switch_3:1"
  input: "train/gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_3"
  op: "NextIteration"
  input: "train/gradients/Sub_1"
  input: "^train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_7"
  op: "Exit"
  input: "train/gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/f_count_7"
  op: "Enter"
  input: "train/gradients/f_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_4"
  op: "Merge"
  input: "train/gradients/f_count_7"
  input: "train/gradients/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Switch_4"
  op: "Switch"
  input: "train/gradients/Merge_4"
  input: "lstm1/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_2/y"
  op: "Const"
  input: "^lstm1/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Add_2"
  op: "Add"
  input: "train/gradients/Switch_4:1"
  input: "train/gradients/Add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_4"
  op: "NextIteration"
  input: "train/gradients/Add_2"
  input: "^train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/StackPushV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul/StackPushV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul/StackPushV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul/StackPushV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_8"
  op: "Exit"
  input: "train/gradients/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/b_count_9"
  op: "Enter"
  input: "train/gradients/f_count_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_5"
  op: "Merge"
  input: "train/gradients/b_count_9"
  input: "train/gradients/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_2"
  op: "GreaterEqual"
  input: "train/gradients/Merge_5"
  input: "train/gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_2/Enter"
  op: "Enter"
  input: "train/gradients/b_count_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/b_count_10"
  op: "LoopCond"
  input: "train/gradients/GreaterEqual_2"
}
node {
  name: "train/gradients/Switch_5"
  op: "Switch"
  input: "train/gradients/Merge_5"
  input: "train/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Sub_2"
  op: "Sub"
  input: "train/gradients/Switch_5:1"
  input: "train/gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_5"
  op: "NextIteration"
  input: "train/gradients/Sub_2"
  input: "^train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_11"
  op: "Exit"
  input: "train/gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/f_count_10"
  op: "Enter"
  input: "train/gradients/f_count_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_6"
  op: "Merge"
  input: "train/gradients/f_count_10"
  input: "train/gradients/NextIteration_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Switch_6"
  op: "Switch"
  input: "train/gradients/Merge_6"
  input: "resCONVLSTM_4/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_3/y"
  op: "Const"
  input: "^resCONVLSTM_4/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Add_3"
  op: "Add"
  input: "train/gradients/Switch_6:1"
  input: "train/gradients/Add_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_6"
  op: "NextIteration"
  input: "train/gradients/Add_3"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_11"
  op: "Exit"
  input: "train/gradients/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/b_count_13"
  op: "Enter"
  input: "train/gradients/f_count_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_7"
  op: "Merge"
  input: "train/gradients/b_count_13"
  input: "train/gradients/NextIteration_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_3"
  op: "GreaterEqual"
  input: "train/gradients/Merge_7"
  input: "train/gradients/GreaterEqual_3/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_3/Enter"
  op: "Enter"
  input: "train/gradients/b_count_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/b_count_14"
  op: "LoopCond"
  input: "train/gradients/GreaterEqual_3"
}
node {
  name: "train/gradients/Switch_7"
  op: "Switch"
  input: "train/gradients/Merge_7"
  input: "train/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Sub_3"
  op: "Sub"
  input: "train/gradients/Switch_7:1"
  input: "train/gradients/GreaterEqual_3/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_7"
  op: "NextIteration"
  input: "train/gradients/Sub_3"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_15"
  op: "Exit"
  input: "train/gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/f_count_13"
  op: "Enter"
  input: "train/gradients/f_count_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_8"
  op: "Merge"
  input: "train/gradients/f_count_13"
  input: "train/gradients/NextIteration_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Switch_8"
  op: "Switch"
  input: "train/gradients/Merge_8"
  input: "resCONVLSTM_3/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_4/y"
  op: "Const"
  input: "^resCONVLSTM_3/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Add_4"
  op: "Add"
  input: "train/gradients/Switch_8:1"
  input: "train/gradients/Add_4/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_8"
  op: "NextIteration"
  input: "train/gradients/Add_4"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_14"
  op: "Exit"
  input: "train/gradients/Switch_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_16"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/b_count_17"
  op: "Enter"
  input: "train/gradients/f_count_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_9"
  op: "Merge"
  input: "train/gradients/b_count_17"
  input: "train/gradients/NextIteration_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_4"
  op: "GreaterEqual"
  input: "train/gradients/Merge_9"
  input: "train/gradients/GreaterEqual_4/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_4/Enter"
  op: "Enter"
  input: "train/gradients/b_count_16"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/b_count_18"
  op: "LoopCond"
  input: "train/gradients/GreaterEqual_4"
}
node {
  name: "train/gradients/Switch_9"
  op: "Switch"
  input: "train/gradients/Merge_9"
  input: "train/gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Sub_4"
  op: "Sub"
  input: "train/gradients/Switch_9:1"
  input: "train/gradients/GreaterEqual_4/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_9"
  op: "NextIteration"
  input: "train/gradients/Sub_4"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_19"
  op: "Exit"
  input: "train/gradients/Switch_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/f_count_16"
  op: "Enter"
  input: "train/gradients/f_count_15"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_10"
  op: "Merge"
  input: "train/gradients/f_count_16"
  input: "train/gradients/NextIteration_10"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Switch_10"
  op: "Switch"
  input: "train/gradients/Merge_10"
  input: "resCONVLSTM_2/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_5/y"
  op: "Const"
  input: "^resCONVLSTM_2/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Add_5"
  op: "Add"
  input: "train/gradients/Switch_10:1"
  input: "train/gradients/Add_5/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_10"
  op: "NextIteration"
  input: "train/gradients/Add_5"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_17"
  op: "Exit"
  input: "train/gradients/Switch_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/b_count_21"
  op: "Enter"
  input: "train/gradients/f_count_17"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_11"
  op: "Merge"
  input: "train/gradients/b_count_21"
  input: "train/gradients/NextIteration_11"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_5"
  op: "GreaterEqual"
  input: "train/gradients/Merge_11"
  input: "train/gradients/GreaterEqual_5/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_5/Enter"
  op: "Enter"
  input: "train/gradients/b_count_20"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/b_count_22"
  op: "LoopCond"
  input: "train/gradients/GreaterEqual_5"
}
node {
  name: "train/gradients/Switch_11"
  op: "Switch"
  input: "train/gradients/Merge_11"
  input: "train/gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Sub_5"
  op: "Sub"
  input: "train/gradients/Switch_11:1"
  input: "train/gradients/GreaterEqual_5/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_11"
  op: "NextIteration"
  input: "train/gradients/Sub_5"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_23"
  op: "Exit"
  input: "train/gradients/Switch_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/f_count_19"
  op: "Enter"
  input: "train/gradients/f_count_18"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_12"
  op: "Merge"
  input: "train/gradients/f_count_19"
  input: "train/gradients/NextIteration_12"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Switch_12"
  op: "Switch"
  input: "train/gradients/Merge_12"
  input: "resCONVLSTM_1/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_6/y"
  op: "Const"
  input: "^resCONVLSTM_1/rnn_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Add_6"
  op: "Add"
  input: "train/gradients/Switch_12:1"
  input: "train/gradients/Add_6/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_12"
  op: "NextIteration"
  input: "train/gradients/Add_6"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_20"
  op: "Exit"
  input: "train/gradients/Switch_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/b_count_25"
  op: "Enter"
  input: "train/gradients/f_count_20"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_13"
  op: "Merge"
  input: "train/gradients/b_count_25"
  input: "train/gradients/NextIteration_13"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_6"
  op: "GreaterEqual"
  input: "train/gradients/Merge_13"
  input: "train/gradients/GreaterEqual_6/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_6/Enter"
  op: "Enter"
  input: "train/gradients/b_count_24"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/b_count_26"
  op: "LoopCond"
  input: "train/gradients/GreaterEqual_6"
}
node {
  name: "train/gradients/Switch_13"
  op: "Switch"
  input: "train/gradients/Merge_13"
  input: "train/gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Sub_6"
  op: "Sub"
  input: "train/gradients/Switch_13:1"
  input: "train/gradients/GreaterEqual_6/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_13"
  op: "NextIteration"
  input: "train/gradients/Sub_6"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_27"
  op: "Exit"
  input: "train/gradients/Switch_13"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/f_count_22"
  op: "Enter"
  input: "train/gradients/f_count_21"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_14"
  op: "Merge"
  input: "train/gradients/f_count_22"
  input: "train/gradients/NextIteration_14"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Switch_14"
  op: "Switch"
  input: "train/gradients/Merge_14"
  input: "resCONVLSTM_4/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_7/y"
  op: "Const"
  input: "^resCONVLSTM_4/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Add_7"
  op: "Add"
  input: "train/gradients/Switch_14:1"
  input: "train/gradients/Add_7/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_14"
  op: "NextIteration"
  input: "train/gradients/Add_7"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_23"
  op: "Exit"
  input: "train/gradients/Switch_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_28"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/b_count_29"
  op: "Enter"
  input: "train/gradients/f_count_23"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_15"
  op: "Merge"
  input: "train/gradients/b_count_29"
  input: "train/gradients/NextIteration_15"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_7"
  op: "GreaterEqual"
  input: "train/gradients/Merge_15"
  input: "train/gradients/GreaterEqual_7/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_7/Enter"
  op: "Enter"
  input: "train/gradients/b_count_28"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/b_count_30"
  op: "LoopCond"
  input: "train/gradients/GreaterEqual_7"
}
node {
  name: "train/gradients/Switch_15"
  op: "Switch"
  input: "train/gradients/Merge_15"
  input: "train/gradients/b_count_30"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Sub_7"
  op: "Sub"
  input: "train/gradients/Switch_15:1"
  input: "train/gradients/GreaterEqual_7/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_15"
  op: "NextIteration"
  input: "train/gradients/Sub_7"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_31"
  op: "Exit"
  input: "train/gradients/Switch_15"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/f_count_25"
  op: "Enter"
  input: "train/gradients/f_count_24"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_16"
  op: "Merge"
  input: "train/gradients/f_count_25"
  input: "train/gradients/NextIteration_16"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Switch_16"
  op: "Switch"
  input: "train/gradients/Merge_16"
  input: "resCONVLSTM_3/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_8/y"
  op: "Const"
  input: "^resCONVLSTM_3/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Add_8"
  op: "Add"
  input: "train/gradients/Switch_16:1"
  input: "train/gradients/Add_8/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_16"
  op: "NextIteration"
  input: "train/gradients/Add_8"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_26"
  op: "Exit"
  input: "train/gradients/Switch_16"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/b_count_33"
  op: "Enter"
  input: "train/gradients/f_count_26"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_17"
  op: "Merge"
  input: "train/gradients/b_count_33"
  input: "train/gradients/NextIteration_17"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_8"
  op: "GreaterEqual"
  input: "train/gradients/Merge_17"
  input: "train/gradients/GreaterEqual_8/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_8/Enter"
  op: "Enter"
  input: "train/gradients/b_count_32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/b_count_34"
  op: "LoopCond"
  input: "train/gradients/GreaterEqual_8"
}
node {
  name: "train/gradients/Switch_17"
  op: "Switch"
  input: "train/gradients/Merge_17"
  input: "train/gradients/b_count_34"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Sub_8"
  op: "Sub"
  input: "train/gradients/Switch_17:1"
  input: "train/gradients/GreaterEqual_8/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_17"
  op: "NextIteration"
  input: "train/gradients/Sub_8"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_35"
  op: "Exit"
  input: "train/gradients/Switch_17"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/f_count_28"
  op: "Enter"
  input: "train/gradients/f_count_27"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_18"
  op: "Merge"
  input: "train/gradients/f_count_28"
  input: "train/gradients/NextIteration_18"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Switch_18"
  op: "Switch"
  input: "train/gradients/Merge_18"
  input: "resCONVLSTM_2/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_9/y"
  op: "Const"
  input: "^resCONVLSTM_2/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Add_9"
  op: "Add"
  input: "train/gradients/Switch_18:1"
  input: "train/gradients/Add_9/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_18"
  op: "NextIteration"
  input: "train/gradients/Add_9"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_29"
  op: "Exit"
  input: "train/gradients/Switch_18"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/b_count_37"
  op: "Enter"
  input: "train/gradients/f_count_29"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_19"
  op: "Merge"
  input: "train/gradients/b_count_37"
  input: "train/gradients/NextIteration_19"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_9"
  op: "GreaterEqual"
  input: "train/gradients/Merge_19"
  input: "train/gradients/GreaterEqual_9/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_9/Enter"
  op: "Enter"
  input: "train/gradients/b_count_36"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/b_count_38"
  op: "LoopCond"
  input: "train/gradients/GreaterEqual_9"
}
node {
  name: "train/gradients/Switch_19"
  op: "Switch"
  input: "train/gradients/Merge_19"
  input: "train/gradients/b_count_38"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Sub_9"
  op: "Sub"
  input: "train/gradients/Switch_19:1"
  input: "train/gradients/GreaterEqual_9/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_19"
  op: "NextIteration"
  input: "train/gradients/Sub_9"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_39"
  op: "Exit"
  input: "train/gradients/Switch_19"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/f_count_31"
  op: "Enter"
  input: "train/gradients/f_count_30"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_20"
  op: "Merge"
  input: "train/gradients/f_count_31"
  input: "train/gradients/NextIteration_20"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Switch_20"
  op: "Switch"
  input: "train/gradients/Merge_20"
  input: "resCONVLSTM_1/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_10/y"
  op: "Const"
  input: "^resCONVLSTM_1/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Add_10"
  op: "Add"
  input: "train/gradients/Switch_20:1"
  input: "train/gradients/Add_10/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_20"
  op: "NextIteration"
  input: "train/gradients/Add_10"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul/StackPushV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_32"
  op: "Exit"
  input: "train/gradients/Switch_20"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_40"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/b_count_41"
  op: "Enter"
  input: "train/gradients/f_count_32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_21"
  op: "Merge"
  input: "train/gradients/b_count_41"
  input: "train/gradients/NextIteration_21"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_10"
  op: "GreaterEqual"
  input: "train/gradients/Merge_21"
  input: "train/gradients/GreaterEqual_10/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_10/Enter"
  op: "Enter"
  input: "train/gradients/b_count_40"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/b_count_42"
  op: "LoopCond"
  input: "train/gradients/GreaterEqual_10"
}
node {
  name: "train/gradients/Switch_21"
  op: "Switch"
  input: "train/gradients/Merge_21"
  input: "train/gradients/b_count_42"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Sub_10"
  op: "Sub"
  input: "train/gradients/Switch_21:1"
  input: "train/gradients/GreaterEqual_10/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_21"
  op: "NextIteration"
  input: "train/gradients/Sub_10"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_43"
  op: "Exit"
  input: "train/gradients/Switch_21"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Fill"
  input: "train/gradients/cross_entropy/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Shape"
  op: "Shape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Tile"
  op: "Tile"
  input: "train/gradients/cross_entropy/Mean_grad/Reshape"
  input: "train/gradients/cross_entropy/Mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Shape_1"
  op: "Shape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Prod"
  op: "Prod"
  input: "train/gradients/cross_entropy/Mean_grad/Shape_1"
  input: "train/gradients/cross_entropy/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Prod_1"
  op: "Prod"
  input: "train/gradients/cross_entropy/Mean_grad/Shape_2"
  input: "train/gradients/cross_entropy/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Maximum"
  op: "Maximum"
  input: "train/gradients/cross_entropy/Mean_grad/Prod_1"
  input: "train/gradients/cross_entropy/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "train/gradients/cross_entropy/Mean_grad/Prod"
  input: "train/gradients/cross_entropy/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Cast"
  op: "Cast"
  input: "train/gradients/cross_entropy/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/truediv"
  op: "RealDiv"
  input: "train/gradients/cross_entropy/Mean_grad/Tile"
  input: "train/gradients/cross_entropy/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2_grad/Shape"
  op: "Shape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/Mean_grad/truediv"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_like"
  op: "ZerosLike"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims"
  op: "ExpandDims"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2_grad/Reshape"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul"
  op: "Mul"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/Neg"
  op: "Neg"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2_grad/Reshape"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul_1"
  op: "Mul"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims_1"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul"
  input: "^train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul_1"
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul"
  input: "^train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul_1"
  input: "^train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul_1"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_grad/Shape"
  op: "Shape"
  input: "add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/tuple/control_dependency"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_1_grad/Shape"
  op: "Shape"
  input: "MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_1_grad/Shape"
  input: "train/gradients/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_grad/Reshape"
  input: "train/gradients/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_1_grad/Sum"
  input: "train/gradients/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_grad/Reshape"
  input: "train/gradients/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_1_grad/Sum_1"
  input: "train/gradients/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_1_grad/Reshape"
  input: "^train/gradients/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_1_grad/Reshape"
  input: "^train/gradients/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_1_grad/Reshape_1"
  input: "^train/gradients/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/add_1_grad/tuple/control_dependency"
  input: "Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dropout_1/mul_1"
  input: "train/gradients/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MatMul_grad/MatMul"
  input: "^train/gradients/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MatMul_grad/MatMul"
  input: "^train/gradients/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MatMul_grad/MatMul_1"
  input: "^train/gradients/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_1_grad/Shape"
  op: "Shape"
  input: "dropout_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_1/mul_1_grad/Shape"
  input: "train/gradients/dropout_1/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/MatMul_grad/tuple/control_dependency"
  input: "dropout_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_1/mul_1_grad/Mul"
  input: "train/gradients/dropout_1/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_1/mul_1_grad/Sum"
  input: "train/gradients/dropout_1/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dropout_1/mul"
  input: "train/gradients/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_1/mul_1_grad/Mul_1"
  input: "train/gradients/dropout_1/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_1/mul_1_grad/Sum_1"
  input: "train/gradients/dropout_1/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_1/mul_1_grad/Reshape"
  input: "^train/gradients/dropout_1/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_1/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_1/mul_1_grad/Reshape"
  input: "^train/gradients/dropout_1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_1/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_1/mul_1_grad/Reshape_1"
  input: "^train/gradients/dropout_1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_1/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Shape"
  op: "Shape"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_1/mul_grad/Shape"
  input: "train/gradients/dropout_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_1/mul_1_grad/tuple/control_dependency"
  input: "dropout_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_1/mul_grad/Mul"
  input: "train/gradients/dropout_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_1/mul_grad/Sum"
  input: "train/gradients/dropout_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Mul_1"
  op: "Mul"
  input: "Relu"
  input: "train/gradients/dropout_1/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_1/mul_grad/Mul_1"
  input: "train/gradients/dropout_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_1/mul_grad/Sum_1"
  input: "train/gradients/dropout_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_1/mul_grad/Reshape"
  input: "^train/gradients/dropout_1/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_1/mul_grad/Reshape"
  input: "^train/gradients/dropout_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_1/mul_grad/Reshape_1"
  input: "^train/gradients/dropout_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/dropout_1/mul_grad/tuple/control_dependency"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Relu_grad/ReluGrad"
  input: "^train/gradients/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Relu_grad/ReluGrad"
  input: "^train/gradients/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dense/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/dense/BiasAdd_grad/tuple/control_dependency"
  input: "dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dropout/mul_1"
  input: "train/gradients/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dense/MatMul_grad/MatMul"
  input: "^train/gradients/dense/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dense/MatMul_grad/MatMul"
  input: "^train/gradients/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dense/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dense/MatMul_grad/MatMul_1"
  input: "^train/gradients/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dense/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout/mul_1_grad/Shape"
  input: "train/gradients/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/dense/MatMul_grad/tuple/control_dependency"
  input: "dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout/mul_1_grad/Mul"
  input: "train/gradients/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout/mul_1_grad/Sum"
  input: "train/gradients/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dropout/mul"
  input: "train/gradients/dense/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout/mul_1_grad/Mul_1"
  input: "train/gradients/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout/mul_1_grad/Sum_1"
  input: "train/gradients/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout/mul_1_grad/Reshape"
  input: "^train/gradients/dropout/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout/mul_1_grad/Reshape"
  input: "^train/gradients/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout/mul_1_grad/Reshape_1"
  input: "^train/gradients/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Shape"
  op: "Shape"
  input: "Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout/mul_grad/Shape"
  input: "train/gradients/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout/mul_1_grad/tuple/control_dependency"
  input: "dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout/mul_grad/Mul"
  input: "train/gradients/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout/mul_grad/Sum"
  input: "train/gradients/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "Reshape_2"
  input: "train/gradients/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout/mul_grad/Mul_1"
  input: "train/gradients/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout/mul_grad/Sum_1"
  input: "train/gradients/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout/mul_grad/Reshape"
  input: "^train/gradients/dropout/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout/mul_grad/Reshape"
  input: "^train/gradients/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout/mul_grad/Reshape_1"
  input: "^train/gradients/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reshape_2_grad/Shape"
  op: "Shape"
  input: "lstm3/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout/mul_grad/tuple/control_dependency"
  input: "train/gradients/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/Reshape_grad/Shape"
  op: "Shape"
  input: "lstm3/rnn/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/Reshape_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reshape_2_grad/Reshape"
  input: "train/gradients/lstm3/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "lstm3/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/transpose_1_grad/transpose"
  op: "Transpose"
  input: "train/gradients/lstm3/Reshape_grad/Reshape"
  input: "train/gradients/lstm3/rnn/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "lstm3/rnn/TensorArray"
  input: "lstm3/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "lstm3/rnn/while/Exit_2"
  input: "^train/gradients/lstm3/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/gradients/lstm3/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "lstm3/rnn/TensorArrayStack/range"
  input: "train/gradients/lstm3/rnn/transpose_1_grad/transpose"
  input: "train/gradients/lstm3/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "lstm3/rnn/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "lstm3/rnn/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/gradients/lstm3/rnn/while/Exit_2_grad/b_exit"
  input: "train/gradients/lstm3/rnn/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/gradients/lstm3/rnn/while/Exit_3_grad/b_exit"
  input: "train/gradients/lstm3/rnn/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "train/gradients/lstm3/rnn/while/Exit_4_grad/b_exit"
  input: "train/gradients/lstm3/rnn/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/gradients/lstm3/rnn/while/Switch_2_grad/b_switch"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm3/rnn/while/Merge_2_grad/Switch"
}
node {
  name: "train/gradients/lstm3/rnn/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/Merge_2_grad/Switch"
  input: "^train/gradients/lstm3/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/Merge_2_grad/Switch:1"
  input: "^train/gradients/lstm3/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/gradients/lstm3/rnn/while/Switch_3_grad/b_switch"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm3/rnn/while/Merge_3_grad/Switch"
}
node {
  name: "train/gradients/lstm3/rnn/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/Merge_3_grad/Switch"
  input: "^train/gradients/lstm3/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/Merge_3_grad/Switch:1"
  input: "^train/gradients/lstm3/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "train/gradients/lstm3/rnn/while/Switch_4_grad/b_switch"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm3/rnn/while/Merge_4_grad/Switch"
}
node {
  name: "train/gradients/lstm3/rnn/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/Merge_4_grad/Switch"
  input: "^train/gradients/lstm3/rnn/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/Merge_4_grad/Switch:1"
  input: "^train/gradients/lstm3/rnn/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/gradients/lstm3/rnn/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/gradients/lstm3/rnn/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "train/gradients/lstm3/rnn/while/Merge_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/lstm3/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/lstm_cell/MatMul_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "lstm3/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/lstm_cell/MatMul_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/lstm_cell/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "lstm3/rnn/while/Identity_1"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul/StackPopV2"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm3/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/AddN"
  op: "AddN"
  input: "train/gradients/lstm3/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  input: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/AddN"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "lstm3/rnn/lstm_cell/projection/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "train/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "lstm3/rnn/while/lstm_cell/mul_2"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1"
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "lstm3/rnn/while/lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "lstm3/rnn/while/lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Shape"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Shape_1"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/tuple/control_dependency"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul/Enter"
  input: "lstm3/rnn/while/lstm_cell/Tanh_1"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Sum"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul_1/Enter"
  input: "lstm3/rnn/while/lstm_cell/Sigmoid_2"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul_1"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Sum_1"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Reshape"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Reshape"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Reshape_1"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 650
          }
          dim {
            size: 40
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc_1"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1/Enter_grad/Switch:1"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_1"
  op: "AddN"
  input: "train/gradients/lstm3/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/Shape"
  op: "Shape"
  input: "lstm3/rnn/while/lstm_cell/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/Shape_1"
  op: "Shape"
  input: "lstm3/rnn/while/lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/Shape"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/Shape_1"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_1"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/Sum"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_1"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/Sum_1"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/Reshape"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/Reshape"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/Reshape_1"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Shape"
  op: "Shape"
  input: "lstm3/rnn/while/lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "lstm3/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Shape"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Shape_1"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul/Enter"
  input: "lstm3/rnn/while/Identity_3"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Sum"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul_1/Enter"
  input: "lstm3/rnn/while/lstm_cell/Sigmoid"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul_1"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Sum_1"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Reshape"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Reshape"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Reshape_1"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "lstm3/rnn/while/lstm_cell/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "lstm3/rnn/while/lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Shape"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Shape_1"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul/Enter"
  input: "lstm3/rnn/while/lstm_cell/Tanh"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Sum"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul_1/Enter"
  input: "lstm3/rnn/while/lstm_cell/Sigmoid_1"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul_1"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Sum_1"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Reshape"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Reshape"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Reshape_1"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/Shape"
  op: "Shape"
  input: "lstm3/rnn/while/lstm_cell/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/Shape"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/Sum"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/Sum_1"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/add_grad/Reshape"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/add_grad/Reshape_1"
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/Reshape"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/Reshape_1"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/Tanh_grad/TanhGrad"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/add_grad/tuple/control_dependency"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/split_grad/concat/Const"
  op: "Const"
  input: "^train/gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/split_grad/concat"
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/split_grad/concat"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/split_grad/concat"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "lstm3/rnn/lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "lstm3/rnn/while/lstm_cell/concat"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul_1"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2600
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/Const"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/Shape"
  op: "Shape"
  input: "lstm3/rnn/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/Enter"
  input: "lstm3/rnn/while/TensorArrayReadV3"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/Enter_1"
  input: "lstm3/rnn/while/Identity_4"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/mod"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ConcatOffset"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ConcatOffset:1"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/Slice"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/Slice_1"
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/Slice"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/Slice_1"
  input: "^train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
          dim {
            size: 2600
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/lstm3/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/lstm3/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "lstm3/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "lstm3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/lstm3/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "train/gradients/lstm3/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/lstm3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/tuple/control_dependency"
  input: "train/gradients/lstm3/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/lstm3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/lstm3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "train/gradients/lstm3/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "train/gradients/lstm3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "train/gradients/lstm3/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "train/gradients/lstm3/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/lstm3/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/lstm3/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "lstm3/rnn/TensorArray_1"
  input: "train/gradients/lstm3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/lstm3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/TensorArray_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "train/gradients/lstm3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "lstm3/rnn/TensorArrayUnstack/range"
  input: "train/gradients/lstm3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/lstm3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "train/gradients/lstm3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/lstm3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/lstm3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "lstm3/rnn/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm3/rnn/transpose_grad/transpose"
  op: "Transpose"
  input: "train/gradients/lstm3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "train/gradients/lstm3/rnn/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/Reshape_1_grad/Shape"
  op: "Shape"
  input: "lstm2/BatchNorm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/lstm3/rnn/transpose_grad/transpose"
  input: "train/gradients/lstm2/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/BatchNorm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/lstm2/Reshape_1_grad/Reshape"
  input: "lstm2/BatchNorm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond_1/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/lstm2/BatchNorm/Relu_grad/ReluGrad"
  input: "lstm2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/BatchNorm/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm2/BatchNorm/cond_1/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond_1/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm2/BatchNorm/cond_1/Merge_grad/cond_grad"
  input: "^train/gradients/lstm2/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/BatchNorm/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond_1/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm2/BatchNorm/cond_1/Merge_grad/cond_grad:1"
  input: "^train/gradients/lstm2/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/BatchNorm/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_22"
  op: "Switch"
  input: "lstm2/BatchNorm/cond/Merge"
  input: "lstm2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity"
  op: "Identity"
  input: "train/gradients/Switch_22:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_1"
  op: "Shape"
  input: "train/gradients/Switch_22:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros/Const"
  op: "Const"
  input: "^train/gradients/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros"
  op: "Fill"
  input: "train/gradients/Shape_1"
  input: "train/gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/lstm2/BatchNorm/cond_1/Merge_grad/tuple/control_dependency"
  input: "train/gradients/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_23"
  op: "Switch"
  input: "lstm2/BatchNorm/cond/Merge"
  input: "lstm2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_1"
  op: "Identity"
  input: "train/gradients/Switch_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_2"
  op: "Shape"
  input: "train/gradients/Switch_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_1/Const"
  op: "Const"
  input: "^train/gradients/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_1"
  op: "Fill"
  input: "train/gradients/Shape_2"
  input: "train/gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond_1/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_1"
  input: "train/gradients/lstm2/BatchNorm/cond_1/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_2"
  op: "AddN"
  input: "train/gradients/lstm2/BatchNorm/cond_1/Switch_1_grad/cond_grad"
  input: "train/gradients/lstm2/BatchNorm/cond_1/Identity/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/AddN_2"
  input: "lstm2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm2/BatchNorm/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm2/BatchNorm/cond/Merge_grad/cond_grad"
  input: "^train/gradients/lstm2/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm2/BatchNorm/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/lstm2/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_3"
  op: "ZerosLike"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_4"
  op: "ZerosLike"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_5"
  op: "ZerosLike"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_6"
  op: "ZerosLike"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/lstm2/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm_1/Switch"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_7"
  op: "ZerosLike"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_8"
  op: "ZerosLike"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_9"
  op: "ZerosLike"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_10"
  op: "ZerosLike"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/lstm2/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm/Switch:1"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm/Switch_1:1"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm:3"
  input: "lstm2/BatchNorm/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_24"
  op: "Switch"
  input: "lstm2/nin1/BiasAdd"
  input: "lstm2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_2"
  op: "Identity"
  input: "train/gradients/Switch_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_3"
  op: "Shape"
  input: "train/gradients/Switch_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_2/Const"
  op: "Const"
  input: "^train/gradients/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_2"
  op: "Fill"
  input: "train/gradients/Shape_3"
  input: "train/gradients/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_25"
  op: "Switch"
  input: "lstm2/BatchNorm/beta/read"
  input: "lstm2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_3"
  op: "Identity"
  input: "train/gradients/Switch_25:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_4"
  op: "Shape"
  input: "train/gradients/Switch_25:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_3/Const"
  op: "Const"
  input: "^train/gradients/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_3"
  op: "Fill"
  input: "train/gradients/Shape_4"
  input: "train/gradients/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_26"
  op: "Switch"
  input: "lstm2/nin1/BiasAdd"
  input: "lstm2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_4"
  op: "Identity"
  input: "train/gradients/Switch_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_5"
  op: "Shape"
  input: "train/gradients/Switch_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_4/Const"
  op: "Const"
  input: "^train/gradients/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_4"
  op: "Fill"
  input: "train/gradients/Shape_5"
  input: "train/gradients/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_4"
  input: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_27"
  op: "Switch"
  input: "lstm2/BatchNorm/beta/read"
  input: "lstm2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_5"
  op: "Identity"
  input: "train/gradients/Switch_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_6"
  op: "Shape"
  input: "train/gradients/Switch_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_5/Const"
  op: "Const"
  input: "^train/gradients/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_5"
  op: "Fill"
  input: "train/gradients/Shape_6"
  input: "train/gradients/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_5"
  input: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_3"
  op: "AddN"
  input: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/nin1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/lstm2/nin1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/AddN_3"
  input: "^train/gradients/lstm2/nin1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/lstm2/nin1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/AddN_3"
  input: "^train/gradients/lstm2/nin1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/nin1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm2/nin1/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/lstm2/nin1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/nin1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_4"
  op: "AddN"
  input: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/nin1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "lstm2/Reshape"
  input: "lstm2/nin1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/nin1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/lstm2/nin1/Conv2D_grad/ShapeN"
  input: "lstm2/nin1/kernel/read"
  input: "train/gradients/lstm2/nin1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/lstm2/nin1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "lstm2/Reshape"
  input: "train/gradients/lstm2/nin1/Conv2D_grad/ShapeN:1"
  input: "train/gradients/lstm2/nin1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/lstm2/nin1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm2/nin1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/lstm2/nin1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/lstm2/nin1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm2/nin1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/lstm2/nin1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/nin1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/nin1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm2/nin1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/lstm2/nin1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/nin1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/Reshape_grad/Shape"
  op: "Shape"
  input: "lstm2/rnn/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/Reshape_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/lstm2/nin1/Conv2D_grad/tuple/control_dependency"
  input: "train/gradients/lstm2/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "lstm2/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/transpose_1_grad/transpose"
  op: "Transpose"
  input: "train/gradients/lstm2/Reshape_grad/Reshape"
  input: "train/gradients/lstm2/rnn/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "lstm2/rnn/TensorArray"
  input: "lstm2/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "lstm2/rnn/while/Exit_2"
  input: "^train/gradients/lstm2/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/gradients/lstm2/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "lstm2/rnn/TensorArrayStack/range"
  input: "train/gradients/lstm2/rnn/transpose_1_grad/transpose"
  input: "train/gradients/lstm2/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_11"
  op: "ZerosLike"
  input: "lstm2/rnn/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_12"
  op: "ZerosLike"
  input: "lstm2/rnn/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/gradients/lstm2/rnn/while/Exit_2_grad/b_exit"
  input: "train/gradients/lstm2/rnn/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/gradients/lstm2/rnn/while/Exit_3_grad/b_exit"
  input: "train/gradients/lstm2/rnn/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "train/gradients/lstm2/rnn/while/Exit_4_grad/b_exit"
  input: "train/gradients/lstm2/rnn/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/gradients/lstm2/rnn/while/Switch_2_grad/b_switch"
  input: "train/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm2/rnn/while/Merge_2_grad/Switch"
}
node {
  name: "train/gradients/lstm2/rnn/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/Merge_2_grad/Switch"
  input: "^train/gradients/lstm2/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/Merge_2_grad/Switch:1"
  input: "^train/gradients/lstm2/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/gradients/lstm2/rnn/while/Switch_3_grad/b_switch"
  input: "train/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm2/rnn/while/Merge_3_grad/Switch"
}
node {
  name: "train/gradients/lstm2/rnn/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/Merge_3_grad/Switch"
  input: "^train/gradients/lstm2/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/Merge_3_grad/Switch:1"
  input: "^train/gradients/lstm2/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "train/gradients/lstm2/rnn/while/Switch_4_grad/b_switch"
  input: "train/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm2/rnn/while/Merge_4_grad/Switch"
}
node {
  name: "train/gradients/lstm2/rnn/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/Merge_4_grad/Switch"
  input: "^train/gradients/lstm2/rnn/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/Merge_4_grad/Switch:1"
  input: "^train/gradients/lstm2/rnn/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/gradients/lstm2/rnn/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/gradients/lstm2/rnn/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "train/gradients/lstm2/rnn/while/Merge_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/lstm2/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/lstm_cell/MatMul_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "lstm2/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/lstm_cell/MatMul_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/lstm_cell/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "lstm2/rnn/while/Identity_1"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul/StackPopV2"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm2/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_5"
  op: "AddN"
  input: "train/gradients/lstm2/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  input: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/AddN_5"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "lstm2/rnn/lstm_cell/projection/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "train/gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "lstm2/rnn/while/lstm_cell/mul_2"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1"
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "lstm2/rnn/while/lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "lstm2/rnn/while/lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Shape"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Shape_1"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/tuple/control_dependency"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul/Enter"
  input: "lstm2/rnn/while/lstm_cell/Tanh_1"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Sum"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul_1/Enter"
  input: "lstm2/rnn/while/lstm_cell/Sigmoid_2"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul_1"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Sum_1"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Reshape"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Reshape"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Reshape_1"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 650
          }
          dim {
            size: 40
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc_1"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1/Enter_grad/Switch:1"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_6"
  op: "AddN"
  input: "train/gradients/lstm2/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/Shape"
  op: "Shape"
  input: "lstm2/rnn/while/lstm_cell/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/Shape_1"
  op: "Shape"
  input: "lstm2/rnn/while/lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/Shape"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/Shape_1"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_6"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/Sum"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_6"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/Sum_1"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/Reshape"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/Reshape"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/Reshape_1"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Shape"
  op: "Shape"
  input: "lstm2/rnn/while/lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "lstm2/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Shape"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Shape_1"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul/Enter"
  input: "lstm2/rnn/while/Identity_3"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Sum"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul_1/Enter"
  input: "lstm2/rnn/while/lstm_cell/Sigmoid"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul_1"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Sum_1"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Reshape"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Reshape"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Reshape_1"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "lstm2/rnn/while/lstm_cell/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "lstm2/rnn/while/lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Shape"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Shape_1"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul/Enter"
  input: "lstm2/rnn/while/lstm_cell/Tanh"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Sum"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul_1/Enter"
  input: "lstm2/rnn/while/lstm_cell/Sigmoid_1"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul_1"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Sum_1"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Reshape"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Reshape"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Reshape_1"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/Shape"
  op: "Shape"
  input: "lstm2/rnn/while/lstm_cell/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/Shape"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/Sum"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/Sum_1"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/add_grad/Reshape"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/add_grad/Reshape_1"
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/Reshape"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/Reshape_1"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/Tanh_grad/TanhGrad"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/add_grad/tuple/control_dependency"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/split_grad/concat/Const"
  op: "Const"
  input: "^train/gradients/Sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/split_grad/concat"
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/split_grad/concat"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/split_grad/concat"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "lstm2/rnn/lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "lstm2/rnn/while/lstm_cell/concat"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul_1"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2600
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/Const"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/Shape"
  op: "Shape"
  input: "lstm2/rnn/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/Enter"
  input: "lstm2/rnn/while/TensorArrayReadV3"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/Enter_1"
  input: "lstm2/rnn/while/Identity_4"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/mod"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ConcatOffset"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ConcatOffset:1"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/Slice"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/Slice_1"
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/Slice"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/Slice_1"
  input: "^train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
          dim {
            size: 2600
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/lstm2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/lstm2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "lstm2/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "lstm2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/lstm2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "train/gradients/lstm2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/lstm2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/tuple/control_dependency"
  input: "train/gradients/lstm2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/lstm2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/lstm2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "train/gradients/lstm2/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "train/gradients/lstm2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "train/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "train/gradients/lstm2/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "train/gradients/lstm2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/lstm2/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/lstm2/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "lstm2/rnn/TensorArray_1"
  input: "train/gradients/lstm2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/lstm2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/TensorArray_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "train/gradients/lstm2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "lstm2/rnn/TensorArrayUnstack/range"
  input: "train/gradients/lstm2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/lstm2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "train/gradients/lstm2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/lstm2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/lstm2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "lstm2/rnn/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm2/rnn/transpose_grad/transpose"
  op: "Transpose"
  input: "train/gradients/lstm2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "train/gradients/lstm2/rnn/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/Reshape_1_grad/Shape"
  op: "Shape"
  input: "lstm1/BatchNorm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/lstm2/rnn/transpose_grad/transpose"
  input: "train/gradients/lstm1/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/BatchNorm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/lstm1/Reshape_1_grad/Reshape"
  input: "lstm1/BatchNorm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond_1/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/lstm1/BatchNorm/Relu_grad/ReluGrad"
  input: "lstm1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/BatchNorm/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm1/BatchNorm/cond_1/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond_1/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm1/BatchNorm/cond_1/Merge_grad/cond_grad"
  input: "^train/gradients/lstm1/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/BatchNorm/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond_1/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm1/BatchNorm/cond_1/Merge_grad/cond_grad:1"
  input: "^train/gradients/lstm1/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/BatchNorm/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_28"
  op: "Switch"
  input: "lstm1/BatchNorm/cond/Merge"
  input: "lstm1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_6"
  op: "Identity"
  input: "train/gradients/Switch_28:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_7"
  op: "Shape"
  input: "train/gradients/Switch_28:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_6/Const"
  op: "Const"
  input: "^train/gradients/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_6"
  op: "Fill"
  input: "train/gradients/Shape_7"
  input: "train/gradients/zeros_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/lstm1/BatchNorm/cond_1/Merge_grad/tuple/control_dependency"
  input: "train/gradients/zeros_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_29"
  op: "Switch"
  input: "lstm1/BatchNorm/cond/Merge"
  input: "lstm1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_7"
  op: "Identity"
  input: "train/gradients/Switch_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_8"
  op: "Shape"
  input: "train/gradients/Switch_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_7/Const"
  op: "Const"
  input: "^train/gradients/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_7"
  op: "Fill"
  input: "train/gradients/Shape_8"
  input: "train/gradients/zeros_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond_1/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_7"
  input: "train/gradients/lstm1/BatchNorm/cond_1/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_7"
  op: "AddN"
  input: "train/gradients/lstm1/BatchNorm/cond_1/Switch_1_grad/cond_grad"
  input: "train/gradients/lstm1/BatchNorm/cond_1/Identity/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/AddN_7"
  input: "lstm1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm1/BatchNorm/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm1/BatchNorm/cond/Merge_grad/cond_grad"
  input: "^train/gradients/lstm1/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm1/BatchNorm/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/lstm1/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_13"
  op: "ZerosLike"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_14"
  op: "ZerosLike"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_15"
  op: "ZerosLike"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_16"
  op: "ZerosLike"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/lstm1/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm_1/Switch"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_17"
  op: "ZerosLike"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_18"
  op: "ZerosLike"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_19"
  op: "ZerosLike"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_20"
  op: "ZerosLike"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/lstm1/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm/Switch:1"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm/Switch_1:1"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm:3"
  input: "lstm1/BatchNorm/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_30"
  op: "Switch"
  input: "lstm1/nin1/BiasAdd"
  input: "lstm1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_8"
  op: "Identity"
  input: "train/gradients/Switch_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_9"
  op: "Shape"
  input: "train/gradients/Switch_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_8/Const"
  op: "Const"
  input: "^train/gradients/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_8"
  op: "Fill"
  input: "train/gradients/Shape_9"
  input: "train/gradients/zeros_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_31"
  op: "Switch"
  input: "lstm1/BatchNorm/beta/read"
  input: "lstm1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_9"
  op: "Identity"
  input: "train/gradients/Switch_31:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_10"
  op: "Shape"
  input: "train/gradients/Switch_31:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_9/Const"
  op: "Const"
  input: "^train/gradients/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_9"
  op: "Fill"
  input: "train/gradients/Shape_10"
  input: "train/gradients/zeros_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_32"
  op: "Switch"
  input: "lstm1/nin1/BiasAdd"
  input: "lstm1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_10"
  op: "Identity"
  input: "train/gradients/Switch_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_11"
  op: "Shape"
  input: "train/gradients/Switch_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_10/Const"
  op: "Const"
  input: "^train/gradients/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_10"
  op: "Fill"
  input: "train/gradients/Shape_11"
  input: "train/gradients/zeros_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_10"
  input: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_33"
  op: "Switch"
  input: "lstm1/BatchNorm/beta/read"
  input: "lstm1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_11"
  op: "Identity"
  input: "train/gradients/Switch_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_12"
  op: "Shape"
  input: "train/gradients/Switch_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_11/Const"
  op: "Const"
  input: "^train/gradients/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_11"
  op: "Fill"
  input: "train/gradients/Shape_12"
  input: "train/gradients/zeros_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_11"
  input: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_8"
  op: "AddN"
  input: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/nin1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/lstm1/nin1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/AddN_8"
  input: "^train/gradients/lstm1/nin1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/lstm1/nin1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/AddN_8"
  input: "^train/gradients/lstm1/nin1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/nin1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm1/nin1/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/lstm1/nin1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/nin1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_9"
  op: "AddN"
  input: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/nin1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "lstm1/Reshape"
  input: "lstm1/nin1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/nin1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/lstm1/nin1/Conv2D_grad/ShapeN"
  input: "lstm1/nin1/kernel/read"
  input: "train/gradients/lstm1/nin1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/lstm1/nin1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "lstm1/Reshape"
  input: "train/gradients/lstm1/nin1/Conv2D_grad/ShapeN:1"
  input: "train/gradients/lstm1/nin1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/lstm1/nin1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm1/nin1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/lstm1/nin1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/lstm1/nin1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm1/nin1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/lstm1/nin1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/nin1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/nin1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm1/nin1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/lstm1/nin1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/nin1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/Reshape_grad/Shape"
  op: "Shape"
  input: "lstm1/rnn/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/lstm1/nin1/Conv2D_grad/tuple/control_dependency"
  input: "train/gradients/lstm1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "lstm1/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/transpose_1_grad/transpose"
  op: "Transpose"
  input: "train/gradients/lstm1/Reshape_grad/Reshape"
  input: "train/gradients/lstm1/rnn/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "lstm1/rnn/TensorArray"
  input: "lstm1/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "lstm1/rnn/while/Exit_2"
  input: "^train/gradients/lstm1/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/gradients/lstm1/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "lstm1/rnn/TensorArrayStack/range"
  input: "train/gradients/lstm1/rnn/transpose_1_grad/transpose"
  input: "train/gradients/lstm1/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_21"
  op: "ZerosLike"
  input: "lstm1/rnn/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_22"
  op: "ZerosLike"
  input: "lstm1/rnn/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/gradients/lstm1/rnn/while/Exit_2_grad/b_exit"
  input: "train/gradients/lstm1/rnn/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/gradients/lstm1/rnn/while/Exit_3_grad/b_exit"
  input: "train/gradients/lstm1/rnn/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "train/gradients/lstm1/rnn/while/Exit_4_grad/b_exit"
  input: "train/gradients/lstm1/rnn/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/gradients/lstm1/rnn/while/Switch_2_grad/b_switch"
  input: "train/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm1/rnn/while/Merge_2_grad/Switch"
}
node {
  name: "train/gradients/lstm1/rnn/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/Merge_2_grad/Switch"
  input: "^train/gradients/lstm1/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/Merge_2_grad/Switch:1"
  input: "^train/gradients/lstm1/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/gradients/lstm1/rnn/while/Switch_3_grad/b_switch"
  input: "train/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm1/rnn/while/Merge_3_grad/Switch"
}
node {
  name: "train/gradients/lstm1/rnn/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/Merge_3_grad/Switch"
  input: "^train/gradients/lstm1/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/Merge_3_grad/Switch:1"
  input: "^train/gradients/lstm1/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "train/gradients/lstm1/rnn/while/Switch_4_grad/b_switch"
  input: "train/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm1/rnn/while/Merge_4_grad/Switch"
}
node {
  name: "train/gradients/lstm1/rnn/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/Merge_4_grad/Switch"
  input: "^train/gradients/lstm1/rnn/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/Merge_4_grad/Switch:1"
  input: "^train/gradients/lstm1/rnn/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/gradients/lstm1/rnn/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/gradients/lstm1/rnn/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "train/gradients/lstm1/rnn/while/Merge_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/lstm1/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/lstm_cell/MatMul_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "lstm1/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/lstm_cell/MatMul_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/lstm_cell/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "lstm1/rnn/while/Identity_1"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul/StackPopV2"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm1/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_10"
  op: "AddN"
  input: "train/gradients/lstm1/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  input: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/AddN_10"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "lstm1/rnn/lstm_cell/projection/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "train/gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "lstm1/rnn/while/lstm_cell/mul_2"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1"
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "lstm1/rnn/while/lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "lstm1/rnn/while/lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Shape"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Shape_1"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/tuple/control_dependency"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul/Enter"
  input: "lstm1/rnn/while/lstm_cell/Tanh_1"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Sum"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul_1/Enter"
  input: "lstm1/rnn/while/lstm_cell/Sigmoid_2"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul_1"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Sum_1"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Reshape"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Reshape"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Reshape_1"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 650
          }
          dim {
            size: 40
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc_1"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1/Enter_grad/Switch:1"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_11"
  op: "AddN"
  input: "train/gradients/lstm1/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/Shape"
  op: "Shape"
  input: "lstm1/rnn/while/lstm_cell/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/Shape_1"
  op: "Shape"
  input: "lstm1/rnn/while/lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/Shape"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/Shape_1"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_11"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/Sum"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_11"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/Sum_1"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/Reshape"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/Reshape"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/Reshape_1"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Shape"
  op: "Shape"
  input: "lstm1/rnn/while/lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "lstm1/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Shape"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Shape_1"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul/Enter"
  input: "lstm1/rnn/while/Identity_3"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Sum"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul_1/Enter"
  input: "lstm1/rnn/while/lstm_cell/Sigmoid"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul_1"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Sum_1"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Reshape"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Reshape"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Reshape_1"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "lstm1/rnn/while/lstm_cell/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "lstm1/rnn/while/lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Shape"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Shape_1"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul/Enter"
  input: "lstm1/rnn/while/lstm_cell/Tanh"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Sum"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul_1/Enter"
  input: "lstm1/rnn/while/lstm_cell/Sigmoid_1"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul_1"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Sum_1"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Reshape"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Reshape"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Reshape_1"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/Shape"
  op: "Shape"
  input: "lstm1/rnn/while/lstm_cell/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/Shape"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/Sum"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/Sum_1"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/add_grad/Reshape"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/add_grad/Reshape_1"
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/Reshape"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/Reshape_1"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/Tanh_grad/TanhGrad"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/add_grad/tuple/control_dependency"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/split_grad/concat/Const"
  op: "Const"
  input: "^train/gradients/Sub_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/split_grad/concat"
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/split_grad/concat"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/split_grad/concat"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "lstm1/rnn/lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "lstm1/rnn/while/lstm_cell/concat"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul_1"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2600
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/Const"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/Shape"
  op: "Shape"
  input: "lstm1/rnn/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/Enter"
  input: "lstm1/rnn/while/TensorArrayReadV3"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/Enter_1"
  input: "lstm1/rnn/while/Identity_4"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/mod"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ConcatOffset"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ConcatOffset:1"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/Slice"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/Slice_1"
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/Slice"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/Slice_1"
  input: "^train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
          dim {
            size: 2600
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/lstm1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/lstm1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "lstm1/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "lstm1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/lstm1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "train/gradients/lstm1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/lstm1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/tuple/control_dependency"
  input: "train/gradients/lstm1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/lstm1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/lstm1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/lstm1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "train/gradients/lstm1/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "train/gradients/lstm1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "train/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "train/gradients/lstm1/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "train/gradients/lstm1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/lstm1/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/lstm1/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "lstm1/rnn/TensorArray_1"
  input: "train/gradients/lstm1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/lstm1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/TensorArray_1"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "train/gradients/lstm1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "lstm1/rnn/TensorArrayUnstack/range"
  input: "train/gradients/lstm1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/lstm1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/lstm1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "train/gradients/lstm1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/lstm1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/lstm1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/lstm1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/lstm1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "lstm1/rnn/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/lstm1/rnn/transpose_grad/transpose"
  op: "Transpose"
  input: "train/gradients/lstm1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "train/gradients/lstm1/rnn/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reshape_1_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/lstm1/rnn/transpose_grad/transpose"
  input: "train/gradients/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/Reshape_1_grad/Reshape"
  input: "resCONVLSTM_4/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/Add_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/BatchNorm_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/Add_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_3/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_4/Add_grad/Shape"
  input: "train/gradients/resCONVLSTM_4/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/Add_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_4/Relu_1_grad/ReluGrad"
  input: "train/gradients/resCONVLSTM_4/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/Add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/Add_grad/Sum"
  input: "train/gradients/resCONVLSTM_4/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/Add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_4/Relu_1_grad/ReluGrad"
  input: "train/gradients/resCONVLSTM_4/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/Add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/Add_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_4/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/Add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/Add_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_4/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/Add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/Add_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_4/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/Add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/resCONVLSTM_4/Add_grad/tuple/control_dependency"
  input: "resCONVLSTM_4/BatchNorm_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond_1/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/Relu_grad/ReluGrad"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm_1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond_1/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm_1/cond_1/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond_1/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond_1/Merge_grad/cond_grad"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm_1/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm_1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond_1/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond_1/Merge_grad/cond_grad:1"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm_1/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm_1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_34"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm_1/cond/Merge"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_12"
  op: "Identity"
  input: "train/gradients/Switch_34:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_13"
  op: "Shape"
  input: "train/gradients/Switch_34:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_12/Const"
  op: "Const"
  input: "^train/gradients/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_12"
  op: "Fill"
  input: "train/gradients/Shape_13"
  input: "train/gradients/zeros_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond_1/Merge_grad/tuple/control_dependency"
  input: "train/gradients/zeros_12"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_35"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm_1/cond/Merge"
  input: "resCONVLSTM_4/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_13"
  op: "Identity"
  input: "train/gradients/Switch_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_14"
  op: "Shape"
  input: "train/gradients/Switch_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_13/Const"
  op: "Const"
  input: "^train/gradients/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_13"
  op: "Fill"
  input: "train/gradients/Shape_14"
  input: "train/gradients/zeros_13/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond_1/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_13"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond_1/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_12"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond_1/Identity/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/AddN_12"
  input: "resCONVLSTM_4/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm_1/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/Merge_grad/cond_grad"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_23"
  op: "ZerosLike"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_24"
  op: "ZerosLike"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_25"
  op: "ZerosLike"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_26"
  op: "ZerosLike"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/Merge_grad/tuple/control_dependency"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1/Switch"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1/Switch_1"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1/Switch_3"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_27"
  op: "ZerosLike"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_28"
  op: "ZerosLike"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_29"
  op: "ZerosLike"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_30"
  op: "ZerosLike"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/Merge_grad/tuple/control_dependency_1"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm/Switch:1"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm/Switch_1:1"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm:3"
  input: "resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_36"
  op: "Switch"
  input: "resCONVLSTM_4/rnn_1/transpose_1"
  input: "resCONVLSTM_4/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_14"
  op: "Identity"
  input: "train/gradients/Switch_36:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_15"
  op: "Shape"
  input: "train/gradients/Switch_36:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_14/Const"
  op: "Const"
  input: "^train/gradients/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_14"
  op: "Fill"
  input: "train/gradients/Shape_15"
  input: "train/gradients/zeros_14/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_14"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_37"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm_1/beta/read"
  input: "resCONVLSTM_4/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_15"
  op: "Identity"
  input: "train/gradients/Switch_37:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_16"
  op: "Shape"
  input: "train/gradients/Switch_37:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_15/Const"
  op: "Const"
  input: "^train/gradients/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_15"
  op: "Fill"
  input: "train/gradients/Shape_16"
  input: "train/gradients/zeros_15/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_15"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_38"
  op: "Switch"
  input: "resCONVLSTM_4/rnn_1/transpose_1"
  input: "resCONVLSTM_4/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_16"
  op: "Identity"
  input: "train/gradients/Switch_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_17"
  op: "Shape"
  input: "train/gradients/Switch_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_16/Const"
  op: "Const"
  input: "^train/gradients/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_16"
  op: "Fill"
  input: "train/gradients/Shape_17"
  input: "train/gradients/zeros_16/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_16"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_39"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm_1/beta/read"
  input: "resCONVLSTM_4/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_17"
  op: "Identity"
  input: "train/gradients/Switch_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_18"
  op: "Shape"
  input: "train/gradients/Switch_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_17/Const"
  op: "Const"
  input: "^train/gradients/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_17"
  op: "Fill"
  input: "train/gradients/Shape_18"
  input: "train/gradients/zeros_17/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_17"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_13"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "resCONVLSTM_4/rnn_1/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/transpose_1_grad/transpose"
  op: "Transpose"
  input: "train/gradients/AddN_13"
  input: "train/gradients/resCONVLSTM_4/rnn_1/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_14"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm_1/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "resCONVLSTM_4/rnn_1/TensorArray"
  input: "resCONVLSTM_4/rnn_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "resCONVLSTM_4/rnn_1/while/Exit_2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/TensorArray"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/gradients/resCONVLSTM_4/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "resCONVLSTM_4/rnn_1/TensorArrayStack/range"
  input: "train/gradients/resCONVLSTM_4/rnn_1/transpose_1_grad/transpose"
  input: "train/gradients/resCONVLSTM_4/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_31"
  op: "ZerosLike"
  input: "resCONVLSTM_4/rnn_1/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_32"
  op: "ZerosLike"
  input: "resCONVLSTM_4/rnn_1/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/Exit_2_grad/b_exit"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/Exit_3_grad/b_exit"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/Exit_4_grad/b_exit"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/Switch_2_grad/b_switch"
  input: "train/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/Merge_2_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_2_grad/Switch"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_2_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/Switch_3_grad/b_switch"
  input: "train/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/Merge_3_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_3_grad/Switch"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_3_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/Switch_4_grad/b_switch"
  input: "train/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/Merge_4_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_4_grad/Switch"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_4_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_4/rnn_1/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/Identity_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/Identity_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "resCONVLSTM_4/rnn_1/while/Identity_1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_15"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_4_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Shape"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Shape_1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/AddN_15"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul/Enter"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid_2"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Sum"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/rnn/conv2/Tanh_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/rnn/conv2/Tanh_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/Enter"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/Tanh_1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_16"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/Shape"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/Shape_1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_16"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/Sum"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_16"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_4/rnn_1/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Shape"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Shape_1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/Identity_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/Identity_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul/Enter"
  input: "resCONVLSTM_4/rnn_1/while/Identity_3"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Sum"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul_1/Enter"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Shape"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Shape_1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/rnn/conv2/Tanh"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/rnn/conv2/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul/Enter"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/Tanh"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Sum"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/Enter"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid_1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_3"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/Shape"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/Sum"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid_1_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/Tanh_grad/TanhGrad"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_1_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/Sigmoid_2_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/split_grad/concat/Const"
  op: "Const"
  input: "^train/gradients/Sub_3"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_3"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/Shape"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/split_grad/concat"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/Sum"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/split_grad/concat"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Shape"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add/Enter_grad/Switch:1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Enter"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Enter_1"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN:1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropFilter"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropInput"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropFilter"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/rnn_1/while/rnn/conv2/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Shape"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  input: "^train/gradients/Sub_3"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\n\000\000\000\002\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub_3"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub_3"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/mod"
  op: "FloorMod"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/Const"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/rnn_1/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Enter"
  input: "resCONVLSTM_4/rnn_1/while/TensorArrayReadV3"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/Identity_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/Identity_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Enter_1"
  input: "resCONVLSTM_4/rnn_1/while/Identity_4"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/mod"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ConcatOffset"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ConcatOffset:1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/Slice"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/Slice_1"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/Slice"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/Slice_1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/Switch:1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_4/rnn_1/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "resCONVLSTM_4/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "train/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "resCONVLSTM_4/rnn_1/TensorArray_1"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn_1/TensorArray_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "train/gradients/resCONVLSTM_4/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "resCONVLSTM_4/rnn_1/TensorArrayUnstack/range"
  input: "train/gradients/resCONVLSTM_4/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/resCONVLSTM_4/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "resCONVLSTM_4/rnn_1/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn_1/transpose_grad/transpose"
  op: "Transpose"
  input: "train/gradients/resCONVLSTM_4/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_4/rnn_1/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/resCONVLSTM_4/rnn_1/transpose_grad/transpose"
  input: "resCONVLSTM_4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond_1/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_4/Relu_grad/ReluGrad"
  input: "resCONVLSTM_4/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm/cond_1/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond_1/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond_1/Merge_grad/cond_grad"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond_1/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond_1/Merge_grad/cond_grad:1"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_40"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm/cond/Merge"
  input: "resCONVLSTM_4/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_18"
  op: "Identity"
  input: "train/gradients/Switch_40:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_19"
  op: "Shape"
  input: "train/gradients/Switch_40:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_18/Const"
  op: "Const"
  input: "^train/gradients/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_18"
  op: "Fill"
  input: "train/gradients/Shape_19"
  input: "train/gradients/zeros_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond_1/Merge_grad/tuple/control_dependency"
  input: "train/gradients/zeros_18"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_41"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm/cond/Merge"
  input: "resCONVLSTM_4/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_19"
  op: "Identity"
  input: "train/gradients/Switch_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_20"
  op: "Shape"
  input: "train/gradients/Switch_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_19/Const"
  op: "Const"
  input: "^train/gradients/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_19"
  op: "Fill"
  input: "train/gradients/Shape_20"
  input: "train/gradients/zeros_19/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond_1/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_19"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond_1/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_17"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond_1/Switch_1_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond_1/Identity/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/AddN_17"
  input: "resCONVLSTM_4/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond/Merge_grad/cond_grad"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_33"
  op: "ZerosLike"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_34"
  op: "ZerosLike"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_35"
  op: "ZerosLike"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_36"
  op: "ZerosLike"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1/Switch"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_37"
  op: "ZerosLike"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_38"
  op: "ZerosLike"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_39"
  op: "ZerosLike"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_40"
  op: "ZerosLike"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm/Switch:1"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm/Switch_1:1"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm:3"
  input: "resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_42"
  op: "Switch"
  input: "resCONVLSTM_4/rnn/transpose_1"
  input: "resCONVLSTM_4/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_20"
  op: "Identity"
  input: "train/gradients/Switch_42:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_21"
  op: "Shape"
  input: "train/gradients/Switch_42:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_20/Const"
  op: "Const"
  input: "^train/gradients/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_20"
  op: "Fill"
  input: "train/gradients/Shape_21"
  input: "train/gradients/zeros_20/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_20"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_43"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm/beta/read"
  input: "resCONVLSTM_4/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_21"
  op: "Identity"
  input: "train/gradients/Switch_43:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_22"
  op: "Shape"
  input: "train/gradients/Switch_43:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_21/Const"
  op: "Const"
  input: "^train/gradients/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_21"
  op: "Fill"
  input: "train/gradients/Shape_22"
  input: "train/gradients/zeros_21/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_21"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_44"
  op: "Switch"
  input: "resCONVLSTM_4/rnn/transpose_1"
  input: "resCONVLSTM_4/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_22"
  op: "Identity"
  input: "train/gradients/Switch_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_23"
  op: "Shape"
  input: "train/gradients/Switch_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_22/Const"
  op: "Const"
  input: "^train/gradients/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_22"
  op: "Fill"
  input: "train/gradients/Shape_23"
  input: "train/gradients/zeros_22/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_22"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_45"
  op: "Switch"
  input: "resCONVLSTM_4/BatchNorm/beta/read"
  input: "resCONVLSTM_4/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_23"
  op: "Identity"
  input: "train/gradients/Switch_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_24"
  op: "Shape"
  input: "train/gradients/Switch_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_23/Const"
  op: "Const"
  input: "^train/gradients/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_23"
  op: "Fill"
  input: "train/gradients/Shape_24"
  input: "train/gradients/zeros_23/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_23"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_18"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "resCONVLSTM_4/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/transpose_1_grad/transpose"
  op: "Transpose"
  input: "train/gradients/AddN_18"
  input: "train/gradients/resCONVLSTM_4/rnn/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_19"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "resCONVLSTM_4/rnn/TensorArray"
  input: "resCONVLSTM_4/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "resCONVLSTM_4/rnn/while/Exit_2"
  input: "^train/gradients/resCONVLSTM_4/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/gradients/resCONVLSTM_4/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "resCONVLSTM_4/rnn/TensorArrayStack/range"
  input: "train/gradients/resCONVLSTM_4/rnn/transpose_1_grad/transpose"
  input: "train/gradients/resCONVLSTM_4/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_41"
  op: "ZerosLike"
  input: "resCONVLSTM_4/rnn/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_42"
  op: "ZerosLike"
  input: "resCONVLSTM_4/rnn/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_4/rnn/while/Exit_2_grad/b_exit"
  input: "train/gradients/resCONVLSTM_4/rnn/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_4/rnn/while/Exit_3_grad/b_exit"
  input: "train/gradients/resCONVLSTM_4/rnn/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_4/rnn/while/Exit_4_grad/b_exit"
  input: "train/gradients/resCONVLSTM_4/rnn/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_4/rnn/while/Switch_2_grad/b_switch"
  input: "train/gradients/b_count_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/Merge_2_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/Merge_2_grad/Switch"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/Merge_2_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_4/rnn/while/Switch_3_grad/b_switch"
  input: "train/gradients/b_count_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/Merge_3_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/Merge_3_grad/Switch"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/Merge_3_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_4/rnn/while/Switch_4_grad/b_switch"
  input: "train/gradients/b_count_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/Merge_4_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/Merge_4_grad/Switch"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/Merge_4_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_4/rnn/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_4/rnn/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_4/rnn/while/Merge_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/rnn/conv1/mul_2"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_4/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/rnn/conv1/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/rnn/conv1/mul_2"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "resCONVLSTM_4/rnn/while/Identity_1"
  input: "^train/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/gradients/Sub_7"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_20"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_4/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Shape"
  input: "^train/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_7"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Shape_1"
  input: "^train/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_7"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/AddN_20"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul/Enter"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid_2"
  input: "^train/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_7"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Sum"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/AddN_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/rnn/conv1/Tanh_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/rnn/conv1/Tanh_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul_1/Enter"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/Tanh_1"
  input: "^train/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_7"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_21"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_4/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/Shape"
  input: "^train/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_7"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/Shape_1"
  input: "^train/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_7"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_21"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/Sum"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_21"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_4/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Shape"
  input: "^train/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_7"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Shape_1"
  input: "^train/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_7"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul/Enter"
  input: "resCONVLSTM_4/rnn/while/Identity_3"
  input: "^train/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_7"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Sum"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul_1/Enter"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid"
  input: "^train/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_7"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Shape"
  input: "^train/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_7"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Shape_1"
  input: "^train/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_7"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/rnn/conv1/Tanh"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/rnn/conv1/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul/Enter"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/Tanh"
  input: "^train/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_7"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Sum"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul_1/Enter"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid_1"
  input: "^train/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_7"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_7"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/Shape"
  input: "^train/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_7"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/Sum"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid_1_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/Tanh_grad/TanhGrad"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_1_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/Sigmoid_2_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/split_grad/concat/Const"
  op: "Const"
  input: "^train/gradients/Sub_7"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_7"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/Shape"
  input: "^train/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_7"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/split_grad/concat"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/Sum"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/split_grad/concat"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/conv1d"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Shape"
  input: "^train/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPopV2/Enter"
  input: "^train/gradients/Sub_7"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add/Enter_grad/b_acc_1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add/Enter_grad/Switch:1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Enter"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims"
  input: "^train/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_7"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Enter_1"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1"
  input: "^train/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_7"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/ShapeN:1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropFilter"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropInput"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropFilter"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/rnn/while/rnn/conv1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Shape"
  input: "^train/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPopV2/Enter"
  input: "^train/gradients/Sub_7"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  input: "^train/gradients/Sub_7"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\n\000\000\000\002\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub_7"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub_7"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/mod"
  op: "FloorMod"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/Const"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_4/rnn/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/Enter"
  input: "resCONVLSTM_4/rnn/while/TensorArrayReadV3"
  input: "^train/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_7"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/Enter_1"
  input: "resCONVLSTM_4/rnn/while/Identity_4"
  input: "^train/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_7"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/mod"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ConcatOffset"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ConcatOffset:1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/Slice"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/Slice_1"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/Slice"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/Slice_1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/Switch:1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/Sub_7"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_4/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "resCONVLSTM_4/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_4/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "train/gradients/b_count_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "resCONVLSTM_4/rnn/TensorArray_1"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/resCONVLSTM_4/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/TensorArray_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "train/gradients/resCONVLSTM_4/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "resCONVLSTM_4/rnn/TensorArrayUnstack/range"
  input: "train/gradients/resCONVLSTM_4/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_4/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/resCONVLSTM_4/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/resCONVLSTM_4/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "resCONVLSTM_4/rnn/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_4/rnn/transpose_grad/transpose"
  op: "Transpose"
  input: "train/gradients/resCONVLSTM_4/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_4/rnn/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_22"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_4/Add_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_4/rnn/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_4/Add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/AddN_22"
  input: "resCONVLSTM_3/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/Add_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/BatchNorm_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/Add_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_2/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_3/Add_grad/Shape"
  input: "train/gradients/resCONVLSTM_3/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/Add_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_3/Relu_1_grad/ReluGrad"
  input: "train/gradients/resCONVLSTM_3/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/Add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/Add_grad/Sum"
  input: "train/gradients/resCONVLSTM_3/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/Add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_3/Relu_1_grad/ReluGrad"
  input: "train/gradients/resCONVLSTM_3/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/Add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/Add_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_3/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/Add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/Add_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_3/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/Add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/Add_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_3/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/Add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/resCONVLSTM_3/Add_grad/tuple/control_dependency"
  input: "resCONVLSTM_3/BatchNorm_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond_1/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/Relu_grad/ReluGrad"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm_1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond_1/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm_1/cond_1/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond_1/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond_1/Merge_grad/cond_grad"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm_1/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm_1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond_1/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond_1/Merge_grad/cond_grad:1"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm_1/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm_1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_46"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm_1/cond/Merge"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_24"
  op: "Identity"
  input: "train/gradients/Switch_46:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_25"
  op: "Shape"
  input: "train/gradients/Switch_46:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_24/Const"
  op: "Const"
  input: "^train/gradients/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_24"
  op: "Fill"
  input: "train/gradients/Shape_25"
  input: "train/gradients/zeros_24/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond_1/Merge_grad/tuple/control_dependency"
  input: "train/gradients/zeros_24"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_47"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm_1/cond/Merge"
  input: "resCONVLSTM_3/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_25"
  op: "Identity"
  input: "train/gradients/Switch_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_26"
  op: "Shape"
  input: "train/gradients/Switch_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_25/Const"
  op: "Const"
  input: "^train/gradients/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_25"
  op: "Fill"
  input: "train/gradients/Shape_26"
  input: "train/gradients/zeros_25/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond_1/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_25"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond_1/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_23"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond_1/Identity/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/AddN_23"
  input: "resCONVLSTM_3/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm_1/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/Merge_grad/cond_grad"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_43"
  op: "ZerosLike"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_44"
  op: "ZerosLike"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_45"
  op: "ZerosLike"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_46"
  op: "ZerosLike"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/Merge_grad/tuple/control_dependency"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1/Switch"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1/Switch_1"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1/Switch_3"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_47"
  op: "ZerosLike"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_48"
  op: "ZerosLike"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_49"
  op: "ZerosLike"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_50"
  op: "ZerosLike"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/Merge_grad/tuple/control_dependency_1"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm/Switch:1"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm/Switch_1:1"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm:3"
  input: "resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_48"
  op: "Switch"
  input: "resCONVLSTM_3/rnn_1/transpose_1"
  input: "resCONVLSTM_3/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_26"
  op: "Identity"
  input: "train/gradients/Switch_48:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_27"
  op: "Shape"
  input: "train/gradients/Switch_48:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_26/Const"
  op: "Const"
  input: "^train/gradients/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_26"
  op: "Fill"
  input: "train/gradients/Shape_27"
  input: "train/gradients/zeros_26/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_26"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_49"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm_1/beta/read"
  input: "resCONVLSTM_3/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_27"
  op: "Identity"
  input: "train/gradients/Switch_49:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_28"
  op: "Shape"
  input: "train/gradients/Switch_49:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_27/Const"
  op: "Const"
  input: "^train/gradients/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_27"
  op: "Fill"
  input: "train/gradients/Shape_28"
  input: "train/gradients/zeros_27/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_27"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_50"
  op: "Switch"
  input: "resCONVLSTM_3/rnn_1/transpose_1"
  input: "resCONVLSTM_3/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_28"
  op: "Identity"
  input: "train/gradients/Switch_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_29"
  op: "Shape"
  input: "train/gradients/Switch_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_28/Const"
  op: "Const"
  input: "^train/gradients/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_28"
  op: "Fill"
  input: "train/gradients/Shape_29"
  input: "train/gradients/zeros_28/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_28"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_51"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm_1/beta/read"
  input: "resCONVLSTM_3/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_29"
  op: "Identity"
  input: "train/gradients/Switch_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_30"
  op: "Shape"
  input: "train/gradients/Switch_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_29/Const"
  op: "Const"
  input: "^train/gradients/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_29"
  op: "Fill"
  input: "train/gradients/Shape_30"
  input: "train/gradients/zeros_29/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_29"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_24"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "resCONVLSTM_3/rnn_1/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/transpose_1_grad/transpose"
  op: "Transpose"
  input: "train/gradients/AddN_24"
  input: "train/gradients/resCONVLSTM_3/rnn_1/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_25"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm_1/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "resCONVLSTM_3/rnn_1/TensorArray"
  input: "resCONVLSTM_3/rnn_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "resCONVLSTM_3/rnn_1/while/Exit_2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/TensorArray"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/gradients/resCONVLSTM_3/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "resCONVLSTM_3/rnn_1/TensorArrayStack/range"
  input: "train/gradients/resCONVLSTM_3/rnn_1/transpose_1_grad/transpose"
  input: "train/gradients/resCONVLSTM_3/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_51"
  op: "ZerosLike"
  input: "resCONVLSTM_3/rnn_1/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_52"
  op: "ZerosLike"
  input: "resCONVLSTM_3/rnn_1/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/Exit_2_grad/b_exit"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/Exit_3_grad/b_exit"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/Exit_4_grad/b_exit"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/Switch_2_grad/b_switch"
  input: "train/gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/Merge_2_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_2_grad/Switch"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_2_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/Switch_3_grad/b_switch"
  input: "train/gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/Merge_3_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_3_grad/Switch"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_3_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/Switch_4_grad/b_switch"
  input: "train/gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/Merge_4_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_4_grad/Switch"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_4_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_3/rnn_1/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/Identity_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/Identity_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "resCONVLSTM_3/rnn_1/while/Identity_1"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_26"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_4_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Shape"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Shape_1"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/AddN_26"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul/Enter"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid_2"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Sum"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/rnn/conv2/Tanh_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/rnn/conv2/Tanh_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/Enter"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/Tanh_1"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_27"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/Shape"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/Shape_1"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_27"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/Sum"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_27"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_3/rnn_1/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Shape"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Shape_1"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/Identity_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/Identity_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul/Enter"
  input: "resCONVLSTM_3/rnn_1/while/Identity_3"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Sum"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul_1/Enter"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Shape"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Shape_1"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/rnn/conv2/Tanh"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/rnn/conv2/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul/Enter"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/Tanh"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Sum"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/Enter"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid_1"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_4"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/Shape"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/Sum"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid_1_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/Tanh_grad/TanhGrad"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_1_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/Sigmoid_2_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/split_grad/concat/Const"
  op: "Const"
  input: "^train/gradients/Sub_4"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_4"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/Shape"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/split_grad/concat"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/Sum"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/split_grad/concat"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Shape"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add/Enter_grad/Switch:1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Enter"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Enter_1"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN:1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropFilter"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropInput"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropFilter"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/rnn_1/while/rnn/conv2/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Shape"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  input: "^train/gradients/Sub_4"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\n\000\000\000\002\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub_4"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub_4"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/mod"
  op: "FloorMod"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/Const"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/rnn_1/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Enter"
  input: "resCONVLSTM_3/rnn_1/while/TensorArrayReadV3"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/Identity_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/Identity_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Enter_1"
  input: "resCONVLSTM_3/rnn_1/while/Identity_4"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/mod"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ConcatOffset"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ConcatOffset:1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/Slice"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/Slice_1"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/Slice"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/Slice_1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/Switch:1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_3/rnn_1/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "resCONVLSTM_3/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "train/gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "resCONVLSTM_3/rnn_1/TensorArray_1"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn_1/TensorArray_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "train/gradients/resCONVLSTM_3/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "resCONVLSTM_3/rnn_1/TensorArrayUnstack/range"
  input: "train/gradients/resCONVLSTM_3/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/resCONVLSTM_3/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "resCONVLSTM_3/rnn_1/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn_1/transpose_grad/transpose"
  op: "Transpose"
  input: "train/gradients/resCONVLSTM_3/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_3/rnn_1/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/resCONVLSTM_3/rnn_1/transpose_grad/transpose"
  input: "resCONVLSTM_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond_1/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_3/Relu_grad/ReluGrad"
  input: "resCONVLSTM_3/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm/cond_1/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond_1/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond_1/Merge_grad/cond_grad"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond_1/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond_1/Merge_grad/cond_grad:1"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_52"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm/cond/Merge"
  input: "resCONVLSTM_3/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_30"
  op: "Identity"
  input: "train/gradients/Switch_52:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_31"
  op: "Shape"
  input: "train/gradients/Switch_52:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_30/Const"
  op: "Const"
  input: "^train/gradients/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_30"
  op: "Fill"
  input: "train/gradients/Shape_31"
  input: "train/gradients/zeros_30/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond_1/Merge_grad/tuple/control_dependency"
  input: "train/gradients/zeros_30"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_53"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm/cond/Merge"
  input: "resCONVLSTM_3/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_31"
  op: "Identity"
  input: "train/gradients/Switch_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_32"
  op: "Shape"
  input: "train/gradients/Switch_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_31/Const"
  op: "Const"
  input: "^train/gradients/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_31"
  op: "Fill"
  input: "train/gradients/Shape_32"
  input: "train/gradients/zeros_31/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond_1/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_31"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond_1/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_28"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond_1/Switch_1_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond_1/Identity/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/AddN_28"
  input: "resCONVLSTM_3/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond/Merge_grad/cond_grad"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_53"
  op: "ZerosLike"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_54"
  op: "ZerosLike"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_55"
  op: "ZerosLike"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_56"
  op: "ZerosLike"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1/Switch"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_57"
  op: "ZerosLike"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_58"
  op: "ZerosLike"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_59"
  op: "ZerosLike"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_60"
  op: "ZerosLike"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm/Switch:1"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm/Switch_1:1"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm:3"
  input: "resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_54"
  op: "Switch"
  input: "resCONVLSTM_3/rnn/transpose_1"
  input: "resCONVLSTM_3/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_32"
  op: "Identity"
  input: "train/gradients/Switch_54:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_33"
  op: "Shape"
  input: "train/gradients/Switch_54:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_32/Const"
  op: "Const"
  input: "^train/gradients/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_32"
  op: "Fill"
  input: "train/gradients/Shape_33"
  input: "train/gradients/zeros_32/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_32"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_55"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm/beta/read"
  input: "resCONVLSTM_3/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_33"
  op: "Identity"
  input: "train/gradients/Switch_55:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_34"
  op: "Shape"
  input: "train/gradients/Switch_55:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_33/Const"
  op: "Const"
  input: "^train/gradients/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_33"
  op: "Fill"
  input: "train/gradients/Shape_34"
  input: "train/gradients/zeros_33/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_33"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_56"
  op: "Switch"
  input: "resCONVLSTM_3/rnn/transpose_1"
  input: "resCONVLSTM_3/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_34"
  op: "Identity"
  input: "train/gradients/Switch_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_35"
  op: "Shape"
  input: "train/gradients/Switch_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_34/Const"
  op: "Const"
  input: "^train/gradients/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_34"
  op: "Fill"
  input: "train/gradients/Shape_35"
  input: "train/gradients/zeros_34/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_34"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_57"
  op: "Switch"
  input: "resCONVLSTM_3/BatchNorm/beta/read"
  input: "resCONVLSTM_3/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_35"
  op: "Identity"
  input: "train/gradients/Switch_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_36"
  op: "Shape"
  input: "train/gradients/Switch_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_35/Const"
  op: "Const"
  input: "^train/gradients/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_35"
  op: "Fill"
  input: "train/gradients/Shape_36"
  input: "train/gradients/zeros_35/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_35"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_29"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "resCONVLSTM_3/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/transpose_1_grad/transpose"
  op: "Transpose"
  input: "train/gradients/AddN_29"
  input: "train/gradients/resCONVLSTM_3/rnn/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_30"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "resCONVLSTM_3/rnn/TensorArray"
  input: "resCONVLSTM_3/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "resCONVLSTM_3/rnn/while/Exit_2"
  input: "^train/gradients/resCONVLSTM_3/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/gradients/resCONVLSTM_3/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "resCONVLSTM_3/rnn/TensorArrayStack/range"
  input: "train/gradients/resCONVLSTM_3/rnn/transpose_1_grad/transpose"
  input: "train/gradients/resCONVLSTM_3/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_61"
  op: "ZerosLike"
  input: "resCONVLSTM_3/rnn/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_62"
  op: "ZerosLike"
  input: "resCONVLSTM_3/rnn/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_3/rnn/while/Exit_2_grad/b_exit"
  input: "train/gradients/resCONVLSTM_3/rnn/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_3/rnn/while/Exit_3_grad/b_exit"
  input: "train/gradients/resCONVLSTM_3/rnn/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_3/rnn/while/Exit_4_grad/b_exit"
  input: "train/gradients/resCONVLSTM_3/rnn/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_3/rnn/while/Switch_2_grad/b_switch"
  input: "train/gradients/b_count_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/Merge_2_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/Merge_2_grad/Switch"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/Merge_2_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_3/rnn/while/Switch_3_grad/b_switch"
  input: "train/gradients/b_count_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/Merge_3_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/Merge_3_grad/Switch"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/Merge_3_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_3/rnn/while/Switch_4_grad/b_switch"
  input: "train/gradients/b_count_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/Merge_4_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/Merge_4_grad/Switch"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/Merge_4_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_3/rnn/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_3/rnn/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_3/rnn/while/Merge_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/rnn/conv1/mul_2"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_3/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/rnn/conv1/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/rnn/conv1/mul_2"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "resCONVLSTM_3/rnn/while/Identity_1"
  input: "^train/gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/gradients/Sub_8"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_31"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_3/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Shape"
  input: "^train/gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_8"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Shape_1"
  input: "^train/gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_8"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/AddN_31"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul/Enter"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid_2"
  input: "^train/gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_8"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Sum"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/AddN_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/rnn/conv1/Tanh_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/rnn/conv1/Tanh_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul_1/Enter"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/Tanh_1"
  input: "^train/gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_8"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_32"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_3/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/Shape"
  input: "^train/gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_8"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/Shape_1"
  input: "^train/gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_8"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_32"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/Sum"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_32"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_3/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Shape"
  input: "^train/gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_8"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Shape_1"
  input: "^train/gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_8"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul/Enter"
  input: "resCONVLSTM_3/rnn/while/Identity_3"
  input: "^train/gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_8"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Sum"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul_1/Enter"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid"
  input: "^train/gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_8"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Shape"
  input: "^train/gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_8"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Shape_1"
  input: "^train/gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_8"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/rnn/conv1/Tanh"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/rnn/conv1/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul/Enter"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/Tanh"
  input: "^train/gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_8"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Sum"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul_1/Enter"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid_1"
  input: "^train/gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_8"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_8"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/Shape"
  input: "^train/gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_8"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/Sum"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid_1_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/Tanh_grad/TanhGrad"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_1_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/Sigmoid_2_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/split_grad/concat/Const"
  op: "Const"
  input: "^train/gradients/Sub_8"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_8"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/Shape"
  input: "^train/gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_8"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/split_grad/concat"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/Sum"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/split_grad/concat"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/conv1d"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Shape"
  input: "^train/gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPopV2/Enter"
  input: "^train/gradients/Sub_8"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add/Enter_grad/b_acc_1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add/Enter_grad/Switch:1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Enter"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims"
  input: "^train/gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_8"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Enter_1"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1"
  input: "^train/gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_8"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/ShapeN:1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropFilter"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropInput"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropFilter"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/rnn/while/rnn/conv1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Shape"
  input: "^train/gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPopV2/Enter"
  input: "^train/gradients/Sub_8"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  input: "^train/gradients/Sub_8"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\n\000\000\000\002\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub_8"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub_8"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/mod"
  op: "FloorMod"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/Const"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_3/rnn/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/Enter"
  input: "resCONVLSTM_3/rnn/while/TensorArrayReadV3"
  input: "^train/gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_8"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/Enter_1"
  input: "resCONVLSTM_3/rnn/while/Identity_4"
  input: "^train/gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_8"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/mod"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ConcatOffset"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ConcatOffset:1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/Slice"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/Slice_1"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/Slice"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/Slice_1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/Switch:1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/Sub_8"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_3/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "resCONVLSTM_3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_3/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "train/gradients/b_count_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "resCONVLSTM_3/rnn/TensorArray_1"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/resCONVLSTM_3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/TensorArray_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "train/gradients/resCONVLSTM_3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "resCONVLSTM_3/rnn/TensorArrayUnstack/range"
  input: "train/gradients/resCONVLSTM_3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/resCONVLSTM_3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/resCONVLSTM_3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "resCONVLSTM_3/rnn/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_3/rnn/transpose_grad/transpose"
  op: "Transpose"
  input: "train/gradients/resCONVLSTM_3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_3/rnn/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_33"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_3/Add_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_3/rnn/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_3/Add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/AddN_33"
  input: "resCONVLSTM_2/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/Add_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/BatchNorm_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/Add_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_1/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_2/Add_grad/Shape"
  input: "train/gradients/resCONVLSTM_2/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/Add_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_2/Relu_1_grad/ReluGrad"
  input: "train/gradients/resCONVLSTM_2/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/Add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/Add_grad/Sum"
  input: "train/gradients/resCONVLSTM_2/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/Add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_2/Relu_1_grad/ReluGrad"
  input: "train/gradients/resCONVLSTM_2/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/Add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/Add_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_2/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/Add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/Add_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_2/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/Add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/Add_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_2/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/Add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/resCONVLSTM_2/Add_grad/tuple/control_dependency"
  input: "resCONVLSTM_2/BatchNorm_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond_1/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/Relu_grad/ReluGrad"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm_1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond_1/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm_1/cond_1/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond_1/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond_1/Merge_grad/cond_grad"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm_1/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm_1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond_1/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond_1/Merge_grad/cond_grad:1"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm_1/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm_1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_58"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm_1/cond/Merge"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_36"
  op: "Identity"
  input: "train/gradients/Switch_58:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_37"
  op: "Shape"
  input: "train/gradients/Switch_58:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_36/Const"
  op: "Const"
  input: "^train/gradients/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_36"
  op: "Fill"
  input: "train/gradients/Shape_37"
  input: "train/gradients/zeros_36/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond_1/Merge_grad/tuple/control_dependency"
  input: "train/gradients/zeros_36"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_59"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm_1/cond/Merge"
  input: "resCONVLSTM_2/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_37"
  op: "Identity"
  input: "train/gradients/Switch_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_38"
  op: "Shape"
  input: "train/gradients/Switch_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_37/Const"
  op: "Const"
  input: "^train/gradients/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_37"
  op: "Fill"
  input: "train/gradients/Shape_38"
  input: "train/gradients/zeros_37/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond_1/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_37"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond_1/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_34"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond_1/Identity/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/AddN_34"
  input: "resCONVLSTM_2/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm_1/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/Merge_grad/cond_grad"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_63"
  op: "ZerosLike"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_64"
  op: "ZerosLike"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_65"
  op: "ZerosLike"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_66"
  op: "ZerosLike"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/Merge_grad/tuple/control_dependency"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1/Switch"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1/Switch_1"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1/Switch_3"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_67"
  op: "ZerosLike"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_68"
  op: "ZerosLike"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_69"
  op: "ZerosLike"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_70"
  op: "ZerosLike"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/Merge_grad/tuple/control_dependency_1"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm/Switch:1"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm/Switch_1:1"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm:3"
  input: "resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_60"
  op: "Switch"
  input: "resCONVLSTM_2/rnn_1/transpose_1"
  input: "resCONVLSTM_2/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_38"
  op: "Identity"
  input: "train/gradients/Switch_60:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_39"
  op: "Shape"
  input: "train/gradients/Switch_60:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_38/Const"
  op: "Const"
  input: "^train/gradients/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_38"
  op: "Fill"
  input: "train/gradients/Shape_39"
  input: "train/gradients/zeros_38/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_38"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_61"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm_1/beta/read"
  input: "resCONVLSTM_2/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_39"
  op: "Identity"
  input: "train/gradients/Switch_61:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_40"
  op: "Shape"
  input: "train/gradients/Switch_61:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_39/Const"
  op: "Const"
  input: "^train/gradients/Identity_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_39"
  op: "Fill"
  input: "train/gradients/Shape_40"
  input: "train/gradients/zeros_39/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_39"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_62"
  op: "Switch"
  input: "resCONVLSTM_2/rnn_1/transpose_1"
  input: "resCONVLSTM_2/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_40"
  op: "Identity"
  input: "train/gradients/Switch_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_41"
  op: "Shape"
  input: "train/gradients/Switch_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_40/Const"
  op: "Const"
  input: "^train/gradients/Identity_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_40"
  op: "Fill"
  input: "train/gradients/Shape_41"
  input: "train/gradients/zeros_40/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_40"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_63"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm_1/beta/read"
  input: "resCONVLSTM_2/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_41"
  op: "Identity"
  input: "train/gradients/Switch_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_42"
  op: "Shape"
  input: "train/gradients/Switch_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_41/Const"
  op: "Const"
  input: "^train/gradients/Identity_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_41"
  op: "Fill"
  input: "train/gradients/Shape_42"
  input: "train/gradients/zeros_41/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_41"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_35"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "resCONVLSTM_2/rnn_1/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/transpose_1_grad/transpose"
  op: "Transpose"
  input: "train/gradients/AddN_35"
  input: "train/gradients/resCONVLSTM_2/rnn_1/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_36"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm_1/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "resCONVLSTM_2/rnn_1/TensorArray"
  input: "resCONVLSTM_2/rnn_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "resCONVLSTM_2/rnn_1/while/Exit_2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/TensorArray"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/gradients/resCONVLSTM_2/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "resCONVLSTM_2/rnn_1/TensorArrayStack/range"
  input: "train/gradients/resCONVLSTM_2/rnn_1/transpose_1_grad/transpose"
  input: "train/gradients/resCONVLSTM_2/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_71"
  op: "ZerosLike"
  input: "resCONVLSTM_2/rnn_1/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_72"
  op: "ZerosLike"
  input: "resCONVLSTM_2/rnn_1/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/Exit_2_grad/b_exit"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/Exit_3_grad/b_exit"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/Exit_4_grad/b_exit"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/Switch_2_grad/b_switch"
  input: "train/gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/Merge_2_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_2_grad/Switch"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_2_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/Switch_3_grad/b_switch"
  input: "train/gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/Merge_3_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_3_grad/Switch"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_3_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/Switch_4_grad/b_switch"
  input: "train/gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/Merge_4_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_4_grad/Switch"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_4_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_2/rnn_1/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/Identity_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/Identity_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "resCONVLSTM_2/rnn_1/while/Identity_1"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_37"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_4_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Shape"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Shape_1"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/AddN_37"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul/Enter"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid_2"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Sum"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/AddN_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/rnn/conv2/Tanh_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/rnn/conv2/Tanh_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/Enter"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/Tanh_1"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_38"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/Shape"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/Shape_1"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_38"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/Sum"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_38"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_2/rnn_1/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Shape"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Shape_1"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/Identity_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/Identity_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul/Enter"
  input: "resCONVLSTM_2/rnn_1/while/Identity_3"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Sum"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul_1/Enter"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Shape"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Shape_1"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/rnn/conv2/Tanh"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/rnn/conv2/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul/Enter"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/Tanh"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Sum"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/Enter"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid_1"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_5"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/Shape"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/Sum"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid_1_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/Tanh_grad/TanhGrad"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_1_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/Sigmoid_2_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/split_grad/concat/Const"
  op: "Const"
  input: "^train/gradients/Sub_5"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_5"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/Shape"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/split_grad/concat"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/Sum"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/split_grad/concat"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Shape"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add/Enter_grad/Switch:1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Enter"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Enter_1"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN:1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropFilter"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropInput"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropFilter"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/rnn_1/while/rnn/conv2/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Shape"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  input: "^train/gradients/Sub_5"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\n\000\000\000\002\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub_5"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub_5"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/mod"
  op: "FloorMod"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/Const"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/rnn_1/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Enter"
  input: "resCONVLSTM_2/rnn_1/while/TensorArrayReadV3"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/Identity_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/Identity_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Enter_1"
  input: "resCONVLSTM_2/rnn_1/while/Identity_4"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/mod"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ConcatOffset"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ConcatOffset:1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/Slice"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/Slice_1"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/Slice"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/Slice_1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/Switch:1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_2/rnn_1/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "resCONVLSTM_2/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "train/gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "resCONVLSTM_2/rnn_1/TensorArray_1"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn_1/TensorArray_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "train/gradients/resCONVLSTM_2/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "resCONVLSTM_2/rnn_1/TensorArrayUnstack/range"
  input: "train/gradients/resCONVLSTM_2/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/resCONVLSTM_2/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "resCONVLSTM_2/rnn_1/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn_1/transpose_grad/transpose"
  op: "Transpose"
  input: "train/gradients/resCONVLSTM_2/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_2/rnn_1/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/resCONVLSTM_2/rnn_1/transpose_grad/transpose"
  input: "resCONVLSTM_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond_1/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_2/Relu_grad/ReluGrad"
  input: "resCONVLSTM_2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm/cond_1/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond_1/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond_1/Merge_grad/cond_grad"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond_1/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond_1/Merge_grad/cond_grad:1"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_64"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm/cond/Merge"
  input: "resCONVLSTM_2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_42"
  op: "Identity"
  input: "train/gradients/Switch_64:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_43"
  op: "Shape"
  input: "train/gradients/Switch_64:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_42/Const"
  op: "Const"
  input: "^train/gradients/Identity_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_42"
  op: "Fill"
  input: "train/gradients/Shape_43"
  input: "train/gradients/zeros_42/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond_1/Merge_grad/tuple/control_dependency"
  input: "train/gradients/zeros_42"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_65"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm/cond/Merge"
  input: "resCONVLSTM_2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_43"
  op: "Identity"
  input: "train/gradients/Switch_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_44"
  op: "Shape"
  input: "train/gradients/Switch_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_43/Const"
  op: "Const"
  input: "^train/gradients/Identity_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_43"
  op: "Fill"
  input: "train/gradients/Shape_44"
  input: "train/gradients/zeros_43/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond_1/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_43"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond_1/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_39"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond_1/Switch_1_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond_1/Identity/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/AddN_39"
  input: "resCONVLSTM_2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond/Merge_grad/cond_grad"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_73"
  op: "ZerosLike"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_74"
  op: "ZerosLike"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_75"
  op: "ZerosLike"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_76"
  op: "ZerosLike"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1/Switch"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_77"
  op: "ZerosLike"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_78"
  op: "ZerosLike"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_79"
  op: "ZerosLike"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_80"
  op: "ZerosLike"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm/Switch:1"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm/Switch_1:1"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm:3"
  input: "resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_66"
  op: "Switch"
  input: "resCONVLSTM_2/rnn/transpose_1"
  input: "resCONVLSTM_2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_44"
  op: "Identity"
  input: "train/gradients/Switch_66:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_45"
  op: "Shape"
  input: "train/gradients/Switch_66:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_44/Const"
  op: "Const"
  input: "^train/gradients/Identity_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_44"
  op: "Fill"
  input: "train/gradients/Shape_45"
  input: "train/gradients/zeros_44/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_44"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_67"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm/beta/read"
  input: "resCONVLSTM_2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_45"
  op: "Identity"
  input: "train/gradients/Switch_67:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_46"
  op: "Shape"
  input: "train/gradients/Switch_67:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_45/Const"
  op: "Const"
  input: "^train/gradients/Identity_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_45"
  op: "Fill"
  input: "train/gradients/Shape_46"
  input: "train/gradients/zeros_45/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_45"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_68"
  op: "Switch"
  input: "resCONVLSTM_2/rnn/transpose_1"
  input: "resCONVLSTM_2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_46"
  op: "Identity"
  input: "train/gradients/Switch_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_47"
  op: "Shape"
  input: "train/gradients/Switch_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_46/Const"
  op: "Const"
  input: "^train/gradients/Identity_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_46"
  op: "Fill"
  input: "train/gradients/Shape_47"
  input: "train/gradients/zeros_46/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_46"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_69"
  op: "Switch"
  input: "resCONVLSTM_2/BatchNorm/beta/read"
  input: "resCONVLSTM_2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_47"
  op: "Identity"
  input: "train/gradients/Switch_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_48"
  op: "Shape"
  input: "train/gradients/Switch_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_47/Const"
  op: "Const"
  input: "^train/gradients/Identity_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_47"
  op: "Fill"
  input: "train/gradients/Shape_48"
  input: "train/gradients/zeros_47/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_47"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_40"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "resCONVLSTM_2/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/transpose_1_grad/transpose"
  op: "Transpose"
  input: "train/gradients/AddN_40"
  input: "train/gradients/resCONVLSTM_2/rnn/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_41"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "resCONVLSTM_2/rnn/TensorArray"
  input: "resCONVLSTM_2/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "resCONVLSTM_2/rnn/while/Exit_2"
  input: "^train/gradients/resCONVLSTM_2/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/gradients/resCONVLSTM_2/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "resCONVLSTM_2/rnn/TensorArrayStack/range"
  input: "train/gradients/resCONVLSTM_2/rnn/transpose_1_grad/transpose"
  input: "train/gradients/resCONVLSTM_2/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_81"
  op: "ZerosLike"
  input: "resCONVLSTM_2/rnn/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_82"
  op: "ZerosLike"
  input: "resCONVLSTM_2/rnn/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_2/rnn/while/Exit_2_grad/b_exit"
  input: "train/gradients/resCONVLSTM_2/rnn/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_2/rnn/while/Exit_3_grad/b_exit"
  input: "train/gradients/resCONVLSTM_2/rnn/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_2/rnn/while/Exit_4_grad/b_exit"
  input: "train/gradients/resCONVLSTM_2/rnn/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_2/rnn/while/Switch_2_grad/b_switch"
  input: "train/gradients/b_count_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/Merge_2_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/Merge_2_grad/Switch"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/Merge_2_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_2/rnn/while/Switch_3_grad/b_switch"
  input: "train/gradients/b_count_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/Merge_3_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/Merge_3_grad/Switch"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/Merge_3_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_2/rnn/while/Switch_4_grad/b_switch"
  input: "train/gradients/b_count_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/Merge_4_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/Merge_4_grad/Switch"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/Merge_4_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_2/rnn/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_2/rnn/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_2/rnn/while/Merge_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/rnn/conv1/mul_2"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_2/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/rnn/conv1/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/rnn/conv1/mul_2"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "resCONVLSTM_2/rnn/while/Identity_1"
  input: "^train/gradients/Add_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/gradients/Sub_9"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_42"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_2/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Shape"
  input: "^train/gradients/Add_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_9"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Shape_1"
  input: "^train/gradients/Add_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_9"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/AddN_42"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul/Enter"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid_2"
  input: "^train/gradients/Add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_9"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Sum"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/AddN_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/rnn/conv1/Tanh_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/rnn/conv1/Tanh_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul_1/Enter"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/Tanh_1"
  input: "^train/gradients/Add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_9"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_43"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_2/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/Shape"
  input: "^train/gradients/Add_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_9"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/Shape_1"
  input: "^train/gradients/Add_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_9"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_43"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/Sum"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_43"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_2/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Shape"
  input: "^train/gradients/Add_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_9"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Shape_1"
  input: "^train/gradients/Add_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_9"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul/Enter"
  input: "resCONVLSTM_2/rnn/while/Identity_3"
  input: "^train/gradients/Add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_9"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Sum"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul_1/Enter"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid"
  input: "^train/gradients/Add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_9"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Shape"
  input: "^train/gradients/Add_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_9"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Shape_1"
  input: "^train/gradients/Add_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_9"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/rnn/conv1/Tanh"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/rnn/conv1/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul/Enter"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/Tanh"
  input: "^train/gradients/Add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_9"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Sum"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul_1/Enter"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid_1"
  input: "^train/gradients/Add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_9"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/Shape"
  input: "^train/gradients/Add_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_9"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/Sum"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid_1_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/Tanh_grad/TanhGrad"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_1_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/Sigmoid_2_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/split_grad/concat/Const"
  op: "Const"
  input: "^train/gradients/Sub_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/Shape"
  input: "^train/gradients/Add_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_9"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/split_grad/concat"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/Sum"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/split_grad/concat"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/conv1d"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Shape"
  input: "^train/gradients/Add_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPopV2/Enter"
  input: "^train/gradients/Sub_9"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add/Enter_grad/b_acc_1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add/Enter_grad/Switch:1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Enter"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims"
  input: "^train/gradients/Add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_9"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Enter_1"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1"
  input: "^train/gradients/Add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_9"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/ShapeN:1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropFilter"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropInput"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropFilter"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/rnn/while/rnn/conv1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Shape"
  input: "^train/gradients/Add_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPopV2/Enter"
  input: "^train/gradients/Sub_9"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  input: "^train/gradients/Sub_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\n\000\000\000\002\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/mod"
  op: "FloorMod"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/Const"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_2/rnn/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/Enter"
  input: "resCONVLSTM_2/rnn/while/TensorArrayReadV3"
  input: "^train/gradients/Add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_9"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/Enter_1"
  input: "resCONVLSTM_2/rnn/while/Identity_4"
  input: "^train/gradients/Add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_9"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/mod"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ConcatOffset"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ConcatOffset:1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/Slice"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/Slice_1"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/Slice"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/Slice_1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/Switch:1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/Sub_9"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_2/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "resCONVLSTM_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "train/gradients/b_count_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "resCONVLSTM_2/rnn/TensorArray_1"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/resCONVLSTM_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/TensorArray_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "train/gradients/resCONVLSTM_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "resCONVLSTM_2/rnn/TensorArrayUnstack/range"
  input: "train/gradients/resCONVLSTM_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/resCONVLSTM_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/resCONVLSTM_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "resCONVLSTM_2/rnn/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_2/rnn/transpose_grad/transpose"
  op: "Transpose"
  input: "train/gradients/resCONVLSTM_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_2/rnn/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_44"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_2/Add_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_2/rnn/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_2/Add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/AddN_44"
  input: "resCONVLSTM_1/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/Add_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/BatchNorm_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/Add_grad/Shape_1"
  op: "Shape"
  input: "Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_1/Add_grad/Shape"
  input: "train/gradients/resCONVLSTM_1/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/Add_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_1/Relu_1_grad/ReluGrad"
  input: "train/gradients/resCONVLSTM_1/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/Add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/Add_grad/Sum"
  input: "train/gradients/resCONVLSTM_1/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/Add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_1/Relu_1_grad/ReluGrad"
  input: "train/gradients/resCONVLSTM_1/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/Add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/Add_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_1/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/Add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/Add_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_1/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/Add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/Add_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_1/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/Add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/resCONVLSTM_1/Add_grad/tuple/control_dependency"
  input: "resCONVLSTM_1/BatchNorm_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond_1/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/Relu_grad/ReluGrad"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm_1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond_1/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm_1/cond_1/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond_1/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond_1/Merge_grad/cond_grad"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm_1/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm_1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond_1/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond_1/Merge_grad/cond_grad:1"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm_1/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm_1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_70"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm_1/cond/Merge"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_48"
  op: "Identity"
  input: "train/gradients/Switch_70:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_49"
  op: "Shape"
  input: "train/gradients/Switch_70:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_48/Const"
  op: "Const"
  input: "^train/gradients/Identity_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_48"
  op: "Fill"
  input: "train/gradients/Shape_49"
  input: "train/gradients/zeros_48/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond_1/Merge_grad/tuple/control_dependency"
  input: "train/gradients/zeros_48"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_71"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm_1/cond/Merge"
  input: "resCONVLSTM_1/BatchNorm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_49"
  op: "Identity"
  input: "train/gradients/Switch_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_50"
  op: "Shape"
  input: "train/gradients/Switch_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_49/Const"
  op: "Const"
  input: "^train/gradients/Identity_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_49"
  op: "Fill"
  input: "train/gradients/Shape_50"
  input: "train/gradients/zeros_49/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond_1/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_49"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond_1/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_45"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond_1/Identity/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/AddN_45"
  input: "resCONVLSTM_1/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm_1/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/Merge_grad/cond_grad"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm_1/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_83"
  op: "ZerosLike"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_84"
  op: "ZerosLike"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_85"
  op: "ZerosLike"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_86"
  op: "ZerosLike"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/Merge_grad/tuple/control_dependency"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1/Switch"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1/Switch_1"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1/Switch_3"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_87"
  op: "ZerosLike"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_88"
  op: "ZerosLike"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_89"
  op: "ZerosLike"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_90"
  op: "ZerosLike"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/Merge_grad/tuple/control_dependency_1"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm/Switch:1"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm/Switch_1:1"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm:3"
  input: "resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_72"
  op: "Switch"
  input: "resCONVLSTM_1/rnn_1/transpose_1"
  input: "resCONVLSTM_1/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_50"
  op: "Identity"
  input: "train/gradients/Switch_72:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_51"
  op: "Shape"
  input: "train/gradients/Switch_72:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_50/Const"
  op: "Const"
  input: "^train/gradients/Identity_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_50"
  op: "Fill"
  input: "train/gradients/Shape_51"
  input: "train/gradients/zeros_50/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_50"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_73"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm_1/beta/read"
  input: "resCONVLSTM_1/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_51"
  op: "Identity"
  input: "train/gradients/Switch_73:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_52"
  op: "Shape"
  input: "train/gradients/Switch_73:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_51/Const"
  op: "Const"
  input: "^train/gradients/Identity_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_51"
  op: "Fill"
  input: "train/gradients/Shape_52"
  input: "train/gradients/zeros_51/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_51"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_74"
  op: "Switch"
  input: "resCONVLSTM_1/rnn_1/transpose_1"
  input: "resCONVLSTM_1/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_52"
  op: "Identity"
  input: "train/gradients/Switch_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_53"
  op: "Shape"
  input: "train/gradients/Switch_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_52/Const"
  op: "Const"
  input: "^train/gradients/Identity_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_52"
  op: "Fill"
  input: "train/gradients/Shape_53"
  input: "train/gradients/zeros_52/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_52"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_75"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm_1/beta/read"
  input: "resCONVLSTM_1/BatchNorm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_53"
  op: "Identity"
  input: "train/gradients/Switch_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_54"
  op: "Shape"
  input: "train/gradients/Switch_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_53/Const"
  op: "Const"
  input: "^train/gradients/Identity_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_53"
  op: "Fill"
  input: "train/gradients/Shape_54"
  input: "train/gradients/zeros_53/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_53"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_46"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "resCONVLSTM_1/rnn_1/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/transpose_1_grad/transpose"
  op: "Transpose"
  input: "train/gradients/AddN_46"
  input: "train/gradients/resCONVLSTM_1/rnn_1/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_47"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm_1/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "resCONVLSTM_1/rnn_1/TensorArray"
  input: "resCONVLSTM_1/rnn_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "resCONVLSTM_1/rnn_1/while/Exit_2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/TensorArray"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/gradients/resCONVLSTM_1/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "resCONVLSTM_1/rnn_1/TensorArrayStack/range"
  input: "train/gradients/resCONVLSTM_1/rnn_1/transpose_1_grad/transpose"
  input: "train/gradients/resCONVLSTM_1/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_91"
  op: "ZerosLike"
  input: "resCONVLSTM_1/rnn_1/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_92"
  op: "ZerosLike"
  input: "resCONVLSTM_1/rnn_1/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/Exit_2_grad/b_exit"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/Exit_3_grad/b_exit"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/Exit_4_grad/b_exit"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/Switch_2_grad/b_switch"
  input: "train/gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/Merge_2_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_2_grad/Switch"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_2_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/Switch_3_grad/b_switch"
  input: "train/gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/Merge_3_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_3_grad/Switch"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_3_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/Switch_4_grad/b_switch"
  input: "train/gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/Merge_4_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_4_grad/Switch"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_4_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_1/rnn_1/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/Identity_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/Identity_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "resCONVLSTM_1/rnn_1/while/Identity_1"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_48"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_4_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Shape"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Shape_1"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/AddN_48"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul/Enter"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid_2"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Sum"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/AddN_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/rnn/conv2/Tanh_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/rnn/conv2/Tanh_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/Enter"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/Tanh_1"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/Mul/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_49"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/Shape"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/Shape_1"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_49"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/Sum"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_49"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_1/rnn_1/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Shape"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Shape_1"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/Identity_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/Identity_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul/Enter"
  input: "resCONVLSTM_1/rnn_1/while/Identity_3"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Sum"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul_1/Enter"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Shape"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Shape_1"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/rnn/conv2/Tanh"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/rnn/conv2/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul/Enter"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/Tanh"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Sum"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/Enter"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid_1"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/Mul/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_6"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/Shape"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/Sum"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid_1_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/Tanh_grad/TanhGrad"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_1_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/Sigmoid_2_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/split_grad/concat/Const"
  op: "Const"
  input: "^train/gradients/Sub_6"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_6"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/Shape"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/split_grad/concat"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/Sum"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/split_grad/concat"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Shape"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add/Enter_grad/Switch:1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Enter"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/Enter_1"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2_1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/ShapeN:1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropFilter"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropInput"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropFilter"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/rnn_1/while/rnn/conv2/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Shape"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  input: "^train/gradients/Sub_6"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\n\000\000\000\002\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub_6"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub_6"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/mod"
  op: "FloorMod"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/Const"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/rnn_1/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Enter"
  input: "resCONVLSTM_1/rnn_1/while/TensorArrayReadV3"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/Identity_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/Identity_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/Enter_1"
  input: "resCONVLSTM_1/rnn_1/while/Identity_4"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/mod"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ConcatOffset"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_grad/Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ConcatOffset:1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/Slice"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/Slice_1"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/Slice"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/Slice_1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/Switch:1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_1/rnn_1/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "resCONVLSTM_1/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "train/gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "resCONVLSTM_1/rnn_1/TensorArray_1"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn_1/TensorArray_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "train/gradients/resCONVLSTM_1/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "resCONVLSTM_1/rnn_1/TensorArrayUnstack/range"
  input: "train/gradients/resCONVLSTM_1/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/resCONVLSTM_1/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "resCONVLSTM_1/rnn_1/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn_1/transpose_grad/transpose"
  op: "Transpose"
  input: "train/gradients/resCONVLSTM_1/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_1/rnn_1/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/resCONVLSTM_1/rnn_1/transpose_grad/transpose"
  input: "resCONVLSTM_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond_1/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_1/Relu_grad/ReluGrad"
  input: "resCONVLSTM_1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm/cond_1/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond_1/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond_1/Merge_grad/cond_grad"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond_1/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond_1/Merge_grad/cond_grad:1"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_76"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm/cond/Merge"
  input: "resCONVLSTM_1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_54"
  op: "Identity"
  input: "train/gradients/Switch_76:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_55"
  op: "Shape"
  input: "train/gradients/Switch_76:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_54/Const"
  op: "Const"
  input: "^train/gradients/Identity_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_54"
  op: "Fill"
  input: "train/gradients/Shape_55"
  input: "train/gradients/zeros_54/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond_1/Merge_grad/tuple/control_dependency"
  input: "train/gradients/zeros_54"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_77"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm/cond/Merge"
  input: "resCONVLSTM_1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_55"
  op: "Identity"
  input: "train/gradients/Switch_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_56"
  op: "Shape"
  input: "train/gradients/Switch_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_55/Const"
  op: "Const"
  input: "^train/gradients/Identity_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_55"
  op: "Fill"
  input: "train/gradients/Shape_56"
  input: "train/gradients/zeros_55/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond_1/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_55"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond_1/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_50"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond_1/Switch_1_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond_1/Identity/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/AddN_50"
  input: "resCONVLSTM_1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond/Merge_grad/cond_grad"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_93"
  op: "ZerosLike"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_94"
  op: "ZerosLike"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_95"
  op: "ZerosLike"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_96"
  op: "ZerosLike"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1/Switch"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_97"
  op: "ZerosLike"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_98"
  op: "ZerosLike"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_99"
  op: "ZerosLike"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_100"
  op: "ZerosLike"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm/Switch:1"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm/Switch_1:1"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm:3"
  input: "resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_78"
  op: "Switch"
  input: "resCONVLSTM_1/rnn/transpose_1"
  input: "resCONVLSTM_1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_56"
  op: "Identity"
  input: "train/gradients/Switch_78:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_57"
  op: "Shape"
  input: "train/gradients/Switch_78:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_56/Const"
  op: "Const"
  input: "^train/gradients/Identity_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_56"
  op: "Fill"
  input: "train/gradients/Shape_57"
  input: "train/gradients/zeros_56/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_56"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_79"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm/beta/read"
  input: "resCONVLSTM_1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_57"
  op: "Identity"
  input: "train/gradients/Switch_79:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_58"
  op: "Shape"
  input: "train/gradients/Switch_79:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_57/Const"
  op: "Const"
  input: "^train/gradients/Identity_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_57"
  op: "Fill"
  input: "train/gradients/Shape_58"
  input: "train/gradients/zeros_57/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_57"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_80"
  op: "Switch"
  input: "resCONVLSTM_1/rnn/transpose_1"
  input: "resCONVLSTM_1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_58"
  op: "Identity"
  input: "train/gradients/Switch_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_59"
  op: "Shape"
  input: "train/gradients/Switch_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_58/Const"
  op: "Const"
  input: "^train/gradients/Identity_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_58"
  op: "Fill"
  input: "train/gradients/Shape_59"
  input: "train/gradients/zeros_58/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_58"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_81"
  op: "Switch"
  input: "resCONVLSTM_1/BatchNorm/beta/read"
  input: "resCONVLSTM_1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_59"
  op: "Identity"
  input: "train/gradients/Switch_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_60"
  op: "Shape"
  input: "train/gradients/Switch_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_59/Const"
  op: "Const"
  input: "^train/gradients/Identity_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_59"
  op: "Fill"
  input: "train/gradients/Shape_60"
  input: "train/gradients/zeros_59/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_59"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_51"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "resCONVLSTM_1/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/transpose_1_grad/transpose"
  op: "Transpose"
  input: "train/gradients/AddN_51"
  input: "train/gradients/resCONVLSTM_1/rnn/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_52"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "resCONVLSTM_1/rnn/TensorArray"
  input: "resCONVLSTM_1/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "resCONVLSTM_1/rnn/while/Exit_2"
  input: "^train/gradients/resCONVLSTM_1/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/gradients/resCONVLSTM_1/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "resCONVLSTM_1/rnn/TensorArrayStack/range"
  input: "train/gradients/resCONVLSTM_1/rnn/transpose_1_grad/transpose"
  input: "train/gradients/resCONVLSTM_1/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_101"
  op: "ZerosLike"
  input: "resCONVLSTM_1/rnn/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_102"
  op: "ZerosLike"
  input: "resCONVLSTM_1/rnn/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_1/rnn/while/Exit_2_grad/b_exit"
  input: "train/gradients/resCONVLSTM_1/rnn/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_1/rnn/while/Exit_3_grad/b_exit"
  input: "train/gradients/resCONVLSTM_1/rnn/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_1/rnn/while/Exit_4_grad/b_exit"
  input: "train/gradients/resCONVLSTM_1/rnn/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_1/rnn/while/Switch_2_grad/b_switch"
  input: "train/gradients/b_count_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/Merge_2_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/Merge_2_grad/Switch"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/Merge_2_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_1/rnn/while/Switch_3_grad/b_switch"
  input: "train/gradients/b_count_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/Merge_3_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/Merge_3_grad/Switch"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/Merge_3_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_1/rnn/while/Switch_4_grad/b_switch"
  input: "train/gradients/b_count_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/Merge_4_grad/Switch"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/Merge_4_grad/Switch"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/Merge_4_grad/Switch:1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_1/rnn/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_1/rnn/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_1/rnn/while/Merge_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/rnn/conv1/mul_2"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "resCONVLSTM_1/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/rnn/conv1/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/rnn/conv1/mul_2"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "resCONVLSTM_1/rnn/while/Identity_1"
  input: "^train/gradients/Add_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/gradients/Sub_10"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul/StackPopV2"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_53"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_1/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Shape"
  input: "^train/gradients/Add_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_10"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Shape_1"
  input: "^train/gradients/Add_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_10"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/AddN_53"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul/Enter"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid_2"
  input: "^train/gradients/Add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_10"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Sum"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/AddN_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/rnn/conv1/Tanh_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/rnn/conv1/Tanh_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul_1/Enter"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/Tanh_1"
  input: "^train/gradients/Add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_10"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/Mul/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_54"
  op: "AddN"
  input: "train/gradients/resCONVLSTM_1/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/Shape"
  input: "^train/gradients/Add_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_10"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/Shape_1"
  input: "^train/gradients/Add_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_10"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_54"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/Sum"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_54"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_1/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Shape"
  input: "^train/gradients/Add_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_10"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Shape_1"
  input: "^train/gradients/Add_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_10"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul/Enter"
  input: "resCONVLSTM_1/rnn/while/Identity_3"
  input: "^train/gradients/Add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_10"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Sum"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul_1/Enter"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid"
  input: "^train/gradients/Add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_10"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Shape_1"
  op: "Shape"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Shape"
  input: "^train/gradients/Add_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_10"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Shape_1"
  input: "^train/gradients/Add_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_10"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/rnn/conv1/Tanh"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/rnn/conv1/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul/Enter"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/Tanh"
  input: "^train/gradients/Add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_10"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Sum"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul_1/Enter"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid_1"
  input: "^train/gradients/Add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_10"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul_1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/Mul/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_10"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/Shape"
  input: "^train/gradients/Add_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_10"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/Sum"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid_1_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/Tanh_grad/TanhGrad"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_1_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/Sigmoid_2_grad/SigmoidGrad"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/split_grad/concat/Const"
  op: "Const"
  input: "^train/gradients/Sub_10"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_10"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/Shape"
  input: "^train/gradients/Add_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_10"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/split_grad/concat"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/Sum"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/split_grad/concat"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/Sum_1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/Reshape_1"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/Reshape"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/Reshape_1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/conv1d"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Shape"
  input: "^train/gradients/Add_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPopV2/Enter"
  input: "^train/gradients/Sub_10"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add/Enter_grad/b_acc_1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add/Enter_grad/Switch:1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Enter"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims"
  input: "^train/gradients/Add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_10"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/Enter_1"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1"
  input: "^train/gradients/Add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_10"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2_1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/ShapeN:1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropFilter"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropInput"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropFilter"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/rnn/while/rnn/conv1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/tuple/control_dependency"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Shape"
  input: "^train/gradients/Add_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPopV2/Enter"
  input: "^train/gradients/Sub_10"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  input: "^train/gradients/Sub_10"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\n\000\000\000\002\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d_grad/tuple/control_dependency_1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub_10"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub_10"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/mod"
  op: "FloorMod"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/Const"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/Shape"
  op: "Shape"
  input: "resCONVLSTM_1/rnn/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/Enter"
  input: "resCONVLSTM_1/rnn/while/TensorArrayReadV3"
  input: "^train/gradients/Add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_10"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/Enter_1"
  input: "resCONVLSTM_1/rnn/while/Identity_4"
  input: "^train/gradients/Add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_10"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/mod"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ConcatOffset"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_grad/Reshape"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ConcatOffset:1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/Slice"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/Slice_1"
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/Slice"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/Slice_1"
  input: "^train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/resCONVLSTM_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/Switch:1"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/resCONVLSTM_1/rnn/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "train/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/beta1_power/Assign"
  op: "Assign"
  input: "train/beta1_power"
  input: "train/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/beta1_power/read"
  op: "Identity"
  input: "train/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "train/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "train/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/beta2_power/Assign"
  op: "Assign"
  input: "train/beta2_power"
  input: "train/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/beta2_power/read"
  op: "Identity"
  input: "train/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/kernel/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv1/kernel/Adam"
  input: "resCONVLSTM_1/rnn/conv1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/kernel/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_1/rnn/conv1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv1/kernel/Adam_1"
  input: "resCONVLSTM_1/rnn/conv1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/kernel/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_1/rnn/conv1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/biases/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv1/biases/Adam"
  input: "resCONVLSTM_1/rnn/conv1/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/biases/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_1/rnn/conv1/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/biases"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/biases/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv1/biases/Adam_1"
  input: "resCONVLSTM_1/rnn/conv1/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv1/biases/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_1/rnn/conv1/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/biases"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm/beta/Adam"
  input: "resCONVLSTM_1/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm/beta/Adam_1"
  input: "resCONVLSTM_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/kernel/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv2/kernel/Adam"
  input: "resCONVLSTM_1/rnn/conv2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/kernel/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_1/rnn/conv2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv2/kernel/Adam_1"
  input: "resCONVLSTM_1/rnn/conv2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/kernel/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_1/rnn/conv2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/biases/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv2/biases/Adam"
  input: "resCONVLSTM_1/rnn/conv2/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/biases/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_1/rnn/conv2/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/biases"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/biases/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv2/biases/Adam_1"
  input: "resCONVLSTM_1/rnn/conv2/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/rnn/conv2/biases/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_1/rnn/conv2/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/biases"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/beta/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm_1/beta/Adam"
  input: "resCONVLSTM_1/BatchNorm_1/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/beta/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm_1/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/beta/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm_1/beta/Adam_1"
  input: "resCONVLSTM_1/BatchNorm_1/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_1/BatchNorm_1/beta/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_1/BatchNorm_1/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/kernel/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv1/kernel/Adam"
  input: "resCONVLSTM_2/rnn/conv1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/kernel/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_2/rnn/conv1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv1/kernel/Adam_1"
  input: "resCONVLSTM_2/rnn/conv1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/kernel/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_2/rnn/conv1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/biases/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv1/biases/Adam"
  input: "resCONVLSTM_2/rnn/conv1/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/biases/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_2/rnn/conv1/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/biases"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/biases/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv1/biases/Adam_1"
  input: "resCONVLSTM_2/rnn/conv1/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv1/biases/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_2/rnn/conv1/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/biases"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm/beta/Adam"
  input: "resCONVLSTM_2/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm/beta/Adam_1"
  input: "resCONVLSTM_2/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/kernel/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv2/kernel/Adam"
  input: "resCONVLSTM_2/rnn/conv2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/kernel/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_2/rnn/conv2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv2/kernel/Adam_1"
  input: "resCONVLSTM_2/rnn/conv2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/kernel/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_2/rnn/conv2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/biases/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv2/biases/Adam"
  input: "resCONVLSTM_2/rnn/conv2/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/biases/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_2/rnn/conv2/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/biases"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/biases/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv2/biases/Adam_1"
  input: "resCONVLSTM_2/rnn/conv2/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/rnn/conv2/biases/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_2/rnn/conv2/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/biases"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/beta/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm_1/beta/Adam"
  input: "resCONVLSTM_2/BatchNorm_1/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/beta/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm_1/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/beta/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm_1/beta/Adam_1"
  input: "resCONVLSTM_2/BatchNorm_1/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_2/BatchNorm_1/beta/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_2/BatchNorm_1/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/kernel/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv1/kernel/Adam"
  input: "resCONVLSTM_3/rnn/conv1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/kernel/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_3/rnn/conv1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv1/kernel/Adam_1"
  input: "resCONVLSTM_3/rnn/conv1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/kernel/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_3/rnn/conv1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/biases/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv1/biases/Adam"
  input: "resCONVLSTM_3/rnn/conv1/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/biases/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_3/rnn/conv1/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/biases"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/biases/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv1/biases/Adam_1"
  input: "resCONVLSTM_3/rnn/conv1/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv1/biases/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_3/rnn/conv1/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/biases"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm/beta/Adam"
  input: "resCONVLSTM_3/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm/beta/Adam_1"
  input: "resCONVLSTM_3/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/kernel/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv2/kernel/Adam"
  input: "resCONVLSTM_3/rnn/conv2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/kernel/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_3/rnn/conv2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv2/kernel/Adam_1"
  input: "resCONVLSTM_3/rnn/conv2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/kernel/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_3/rnn/conv2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/biases/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv2/biases/Adam"
  input: "resCONVLSTM_3/rnn/conv2/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/biases/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_3/rnn/conv2/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/biases"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/biases/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv2/biases/Adam_1"
  input: "resCONVLSTM_3/rnn/conv2/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/rnn/conv2/biases/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_3/rnn/conv2/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/biases"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/beta/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm_1/beta/Adam"
  input: "resCONVLSTM_3/BatchNorm_1/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/beta/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm_1/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/beta/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm_1/beta/Adam_1"
  input: "resCONVLSTM_3/BatchNorm_1/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_3/BatchNorm_1/beta/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_3/BatchNorm_1/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/kernel/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv1/kernel/Adam"
  input: "resCONVLSTM_4/rnn/conv1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/kernel/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_4/rnn/conv1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv1/kernel/Adam_1"
  input: "resCONVLSTM_4/rnn/conv1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/kernel/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_4/rnn/conv1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/biases/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv1/biases/Adam"
  input: "resCONVLSTM_4/rnn/conv1/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/biases/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_4/rnn/conv1/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/biases"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/biases/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv1/biases/Adam_1"
  input: "resCONVLSTM_4/rnn/conv1/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv1/biases/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_4/rnn/conv1/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/biases"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm/beta/Adam"
  input: "resCONVLSTM_4/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm/beta/Adam_1"
  input: "resCONVLSTM_4/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/kernel/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv2/kernel/Adam"
  input: "resCONVLSTM_4/rnn/conv2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/kernel/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_4/rnn/conv2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv2/kernel/Adam_1"
  input: "resCONVLSTM_4/rnn/conv2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/kernel/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_4/rnn/conv2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/kernel"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/biases/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv2/biases/Adam"
  input: "resCONVLSTM_4/rnn/conv2/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/biases/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_4/rnn/conv2/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/biases"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/biases/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv2/biases/Adam_1"
  input: "resCONVLSTM_4/rnn/conv2/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/rnn/conv2/biases/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_4/rnn/conv2/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/biases"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/beta/Adam/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm_1/beta/Adam"
  input: "resCONVLSTM_4/BatchNorm_1/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/beta/Adam/read"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm_1/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/beta/Adam_1/Assign"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm_1/beta/Adam_1"
  input: "resCONVLSTM_4/BatchNorm_1/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resCONVLSTM_4/BatchNorm_1/beta/Adam_1/read"
  op: "Identity"
  input: "resCONVLSTM_4/BatchNorm_1/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "P\000\000\000(\n\000\000"
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm1/rnn/lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm1/rnn/lstm_cell/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
        dim {
          size: 2600
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "lstm1/rnn/lstm_cell/kernel/Adam"
  input: "lstm1/rnn/lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "lstm1/rnn/lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "P\000\000\000(\n\000\000"
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm1/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm1/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
        dim {
          size: 2600
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "lstm1/rnn/lstm_cell/kernel/Adam_1"
  input: "lstm1/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "lstm1/rnn/lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2600
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm1/rnn/lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm1/rnn/lstm_cell/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2600
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "lstm1/rnn/lstm_cell/bias/Adam"
  input: "lstm1/rnn/lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "lstm1/rnn/lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/bias"
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2600
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm1/rnn/lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm1/rnn/lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2600
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "lstm1/rnn/lstm_cell/bias/Adam_1"
  input: "lstm1/rnn/lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "lstm1/rnn/lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/bias"
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/projection/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\212\002\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/projection/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/projection/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/projection/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 650
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/projection/kernel/Adam/Assign"
  op: "Assign"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Adam"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/projection/kernel/Adam/read"
  op: "Identity"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/projection/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\212\002\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/projection/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/projection/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/projection/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 650
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/projection/kernel/Adam_1/Assign"
  op: "Assign"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Adam_1"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/rnn/lstm_cell/projection/kernel/Adam_1/read"
  op: "Identity"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
}
node {
  name: "lstm1/nin1/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm1/nin1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm1/nin1/kernel/Adam/Assign"
  op: "Assign"
  input: "lstm1/nin1/kernel/Adam"
  input: "lstm1/nin1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/nin1/kernel/Adam/read"
  op: "Identity"
  input: "lstm1/nin1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/kernel"
      }
    }
  }
}
node {
  name: "lstm1/nin1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm1/nin1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm1/nin1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "lstm1/nin1/kernel/Adam_1"
  input: "lstm1/nin1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/nin1/kernel/Adam_1/read"
  op: "Identity"
  input: "lstm1/nin1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/kernel"
      }
    }
  }
}
node {
  name: "lstm1/nin1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm1/nin1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm1/nin1/bias/Adam/Assign"
  op: "Assign"
  input: "lstm1/nin1/bias/Adam"
  input: "lstm1/nin1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/nin1/bias/Adam/read"
  op: "Identity"
  input: "lstm1/nin1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/bias"
      }
    }
  }
}
node {
  name: "lstm1/nin1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm1/nin1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm1/nin1/bias/Adam_1/Assign"
  op: "Assign"
  input: "lstm1/nin1/bias/Adam_1"
  input: "lstm1/nin1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/nin1/bias/Adam_1/read"
  op: "Identity"
  input: "lstm1/nin1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/bias"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "lstm1/BatchNorm/beta/Adam"
  input: "lstm1/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "lstm1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "lstm1/BatchNorm/beta/Adam_1"
  input: "lstm1/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "lstm1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "P\000\000\000(\n\000\000"
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm2/rnn/lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm2/rnn/lstm_cell/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
        dim {
          size: 2600
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "lstm2/rnn/lstm_cell/kernel/Adam"
  input: "lstm2/rnn/lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "lstm2/rnn/lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "P\000\000\000(\n\000\000"
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm2/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm2/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
        dim {
          size: 2600
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "lstm2/rnn/lstm_cell/kernel/Adam_1"
  input: "lstm2/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "lstm2/rnn/lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2600
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm2/rnn/lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm2/rnn/lstm_cell/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2600
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "lstm2/rnn/lstm_cell/bias/Adam"
  input: "lstm2/rnn/lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "lstm2/rnn/lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/bias"
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2600
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm2/rnn/lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm2/rnn/lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2600
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "lstm2/rnn/lstm_cell/bias/Adam_1"
  input: "lstm2/rnn/lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "lstm2/rnn/lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/bias"
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/projection/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\212\002\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/projection/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/projection/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/projection/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 650
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/projection/kernel/Adam/Assign"
  op: "Assign"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Adam"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/projection/kernel/Adam/read"
  op: "Identity"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/projection/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\212\002\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/projection/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/projection/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/projection/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 650
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/projection/kernel/Adam_1/Assign"
  op: "Assign"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Adam_1"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/rnn/lstm_cell/projection/kernel/Adam_1/read"
  op: "Identity"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
}
node {
  name: "lstm2/nin1/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2/nin1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2/nin1/kernel/Adam/Assign"
  op: "Assign"
  input: "lstm2/nin1/kernel/Adam"
  input: "lstm2/nin1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/nin1/kernel/Adam/read"
  op: "Identity"
  input: "lstm2/nin1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/kernel"
      }
    }
  }
}
node {
  name: "lstm2/nin1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2/nin1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2/nin1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "lstm2/nin1/kernel/Adam_1"
  input: "lstm2/nin1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/nin1/kernel/Adam_1/read"
  op: "Identity"
  input: "lstm2/nin1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/kernel"
      }
    }
  }
}
node {
  name: "lstm2/nin1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2/nin1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2/nin1/bias/Adam/Assign"
  op: "Assign"
  input: "lstm2/nin1/bias/Adam"
  input: "lstm2/nin1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/nin1/bias/Adam/read"
  op: "Identity"
  input: "lstm2/nin1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/bias"
      }
    }
  }
}
node {
  name: "lstm2/nin1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2/nin1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2/nin1/bias/Adam_1/Assign"
  op: "Assign"
  input: "lstm2/nin1/bias/Adam_1"
  input: "lstm2/nin1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/nin1/bias/Adam_1/read"
  op: "Identity"
  input: "lstm2/nin1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/bias"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "lstm2/BatchNorm/beta/Adam"
  input: "lstm2/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "lstm2/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "lstm2/BatchNorm/beta/Adam_1"
  input: "lstm2/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "lstm2/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "P\000\000\000(\n\000\000"
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm3/rnn/lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm3/rnn/lstm_cell/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
        dim {
          size: 2600
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "lstm3/rnn/lstm_cell/kernel/Adam"
  input: "lstm3/rnn/lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "lstm3/rnn/lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "P\000\000\000(\n\000\000"
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm3/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm3/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
        dim {
          size: 2600
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "lstm3/rnn/lstm_cell/kernel/Adam_1"
  input: "lstm3/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "lstm3/rnn/lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2600
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm3/rnn/lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm3/rnn/lstm_cell/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2600
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "lstm3/rnn/lstm_cell/bias/Adam"
  input: "lstm3/rnn/lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "lstm3/rnn/lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/bias"
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2600
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm3/rnn/lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm3/rnn/lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2600
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "lstm3/rnn/lstm_cell/bias/Adam_1"
  input: "lstm3/rnn/lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "lstm3/rnn/lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/bias"
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/projection/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\212\002\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/projection/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/projection/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/projection/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 650
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/projection/kernel/Adam/Assign"
  op: "Assign"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Adam"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/projection/kernel/Adam/read"
  op: "Identity"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/projection/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\212\002\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/projection/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/projection/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/projection/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 650
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/projection/kernel/Adam_1/Assign"
  op: "Assign"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Adam_1"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm3/rnn/lstm_cell/projection/kernel/Adam_1/read"
  op: "Identity"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "P\017\000\000\356\002\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "dense/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3920
        }
        dim {
          size: 750
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/kernel/Adam/Assign"
  op: "Assign"
  input: "dense/kernel/Adam"
  input: "dense/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/kernel/Adam/read"
  op: "Identity"
  input: "dense/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "P\017\000\000\356\002\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "dense/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3920
        }
        dim {
          size: 750
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Assign"
  op: "Assign"
  input: "dense/kernel/Adam_1"
  input: "dense/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/kernel/Adam_1/read"
  op: "Identity"
  input: "dense/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 750
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 750
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/bias/Adam/Assign"
  op: "Assign"
  input: "dense/bias/Adam"
  input: "dense/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/bias/Adam/read"
  op: "Identity"
  input: "dense/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
}
node {
  name: "dense/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 750
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 750
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/bias/Adam_1/Assign"
  op: "Assign"
  input: "dense/bias/Adam_1"
  input: "dense/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/bias/Adam_1/read"
  op: "Identity"
  input: "dense/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
}
node {
  name: "Variable/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\356\002\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Variable/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable/Adam/Initializer/zeros"
  op: "Fill"
  input: "Variable/Adam/Initializer/zeros/shape_as_tensor"
  input: "Variable/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 750
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable/Adam/Assign"
  op: "Assign"
  input: "Variable/Adam"
  input: "Variable/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable/Adam/read"
  op: "Identity"
  input: "Variable/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "Variable/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\356\002\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Variable/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Variable/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Variable/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 750
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable/Adam_1/Assign"
  op: "Assign"
  input: "Variable/Adam_1"
  input: "Variable/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable/Adam_1/read"
  op: "Identity"
  input: "Variable/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "Variable_1/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_1/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_1/Adam/Assign"
  op: "Assign"
  input: "Variable_1/Adam"
  input: "Variable_1/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_1/Adam/read"
  op: "Identity"
  input: "Variable_1/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
}
node {
  name: "Variable_1/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_1/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_1/Adam_1/Assign"
  op: "Assign"
  input: "Variable_1/Adam_1"
  input: "Variable_1/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_1/Adam_1/read"
  op: "Identity"
  input: "Variable_1/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
}
node {
  name: "train/Adam/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "train/Adam/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "train/Adam/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_1/rnn/conv1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_1/rnn/conv1/kernel"
  input: "resCONVLSTM_1/rnn/conv1/kernel/Adam"
  input: "resCONVLSTM_1/rnn/conv1/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_1/rnn/conv1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_1/rnn/conv1/biases"
  input: "resCONVLSTM_1/rnn/conv1/biases/Adam"
  input: "resCONVLSTM_1/rnn/conv1/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/resCONVLSTM_1/rnn/while/rnn/conv1/add/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_1/BatchNorm/beta"
  input: "resCONVLSTM_1/BatchNorm/beta/Adam"
  input: "resCONVLSTM_1/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_1/rnn/conv2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_1/rnn/conv2/kernel"
  input: "resCONVLSTM_1/rnn/conv2/kernel/Adam"
  input: "resCONVLSTM_1/rnn/conv2/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_1/rnn/conv2/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_1/rnn/conv2/biases"
  input: "resCONVLSTM_1/rnn/conv2/biases/Adam"
  input: "resCONVLSTM_1/rnn/conv2/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/resCONVLSTM_1/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_1/BatchNorm_1/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_1/BatchNorm_1/beta"
  input: "resCONVLSTM_1/BatchNorm_1/beta/Adam"
  input: "resCONVLSTM_1/BatchNorm_1/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_2/rnn/conv1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_2/rnn/conv1/kernel"
  input: "resCONVLSTM_2/rnn/conv1/kernel/Adam"
  input: "resCONVLSTM_2/rnn/conv1/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_2/rnn/conv1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_2/rnn/conv1/biases"
  input: "resCONVLSTM_2/rnn/conv1/biases/Adam"
  input: "resCONVLSTM_2/rnn/conv1/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/resCONVLSTM_2/rnn/while/rnn/conv1/add/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_2/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_2/BatchNorm/beta"
  input: "resCONVLSTM_2/BatchNorm/beta/Adam"
  input: "resCONVLSTM_2/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_2/rnn/conv2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_2/rnn/conv2/kernel"
  input: "resCONVLSTM_2/rnn/conv2/kernel/Adam"
  input: "resCONVLSTM_2/rnn/conv2/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_2/rnn/conv2/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_2/rnn/conv2/biases"
  input: "resCONVLSTM_2/rnn/conv2/biases/Adam"
  input: "resCONVLSTM_2/rnn/conv2/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/resCONVLSTM_2/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_2/BatchNorm_1/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_2/BatchNorm_1/beta"
  input: "resCONVLSTM_2/BatchNorm_1/beta/Adam"
  input: "resCONVLSTM_2/BatchNorm_1/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_3/rnn/conv1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_3/rnn/conv1/kernel"
  input: "resCONVLSTM_3/rnn/conv1/kernel/Adam"
  input: "resCONVLSTM_3/rnn/conv1/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_3/rnn/conv1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_3/rnn/conv1/biases"
  input: "resCONVLSTM_3/rnn/conv1/biases/Adam"
  input: "resCONVLSTM_3/rnn/conv1/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/resCONVLSTM_3/rnn/while/rnn/conv1/add/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_3/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_3/BatchNorm/beta"
  input: "resCONVLSTM_3/BatchNorm/beta/Adam"
  input: "resCONVLSTM_3/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_3/rnn/conv2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_3/rnn/conv2/kernel"
  input: "resCONVLSTM_3/rnn/conv2/kernel/Adam"
  input: "resCONVLSTM_3/rnn/conv2/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_3/rnn/conv2/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_3/rnn/conv2/biases"
  input: "resCONVLSTM_3/rnn/conv2/biases/Adam"
  input: "resCONVLSTM_3/rnn/conv2/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/resCONVLSTM_3/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_3/BatchNorm_1/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_3/BatchNorm_1/beta"
  input: "resCONVLSTM_3/BatchNorm_1/beta/Adam"
  input: "resCONVLSTM_3/BatchNorm_1/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_4/rnn/conv1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_4/rnn/conv1/kernel"
  input: "resCONVLSTM_4/rnn/conv1/kernel/Adam"
  input: "resCONVLSTM_4/rnn/conv1/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/conv1d/ExpandDims_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_4/rnn/conv1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_4/rnn/conv1/biases"
  input: "resCONVLSTM_4/rnn/conv1/biases/Adam"
  input: "resCONVLSTM_4/rnn/conv1/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/resCONVLSTM_4/rnn/while/rnn/conv1/add/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_4/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_4/BatchNorm/beta"
  input: "resCONVLSTM_4/BatchNorm/beta/Adam"
  input: "resCONVLSTM_4/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_4/rnn/conv2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_4/rnn/conv2/kernel"
  input: "resCONVLSTM_4/rnn/conv2/kernel/Adam"
  input: "resCONVLSTM_4/rnn/conv2/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/conv1d/ExpandDims_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_4/rnn/conv2/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_4/rnn/conv2/biases"
  input: "resCONVLSTM_4/rnn/conv2/biases/Adam"
  input: "resCONVLSTM_4/rnn/conv2/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/resCONVLSTM_4/rnn_1/while/rnn/conv2/add/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_resCONVLSTM_4/BatchNorm_1/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "resCONVLSTM_4/BatchNorm_1/beta"
  input: "resCONVLSTM_4/BatchNorm_1/beta/Adam"
  input: "resCONVLSTM_4/BatchNorm_1/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_lstm1/rnn/lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm1/rnn/lstm_cell/kernel"
  input: "lstm1/rnn/lstm_cell/kernel/Adam"
  input: "lstm1/rnn/lstm_cell/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_lstm1/rnn/lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm1/rnn/lstm_cell/bias"
  input: "lstm1/rnn/lstm_cell/bias/Adam"
  input: "lstm1/rnn/lstm_cell/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_lstm1/rnn/lstm_cell/projection/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm1/rnn/lstm_cell/projection/kernel"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Adam"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/lstm1/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_lstm1/nin1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm1/nin1/kernel"
  input: "lstm1/nin1/kernel/Adam"
  input: "lstm1/nin1/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/lstm1/nin1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_lstm1/nin1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm1/nin1/bias"
  input: "lstm1/nin1/bias/Adam"
  input: "lstm1/nin1/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/lstm1/nin1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_lstm1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm1/BatchNorm/beta"
  input: "lstm1/BatchNorm/beta/Adam"
  input: "lstm1/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_lstm2/rnn/lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm2/rnn/lstm_cell/kernel"
  input: "lstm2/rnn/lstm_cell/kernel/Adam"
  input: "lstm2/rnn/lstm_cell/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_lstm2/rnn/lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm2/rnn/lstm_cell/bias"
  input: "lstm2/rnn/lstm_cell/bias/Adam"
  input: "lstm2/rnn/lstm_cell/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_lstm2/rnn/lstm_cell/projection/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm2/rnn/lstm_cell/projection/kernel"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Adam"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/lstm2/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_lstm2/nin1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm2/nin1/kernel"
  input: "lstm2/nin1/kernel/Adam"
  input: "lstm2/nin1/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/lstm2/nin1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_lstm2/nin1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm2/nin1/bias"
  input: "lstm2/nin1/bias/Adam"
  input: "lstm2/nin1/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/lstm2/nin1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_lstm2/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm2/BatchNorm/beta"
  input: "lstm2/BatchNorm/beta/Adam"
  input: "lstm2/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_lstm3/rnn/lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm3/rnn/lstm_cell/kernel"
  input: "lstm3/rnn/lstm_cell/kernel/Adam"
  input: "lstm3/rnn/lstm_cell/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_lstm3/rnn/lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm3/rnn/lstm_cell/bias"
  input: "lstm3/rnn/lstm_cell/bias/Adam"
  input: "lstm3/rnn/lstm_cell/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_lstm3/rnn/lstm_cell/projection/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm3/rnn/lstm_cell/projection/kernel"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Adam"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/lstm3/rnn/while/lstm_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_dense/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "dense/kernel"
  input: "dense/kernel/Adam"
  input: "dense/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/dense/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_dense/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "dense/bias"
  input: "dense/bias/Adam"
  input: "dense/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/dense/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Variable/ApplyAdam"
  op: "ApplyAdam"
  input: "Variable"
  input: "Variable/Adam"
  input: "Variable/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Variable_1/ApplyAdam"
  op: "ApplyAdam"
  input: "Variable_1"
  input: "Variable_1/Adam"
  input: "Variable_1/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/mul"
  op: "Mul"
  input: "train/beta1_power/read"
  input: "train/Adam/beta1"
  input: "^train/Adam/update_Variable/ApplyAdam"
  input: "^train/Adam/update_Variable_1/ApplyAdam"
  input: "^train/Adam/update_dense/bias/ApplyAdam"
  input: "^train/Adam/update_dense/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_lstm1/nin1/bias/ApplyAdam"
  input: "^train/Adam/update_lstm1/nin1/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm1/rnn/lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_lstm1/rnn/lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm1/rnn/lstm_cell/projection/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm2/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_lstm2/nin1/bias/ApplyAdam"
  input: "^train/Adam/update_lstm2/nin1/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm2/rnn/lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_lstm2/rnn/lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm2/rnn/lstm_cell/projection/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm3/rnn/lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_lstm3/rnn/lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm3/rnn/lstm_cell/projection/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_1/BatchNorm_1/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_1/rnn/conv1/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_1/rnn/conv1/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_1/rnn/conv2/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_1/rnn/conv2/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_2/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_2/BatchNorm_1/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_2/rnn/conv1/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_2/rnn/conv1/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_2/rnn/conv2/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_2/rnn/conv2/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_3/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_3/BatchNorm_1/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_3/rnn/conv1/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_3/rnn/conv1/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_3/rnn/conv2/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_3/rnn/conv2/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_4/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_4/BatchNorm_1/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_4/rnn/conv1/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_4/rnn/conv1/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_4/rnn/conv2/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_4/rnn/conv2/kernel/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "train/Adam/Assign"
  op: "Assign"
  input: "train/beta1_power"
  input: "train/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/Adam/mul_1"
  op: "Mul"
  input: "train/beta2_power/read"
  input: "train/Adam/beta2"
  input: "^train/Adam/update_Variable/ApplyAdam"
  input: "^train/Adam/update_Variable_1/ApplyAdam"
  input: "^train/Adam/update_dense/bias/ApplyAdam"
  input: "^train/Adam/update_dense/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_lstm1/nin1/bias/ApplyAdam"
  input: "^train/Adam/update_lstm1/nin1/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm1/rnn/lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_lstm1/rnn/lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm1/rnn/lstm_cell/projection/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm2/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_lstm2/nin1/bias/ApplyAdam"
  input: "^train/Adam/update_lstm2/nin1/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm2/rnn/lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_lstm2/rnn/lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm2/rnn/lstm_cell/projection/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm3/rnn/lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_lstm3/rnn/lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm3/rnn/lstm_cell/projection/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_1/BatchNorm_1/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_1/rnn/conv1/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_1/rnn/conv1/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_1/rnn/conv2/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_1/rnn/conv2/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_2/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_2/BatchNorm_1/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_2/rnn/conv1/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_2/rnn/conv1/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_2/rnn/conv2/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_2/rnn/conv2/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_3/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_3/BatchNorm_1/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_3/rnn/conv1/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_3/rnn/conv1/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_3/rnn/conv2/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_3/rnn/conv2/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_4/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_4/BatchNorm_1/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_4/rnn/conv1/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_4/rnn/conv1/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_4/rnn/conv2/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_4/rnn/conv2/kernel/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "train/Adam/Assign_1"
  op: "Assign"
  input: "train/beta2_power"
  input: "train/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/Adam"
  op: "NoOp"
  input: "^train/Adam/Assign"
  input: "^train/Adam/Assign_1"
  input: "^train/Adam/update_Variable/ApplyAdam"
  input: "^train/Adam/update_Variable_1/ApplyAdam"
  input: "^train/Adam/update_dense/bias/ApplyAdam"
  input: "^train/Adam/update_dense/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_lstm1/nin1/bias/ApplyAdam"
  input: "^train/Adam/update_lstm1/nin1/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm1/rnn/lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_lstm1/rnn/lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm1/rnn/lstm_cell/projection/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm2/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_lstm2/nin1/bias/ApplyAdam"
  input: "^train/Adam/update_lstm2/nin1/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm2/rnn/lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_lstm2/rnn/lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm2/rnn/lstm_cell/projection/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm3/rnn/lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_lstm3/rnn/lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_lstm3/rnn/lstm_cell/projection/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_1/BatchNorm_1/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_1/rnn/conv1/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_1/rnn/conv1/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_1/rnn/conv2/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_1/rnn/conv2/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_2/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_2/BatchNorm_1/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_2/rnn/conv1/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_2/rnn/conv1/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_2/rnn/conv2/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_2/rnn/conv2/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_3/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_3/BatchNorm_1/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_3/rnn/conv1/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_3/rnn/conv1/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_3/rnn/conv2/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_3/rnn/conv2/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_4/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_4/BatchNorm_1/beta/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_4/rnn/conv1/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_4/rnn/conv1/kernel/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_4/rnn/conv2/biases/ApplyAdam"
  input: "^train/Adam/update_resCONVLSTM_4/rnn/conv2/kernel/ApplyAdam"
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "add_1"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax_1"
  op: "ArgMax"
  input: "groundtruth_input"
  input: "ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Equal"
  op: "Equal"
  input: "ArgMax"
  input: "ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "confusion_matrix/assert_non_negative/Const"
  input: "ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  op: "All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/LessEqual"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "ArgMax_1"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax_1"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency"
  op: "Identity"
  input: "ArgMax_1"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax_1"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "confusion_matrix/assert_non_negative_1/Const"
  input: "ArgMax"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  op: "All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/LessEqual"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "ArgMax"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_1"
  op: "Identity"
  input: "ArgMax"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/Cast/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "confusion_matrix/Cast"
  op: "Cast"
  input: "confusion_matrix/Cast/x"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Less"
  op: "Less"
  input: "confusion_matrix/control_dependency"
  input: "confusion_matrix/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/All"
  op: "All"
  input: "confusion_matrix/assert_less/Less"
  input: "confusion_matrix/assert_less/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less/All"
  input: "confusion_matrix/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_4"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_4"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_2"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less/All"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "confusion_matrix/control_dependency"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax_1"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "confusion_matrix/Cast"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/Cast"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_2"
  op: "Identity"
  input: "confusion_matrix/control_dependency"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax_1"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Less"
  op: "Less"
  input: "confusion_matrix/control_dependency_1"
  input: "confusion_matrix/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/All"
  op: "All"
  input: "confusion_matrix/assert_less_1/Less"
  input: "confusion_matrix/assert_less_1/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less_1/All"
  input: "confusion_matrix/assert_less_1/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_4"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_4"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_2"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less_1/All"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "confusion_matrix/control_dependency_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "confusion_matrix/Cast"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/Cast"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_3"
  op: "Identity"
  input: "confusion_matrix/control_dependency_1"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "confusion_matrix/stack_1"
  op: "Pack"
  input: "confusion_matrix/control_dependency_2"
  input: "confusion_matrix/control_dependency_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "confusion_matrix/ones_like/Shape"
  op: "Shape"
  input: "confusion_matrix/control_dependency_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "confusion_matrix/ones_like"
  op: "Fill"
  input: "confusion_matrix/ones_like/Shape"
  input: "confusion_matrix/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/Cast_1"
  op: "Cast"
  input: "confusion_matrix/stack"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/zeros"
  op: "Fill"
  input: "confusion_matrix/stack"
  input: "confusion_matrix/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/SparseTensorDenseAdd"
  op: "SparseTensorDenseAdd"
  input: "confusion_matrix/stack_1"
  input: "confusion_matrix/ones_like"
  input: "confusion_matrix/Cast_1"
  input: "confusion_matrix/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "Cast"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "accuracy/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "accuracy"
      }
    }
  }
}
node {
  name: "accuracy"
  op: "ScalarSummary"
  input: "accuracy/tags"
  input: "Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
}
node {
  name: "add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "add_2"
  op: "Add"
  input: "global_step/read"
  input: "add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "global_step"
  input: "add_2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 172
          }
        }
        string_val: "Variable"
        string_val: "Variable/Adam"
        string_val: "Variable/Adam_1"
        string_val: "Variable_1"
        string_val: "Variable_1/Adam"
        string_val: "Variable_1/Adam_1"
        string_val: "dense/bias"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
        string_val: "dense/kernel"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
        string_val: "global_step"
        string_val: "lstm1/BatchNorm/beta"
        string_val: "lstm1/BatchNorm/beta/Adam"
        string_val: "lstm1/BatchNorm/beta/Adam_1"
        string_val: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/biased"
        string_val: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/local_step"
        string_val: "lstm1/BatchNorm/moving_mean"
        string_val: "lstm1/BatchNorm/moving_variance"
        string_val: "lstm1/nin1/bias"
        string_val: "lstm1/nin1/bias/Adam"
        string_val: "lstm1/nin1/bias/Adam_1"
        string_val: "lstm1/nin1/kernel"
        string_val: "lstm1/nin1/kernel/Adam"
        string_val: "lstm1/nin1/kernel/Adam_1"
        string_val: "lstm1/rnn/lstm_cell/bias"
        string_val: "lstm1/rnn/lstm_cell/bias/Adam"
        string_val: "lstm1/rnn/lstm_cell/bias/Adam_1"
        string_val: "lstm1/rnn/lstm_cell/kernel"
        string_val: "lstm1/rnn/lstm_cell/kernel/Adam"
        string_val: "lstm1/rnn/lstm_cell/kernel/Adam_1"
        string_val: "lstm1/rnn/lstm_cell/projection/kernel"
        string_val: "lstm1/rnn/lstm_cell/projection/kernel/Adam"
        string_val: "lstm1/rnn/lstm_cell/projection/kernel/Adam_1"
        string_val: "lstm2/BatchNorm/beta"
        string_val: "lstm2/BatchNorm/beta/Adam"
        string_val: "lstm2/BatchNorm/beta/Adam_1"
        string_val: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/biased"
        string_val: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/local_step"
        string_val: "lstm2/BatchNorm/moving_mean"
        string_val: "lstm2/BatchNorm/moving_variance"
        string_val: "lstm2/nin1/bias"
        string_val: "lstm2/nin1/bias/Adam"
        string_val: "lstm2/nin1/bias/Adam_1"
        string_val: "lstm2/nin1/kernel"
        string_val: "lstm2/nin1/kernel/Adam"
        string_val: "lstm2/nin1/kernel/Adam_1"
        string_val: "lstm2/rnn/lstm_cell/bias"
        string_val: "lstm2/rnn/lstm_cell/bias/Adam"
        string_val: "lstm2/rnn/lstm_cell/bias/Adam_1"
        string_val: "lstm2/rnn/lstm_cell/kernel"
        string_val: "lstm2/rnn/lstm_cell/kernel/Adam"
        string_val: "lstm2/rnn/lstm_cell/kernel/Adam_1"
        string_val: "lstm2/rnn/lstm_cell/projection/kernel"
        string_val: "lstm2/rnn/lstm_cell/projection/kernel/Adam"
        string_val: "lstm2/rnn/lstm_cell/projection/kernel/Adam_1"
        string_val: "lstm3/rnn/lstm_cell/bias"
        string_val: "lstm3/rnn/lstm_cell/bias/Adam"
        string_val: "lstm3/rnn/lstm_cell/bias/Adam_1"
        string_val: "lstm3/rnn/lstm_cell/kernel"
        string_val: "lstm3/rnn/lstm_cell/kernel/Adam"
        string_val: "lstm3/rnn/lstm_cell/kernel/Adam_1"
        string_val: "lstm3/rnn/lstm_cell/projection/kernel"
        string_val: "lstm3/rnn/lstm_cell/projection/kernel/Adam"
        string_val: "lstm3/rnn/lstm_cell/projection/kernel/Adam_1"
        string_val: "resCONVLSTM_1/BatchNorm/beta"
        string_val: "resCONVLSTM_1/BatchNorm/beta/Adam"
        string_val: "resCONVLSTM_1/BatchNorm/beta/Adam_1"
        string_val: "resCONVLSTM_1/BatchNorm/moving_mean"
        string_val: "resCONVLSTM_1/BatchNorm/moving_variance"
        string_val: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/biased"
        string_val: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/local_step"
        string_val: "resCONVLSTM_1/BatchNorm_1/beta"
        string_val: "resCONVLSTM_1/BatchNorm_1/beta/Adam"
        string_val: "resCONVLSTM_1/BatchNorm_1/beta/Adam_1"
        string_val: "resCONVLSTM_1/BatchNorm_1/moving_mean"
        string_val: "resCONVLSTM_1/BatchNorm_1/moving_variance"
        string_val: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/biased"
        string_val: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/local_step"
        string_val: "resCONVLSTM_1/rnn/conv1/biases"
        string_val: "resCONVLSTM_1/rnn/conv1/biases/Adam"
        string_val: "resCONVLSTM_1/rnn/conv1/biases/Adam_1"
        string_val: "resCONVLSTM_1/rnn/conv1/kernel"
        string_val: "resCONVLSTM_1/rnn/conv1/kernel/Adam"
        string_val: "resCONVLSTM_1/rnn/conv1/kernel/Adam_1"
        string_val: "resCONVLSTM_1/rnn/conv2/biases"
        string_val: "resCONVLSTM_1/rnn/conv2/biases/Adam"
        string_val: "resCONVLSTM_1/rnn/conv2/biases/Adam_1"
        string_val: "resCONVLSTM_1/rnn/conv2/kernel"
        string_val: "resCONVLSTM_1/rnn/conv2/kernel/Adam"
        string_val: "resCONVLSTM_1/rnn/conv2/kernel/Adam_1"
        string_val: "resCONVLSTM_2/BatchNorm/beta"
        string_val: "resCONVLSTM_2/BatchNorm/beta/Adam"
        string_val: "resCONVLSTM_2/BatchNorm/beta/Adam_1"
        string_val: "resCONVLSTM_2/BatchNorm/moving_mean"
        string_val: "resCONVLSTM_2/BatchNorm/moving_variance"
        string_val: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/biased"
        string_val: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/local_step"
        string_val: "resCONVLSTM_2/BatchNorm_1/beta"
        string_val: "resCONVLSTM_2/BatchNorm_1/beta/Adam"
        string_val: "resCONVLSTM_2/BatchNorm_1/beta/Adam_1"
        string_val: "resCONVLSTM_2/BatchNorm_1/moving_mean"
        string_val: "resCONVLSTM_2/BatchNorm_1/moving_variance"
        string_val: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/biased"
        string_val: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/local_step"
        string_val: "resCONVLSTM_2/rnn/conv1/biases"
        string_val: "resCONVLSTM_2/rnn/conv1/biases/Adam"
        string_val: "resCONVLSTM_2/rnn/conv1/biases/Adam_1"
        string_val: "resCONVLSTM_2/rnn/conv1/kernel"
        string_val: "resCONVLSTM_2/rnn/conv1/kernel/Adam"
        string_val: "resCONVLSTM_2/rnn/conv1/kernel/Adam_1"
        string_val: "resCONVLSTM_2/rnn/conv2/biases"
        string_val: "resCONVLSTM_2/rnn/conv2/biases/Adam"
        string_val: "resCONVLSTM_2/rnn/conv2/biases/Adam_1"
        string_val: "resCONVLSTM_2/rnn/conv2/kernel"
        string_val: "resCONVLSTM_2/rnn/conv2/kernel/Adam"
        string_val: "resCONVLSTM_2/rnn/conv2/kernel/Adam_1"
        string_val: "resCONVLSTM_3/BatchNorm/beta"
        string_val: "resCONVLSTM_3/BatchNorm/beta/Adam"
        string_val: "resCONVLSTM_3/BatchNorm/beta/Adam_1"
        string_val: "resCONVLSTM_3/BatchNorm/moving_mean"
        string_val: "resCONVLSTM_3/BatchNorm/moving_variance"
        string_val: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/biased"
        string_val: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/local_step"
        string_val: "resCONVLSTM_3/BatchNorm_1/beta"
        string_val: "resCONVLSTM_3/BatchNorm_1/beta/Adam"
        string_val: "resCONVLSTM_3/BatchNorm_1/beta/Adam_1"
        string_val: "resCONVLSTM_3/BatchNorm_1/moving_mean"
        string_val: "resCONVLSTM_3/BatchNorm_1/moving_variance"
        string_val: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/biased"
        string_val: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/local_step"
        string_val: "resCONVLSTM_3/rnn/conv1/biases"
        string_val: "resCONVLSTM_3/rnn/conv1/biases/Adam"
        string_val: "resCONVLSTM_3/rnn/conv1/biases/Adam_1"
        string_val: "resCONVLSTM_3/rnn/conv1/kernel"
        string_val: "resCONVLSTM_3/rnn/conv1/kernel/Adam"
        string_val: "resCONVLSTM_3/rnn/conv1/kernel/Adam_1"
        string_val: "resCONVLSTM_3/rnn/conv2/biases"
        string_val: "resCONVLSTM_3/rnn/conv2/biases/Adam"
        string_val: "resCONVLSTM_3/rnn/conv2/biases/Adam_1"
        string_val: "resCONVLSTM_3/rnn/conv2/kernel"
        string_val: "resCONVLSTM_3/rnn/conv2/kernel/Adam"
        string_val: "resCONVLSTM_3/rnn/conv2/kernel/Adam_1"
        string_val: "resCONVLSTM_4/BatchNorm/beta"
        string_val: "resCONVLSTM_4/BatchNorm/beta/Adam"
        string_val: "resCONVLSTM_4/BatchNorm/beta/Adam_1"
        string_val: "resCONVLSTM_4/BatchNorm/moving_mean"
        string_val: "resCONVLSTM_4/BatchNorm/moving_variance"
        string_val: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/biased"
        string_val: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/local_step"
        string_val: "resCONVLSTM_4/BatchNorm_1/beta"
        string_val: "resCONVLSTM_4/BatchNorm_1/beta/Adam"
        string_val: "resCONVLSTM_4/BatchNorm_1/beta/Adam_1"
        string_val: "resCONVLSTM_4/BatchNorm_1/moving_mean"
        string_val: "resCONVLSTM_4/BatchNorm_1/moving_variance"
        string_val: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/biased"
        string_val: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/local_step"
        string_val: "resCONVLSTM_4/rnn/conv1/biases"
        string_val: "resCONVLSTM_4/rnn/conv1/biases/Adam"
        string_val: "resCONVLSTM_4/rnn/conv1/biases/Adam_1"
        string_val: "resCONVLSTM_4/rnn/conv1/kernel"
        string_val: "resCONVLSTM_4/rnn/conv1/kernel/Adam"
        string_val: "resCONVLSTM_4/rnn/conv1/kernel/Adam_1"
        string_val: "resCONVLSTM_4/rnn/conv2/biases"
        string_val: "resCONVLSTM_4/rnn/conv2/biases/Adam"
        string_val: "resCONVLSTM_4/rnn/conv2/biases/Adam_1"
        string_val: "resCONVLSTM_4/rnn/conv2/kernel"
        string_val: "resCONVLSTM_4/rnn/conv2/kernel/Adam"
        string_val: "resCONVLSTM_4/rnn/conv2/kernel/Adam_1"
        string_val: "train/beta1_power"
        string_val: "train/beta2_power"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 172
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "Variable"
  input: "Variable/Adam"
  input: "Variable/Adam_1"
  input: "Variable_1"
  input: "Variable_1/Adam"
  input: "Variable_1/Adam_1"
  input: "dense/bias"
  input: "dense/bias/Adam"
  input: "dense/bias/Adam_1"
  input: "dense/kernel"
  input: "dense/kernel/Adam"
  input: "dense/kernel/Adam_1"
  input: "global_step"
  input: "lstm1/BatchNorm/beta"
  input: "lstm1/BatchNorm/beta/Adam"
  input: "lstm1/BatchNorm/beta/Adam_1"
  input: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/biased"
  input: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/local_step"
  input: "lstm1/BatchNorm/moving_mean"
  input: "lstm1/BatchNorm/moving_variance"
  input: "lstm1/nin1/bias"
  input: "lstm1/nin1/bias/Adam"
  input: "lstm1/nin1/bias/Adam_1"
  input: "lstm1/nin1/kernel"
  input: "lstm1/nin1/kernel/Adam"
  input: "lstm1/nin1/kernel/Adam_1"
  input: "lstm1/rnn/lstm_cell/bias"
  input: "lstm1/rnn/lstm_cell/bias/Adam"
  input: "lstm1/rnn/lstm_cell/bias/Adam_1"
  input: "lstm1/rnn/lstm_cell/kernel"
  input: "lstm1/rnn/lstm_cell/kernel/Adam"
  input: "lstm1/rnn/lstm_cell/kernel/Adam_1"
  input: "lstm1/rnn/lstm_cell/projection/kernel"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Adam"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Adam_1"
  input: "lstm2/BatchNorm/beta"
  input: "lstm2/BatchNorm/beta/Adam"
  input: "lstm2/BatchNorm/beta/Adam_1"
  input: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/biased"
  input: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/local_step"
  input: "lstm2/BatchNorm/moving_mean"
  input: "lstm2/BatchNorm/moving_variance"
  input: "lstm2/nin1/bias"
  input: "lstm2/nin1/bias/Adam"
  input: "lstm2/nin1/bias/Adam_1"
  input: "lstm2/nin1/kernel"
  input: "lstm2/nin1/kernel/Adam"
  input: "lstm2/nin1/kernel/Adam_1"
  input: "lstm2/rnn/lstm_cell/bias"
  input: "lstm2/rnn/lstm_cell/bias/Adam"
  input: "lstm2/rnn/lstm_cell/bias/Adam_1"
  input: "lstm2/rnn/lstm_cell/kernel"
  input: "lstm2/rnn/lstm_cell/kernel/Adam"
  input: "lstm2/rnn/lstm_cell/kernel/Adam_1"
  input: "lstm2/rnn/lstm_cell/projection/kernel"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Adam"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Adam_1"
  input: "lstm3/rnn/lstm_cell/bias"
  input: "lstm3/rnn/lstm_cell/bias/Adam"
  input: "lstm3/rnn/lstm_cell/bias/Adam_1"
  input: "lstm3/rnn/lstm_cell/kernel"
  input: "lstm3/rnn/lstm_cell/kernel/Adam"
  input: "lstm3/rnn/lstm_cell/kernel/Adam_1"
  input: "lstm3/rnn/lstm_cell/projection/kernel"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Adam"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Adam_1"
  input: "resCONVLSTM_1/BatchNorm/beta"
  input: "resCONVLSTM_1/BatchNorm/beta/Adam"
  input: "resCONVLSTM_1/BatchNorm/beta/Adam_1"
  input: "resCONVLSTM_1/BatchNorm/moving_mean"
  input: "resCONVLSTM_1/BatchNorm/moving_variance"
  input: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/biased"
  input: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/local_step"
  input: "resCONVLSTM_1/BatchNorm_1/beta"
  input: "resCONVLSTM_1/BatchNorm_1/beta/Adam"
  input: "resCONVLSTM_1/BatchNorm_1/beta/Adam_1"
  input: "resCONVLSTM_1/BatchNorm_1/moving_mean"
  input: "resCONVLSTM_1/BatchNorm_1/moving_variance"
  input: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/biased"
  input: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/local_step"
  input: "resCONVLSTM_1/rnn/conv1/biases"
  input: "resCONVLSTM_1/rnn/conv1/biases/Adam"
  input: "resCONVLSTM_1/rnn/conv1/biases/Adam_1"
  input: "resCONVLSTM_1/rnn/conv1/kernel"
  input: "resCONVLSTM_1/rnn/conv1/kernel/Adam"
  input: "resCONVLSTM_1/rnn/conv1/kernel/Adam_1"
  input: "resCONVLSTM_1/rnn/conv2/biases"
  input: "resCONVLSTM_1/rnn/conv2/biases/Adam"
  input: "resCONVLSTM_1/rnn/conv2/biases/Adam_1"
  input: "resCONVLSTM_1/rnn/conv2/kernel"
  input: "resCONVLSTM_1/rnn/conv2/kernel/Adam"
  input: "resCONVLSTM_1/rnn/conv2/kernel/Adam_1"
  input: "resCONVLSTM_2/BatchNorm/beta"
  input: "resCONVLSTM_2/BatchNorm/beta/Adam"
  input: "resCONVLSTM_2/BatchNorm/beta/Adam_1"
  input: "resCONVLSTM_2/BatchNorm/moving_mean"
  input: "resCONVLSTM_2/BatchNorm/moving_variance"
  input: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/biased"
  input: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/local_step"
  input: "resCONVLSTM_2/BatchNorm_1/beta"
  input: "resCONVLSTM_2/BatchNorm_1/beta/Adam"
  input: "resCONVLSTM_2/BatchNorm_1/beta/Adam_1"
  input: "resCONVLSTM_2/BatchNorm_1/moving_mean"
  input: "resCONVLSTM_2/BatchNorm_1/moving_variance"
  input: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/biased"
  input: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/local_step"
  input: "resCONVLSTM_2/rnn/conv1/biases"
  input: "resCONVLSTM_2/rnn/conv1/biases/Adam"
  input: "resCONVLSTM_2/rnn/conv1/biases/Adam_1"
  input: "resCONVLSTM_2/rnn/conv1/kernel"
  input: "resCONVLSTM_2/rnn/conv1/kernel/Adam"
  input: "resCONVLSTM_2/rnn/conv1/kernel/Adam_1"
  input: "resCONVLSTM_2/rnn/conv2/biases"
  input: "resCONVLSTM_2/rnn/conv2/biases/Adam"
  input: "resCONVLSTM_2/rnn/conv2/biases/Adam_1"
  input: "resCONVLSTM_2/rnn/conv2/kernel"
  input: "resCONVLSTM_2/rnn/conv2/kernel/Adam"
  input: "resCONVLSTM_2/rnn/conv2/kernel/Adam_1"
  input: "resCONVLSTM_3/BatchNorm/beta"
  input: "resCONVLSTM_3/BatchNorm/beta/Adam"
  input: "resCONVLSTM_3/BatchNorm/beta/Adam_1"
  input: "resCONVLSTM_3/BatchNorm/moving_mean"
  input: "resCONVLSTM_3/BatchNorm/moving_variance"
  input: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/biased"
  input: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/local_step"
  input: "resCONVLSTM_3/BatchNorm_1/beta"
  input: "resCONVLSTM_3/BatchNorm_1/beta/Adam"
  input: "resCONVLSTM_3/BatchNorm_1/beta/Adam_1"
  input: "resCONVLSTM_3/BatchNorm_1/moving_mean"
  input: "resCONVLSTM_3/BatchNorm_1/moving_variance"
  input: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/biased"
  input: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/local_step"
  input: "resCONVLSTM_3/rnn/conv1/biases"
  input: "resCONVLSTM_3/rnn/conv1/biases/Adam"
  input: "resCONVLSTM_3/rnn/conv1/biases/Adam_1"
  input: "resCONVLSTM_3/rnn/conv1/kernel"
  input: "resCONVLSTM_3/rnn/conv1/kernel/Adam"
  input: "resCONVLSTM_3/rnn/conv1/kernel/Adam_1"
  input: "resCONVLSTM_3/rnn/conv2/biases"
  input: "resCONVLSTM_3/rnn/conv2/biases/Adam"
  input: "resCONVLSTM_3/rnn/conv2/biases/Adam_1"
  input: "resCONVLSTM_3/rnn/conv2/kernel"
  input: "resCONVLSTM_3/rnn/conv2/kernel/Adam"
  input: "resCONVLSTM_3/rnn/conv2/kernel/Adam_1"
  input: "resCONVLSTM_4/BatchNorm/beta"
  input: "resCONVLSTM_4/BatchNorm/beta/Adam"
  input: "resCONVLSTM_4/BatchNorm/beta/Adam_1"
  input: "resCONVLSTM_4/BatchNorm/moving_mean"
  input: "resCONVLSTM_4/BatchNorm/moving_variance"
  input: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/biased"
  input: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/local_step"
  input: "resCONVLSTM_4/BatchNorm_1/beta"
  input: "resCONVLSTM_4/BatchNorm_1/beta/Adam"
  input: "resCONVLSTM_4/BatchNorm_1/beta/Adam_1"
  input: "resCONVLSTM_4/BatchNorm_1/moving_mean"
  input: "resCONVLSTM_4/BatchNorm_1/moving_variance"
  input: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/biased"
  input: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/local_step"
  input: "resCONVLSTM_4/rnn/conv1/biases"
  input: "resCONVLSTM_4/rnn/conv1/biases/Adam"
  input: "resCONVLSTM_4/rnn/conv1/biases/Adam_1"
  input: "resCONVLSTM_4/rnn/conv1/kernel"
  input: "resCONVLSTM_4/rnn/conv1/kernel/Adam"
  input: "resCONVLSTM_4/rnn/conv1/kernel/Adam_1"
  input: "resCONVLSTM_4/rnn/conv2/biases"
  input: "resCONVLSTM_4/rnn/conv2/biases/Adam"
  input: "resCONVLSTM_4/rnn/conv2/biases/Adam_1"
  input: "resCONVLSTM_4/rnn/conv2/kernel"
  input: "resCONVLSTM_4/rnn/conv2/kernel/Adam"
  input: "resCONVLSTM_4/rnn/conv2/kernel/Adam_1"
  input: "train/beta1_power"
  input: "train/beta2_power"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 172
          }
        }
        string_val: "Variable"
        string_val: "Variable/Adam"
        string_val: "Variable/Adam_1"
        string_val: "Variable_1"
        string_val: "Variable_1/Adam"
        string_val: "Variable_1/Adam_1"
        string_val: "dense/bias"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
        string_val: "dense/kernel"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
        string_val: "global_step"
        string_val: "lstm1/BatchNorm/beta"
        string_val: "lstm1/BatchNorm/beta/Adam"
        string_val: "lstm1/BatchNorm/beta/Adam_1"
        string_val: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/biased"
        string_val: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/local_step"
        string_val: "lstm1/BatchNorm/moving_mean"
        string_val: "lstm1/BatchNorm/moving_variance"
        string_val: "lstm1/nin1/bias"
        string_val: "lstm1/nin1/bias/Adam"
        string_val: "lstm1/nin1/bias/Adam_1"
        string_val: "lstm1/nin1/kernel"
        string_val: "lstm1/nin1/kernel/Adam"
        string_val: "lstm1/nin1/kernel/Adam_1"
        string_val: "lstm1/rnn/lstm_cell/bias"
        string_val: "lstm1/rnn/lstm_cell/bias/Adam"
        string_val: "lstm1/rnn/lstm_cell/bias/Adam_1"
        string_val: "lstm1/rnn/lstm_cell/kernel"
        string_val: "lstm1/rnn/lstm_cell/kernel/Adam"
        string_val: "lstm1/rnn/lstm_cell/kernel/Adam_1"
        string_val: "lstm1/rnn/lstm_cell/projection/kernel"
        string_val: "lstm1/rnn/lstm_cell/projection/kernel/Adam"
        string_val: "lstm1/rnn/lstm_cell/projection/kernel/Adam_1"
        string_val: "lstm2/BatchNorm/beta"
        string_val: "lstm2/BatchNorm/beta/Adam"
        string_val: "lstm2/BatchNorm/beta/Adam_1"
        string_val: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/biased"
        string_val: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/local_step"
        string_val: "lstm2/BatchNorm/moving_mean"
        string_val: "lstm2/BatchNorm/moving_variance"
        string_val: "lstm2/nin1/bias"
        string_val: "lstm2/nin1/bias/Adam"
        string_val: "lstm2/nin1/bias/Adam_1"
        string_val: "lstm2/nin1/kernel"
        string_val: "lstm2/nin1/kernel/Adam"
        string_val: "lstm2/nin1/kernel/Adam_1"
        string_val: "lstm2/rnn/lstm_cell/bias"
        string_val: "lstm2/rnn/lstm_cell/bias/Adam"
        string_val: "lstm2/rnn/lstm_cell/bias/Adam_1"
        string_val: "lstm2/rnn/lstm_cell/kernel"
        string_val: "lstm2/rnn/lstm_cell/kernel/Adam"
        string_val: "lstm2/rnn/lstm_cell/kernel/Adam_1"
        string_val: "lstm2/rnn/lstm_cell/projection/kernel"
        string_val: "lstm2/rnn/lstm_cell/projection/kernel/Adam"
        string_val: "lstm2/rnn/lstm_cell/projection/kernel/Adam_1"
        string_val: "lstm3/rnn/lstm_cell/bias"
        string_val: "lstm3/rnn/lstm_cell/bias/Adam"
        string_val: "lstm3/rnn/lstm_cell/bias/Adam_1"
        string_val: "lstm3/rnn/lstm_cell/kernel"
        string_val: "lstm3/rnn/lstm_cell/kernel/Adam"
        string_val: "lstm3/rnn/lstm_cell/kernel/Adam_1"
        string_val: "lstm3/rnn/lstm_cell/projection/kernel"
        string_val: "lstm3/rnn/lstm_cell/projection/kernel/Adam"
        string_val: "lstm3/rnn/lstm_cell/projection/kernel/Adam_1"
        string_val: "resCONVLSTM_1/BatchNorm/beta"
        string_val: "resCONVLSTM_1/BatchNorm/beta/Adam"
        string_val: "resCONVLSTM_1/BatchNorm/beta/Adam_1"
        string_val: "resCONVLSTM_1/BatchNorm/moving_mean"
        string_val: "resCONVLSTM_1/BatchNorm/moving_variance"
        string_val: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/biased"
        string_val: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/local_step"
        string_val: "resCONVLSTM_1/BatchNorm_1/beta"
        string_val: "resCONVLSTM_1/BatchNorm_1/beta/Adam"
        string_val: "resCONVLSTM_1/BatchNorm_1/beta/Adam_1"
        string_val: "resCONVLSTM_1/BatchNorm_1/moving_mean"
        string_val: "resCONVLSTM_1/BatchNorm_1/moving_variance"
        string_val: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/biased"
        string_val: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/local_step"
        string_val: "resCONVLSTM_1/rnn/conv1/biases"
        string_val: "resCONVLSTM_1/rnn/conv1/biases/Adam"
        string_val: "resCONVLSTM_1/rnn/conv1/biases/Adam_1"
        string_val: "resCONVLSTM_1/rnn/conv1/kernel"
        string_val: "resCONVLSTM_1/rnn/conv1/kernel/Adam"
        string_val: "resCONVLSTM_1/rnn/conv1/kernel/Adam_1"
        string_val: "resCONVLSTM_1/rnn/conv2/biases"
        string_val: "resCONVLSTM_1/rnn/conv2/biases/Adam"
        string_val: "resCONVLSTM_1/rnn/conv2/biases/Adam_1"
        string_val: "resCONVLSTM_1/rnn/conv2/kernel"
        string_val: "resCONVLSTM_1/rnn/conv2/kernel/Adam"
        string_val: "resCONVLSTM_1/rnn/conv2/kernel/Adam_1"
        string_val: "resCONVLSTM_2/BatchNorm/beta"
        string_val: "resCONVLSTM_2/BatchNorm/beta/Adam"
        string_val: "resCONVLSTM_2/BatchNorm/beta/Adam_1"
        string_val: "resCONVLSTM_2/BatchNorm/moving_mean"
        string_val: "resCONVLSTM_2/BatchNorm/moving_variance"
        string_val: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/biased"
        string_val: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/local_step"
        string_val: "resCONVLSTM_2/BatchNorm_1/beta"
        string_val: "resCONVLSTM_2/BatchNorm_1/beta/Adam"
        string_val: "resCONVLSTM_2/BatchNorm_1/beta/Adam_1"
        string_val: "resCONVLSTM_2/BatchNorm_1/moving_mean"
        string_val: "resCONVLSTM_2/BatchNorm_1/moving_variance"
        string_val: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/biased"
        string_val: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/local_step"
        string_val: "resCONVLSTM_2/rnn/conv1/biases"
        string_val: "resCONVLSTM_2/rnn/conv1/biases/Adam"
        string_val: "resCONVLSTM_2/rnn/conv1/biases/Adam_1"
        string_val: "resCONVLSTM_2/rnn/conv1/kernel"
        string_val: "resCONVLSTM_2/rnn/conv1/kernel/Adam"
        string_val: "resCONVLSTM_2/rnn/conv1/kernel/Adam_1"
        string_val: "resCONVLSTM_2/rnn/conv2/biases"
        string_val: "resCONVLSTM_2/rnn/conv2/biases/Adam"
        string_val: "resCONVLSTM_2/rnn/conv2/biases/Adam_1"
        string_val: "resCONVLSTM_2/rnn/conv2/kernel"
        string_val: "resCONVLSTM_2/rnn/conv2/kernel/Adam"
        string_val: "resCONVLSTM_2/rnn/conv2/kernel/Adam_1"
        string_val: "resCONVLSTM_3/BatchNorm/beta"
        string_val: "resCONVLSTM_3/BatchNorm/beta/Adam"
        string_val: "resCONVLSTM_3/BatchNorm/beta/Adam_1"
        string_val: "resCONVLSTM_3/BatchNorm/moving_mean"
        string_val: "resCONVLSTM_3/BatchNorm/moving_variance"
        string_val: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/biased"
        string_val: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/local_step"
        string_val: "resCONVLSTM_3/BatchNorm_1/beta"
        string_val: "resCONVLSTM_3/BatchNorm_1/beta/Adam"
        string_val: "resCONVLSTM_3/BatchNorm_1/beta/Adam_1"
        string_val: "resCONVLSTM_3/BatchNorm_1/moving_mean"
        string_val: "resCONVLSTM_3/BatchNorm_1/moving_variance"
        string_val: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/biased"
        string_val: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/local_step"
        string_val: "resCONVLSTM_3/rnn/conv1/biases"
        string_val: "resCONVLSTM_3/rnn/conv1/biases/Adam"
        string_val: "resCONVLSTM_3/rnn/conv1/biases/Adam_1"
        string_val: "resCONVLSTM_3/rnn/conv1/kernel"
        string_val: "resCONVLSTM_3/rnn/conv1/kernel/Adam"
        string_val: "resCONVLSTM_3/rnn/conv1/kernel/Adam_1"
        string_val: "resCONVLSTM_3/rnn/conv2/biases"
        string_val: "resCONVLSTM_3/rnn/conv2/biases/Adam"
        string_val: "resCONVLSTM_3/rnn/conv2/biases/Adam_1"
        string_val: "resCONVLSTM_3/rnn/conv2/kernel"
        string_val: "resCONVLSTM_3/rnn/conv2/kernel/Adam"
        string_val: "resCONVLSTM_3/rnn/conv2/kernel/Adam_1"
        string_val: "resCONVLSTM_4/BatchNorm/beta"
        string_val: "resCONVLSTM_4/BatchNorm/beta/Adam"
        string_val: "resCONVLSTM_4/BatchNorm/beta/Adam_1"
        string_val: "resCONVLSTM_4/BatchNorm/moving_mean"
        string_val: "resCONVLSTM_4/BatchNorm/moving_variance"
        string_val: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/biased"
        string_val: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/local_step"
        string_val: "resCONVLSTM_4/BatchNorm_1/beta"
        string_val: "resCONVLSTM_4/BatchNorm_1/beta/Adam"
        string_val: "resCONVLSTM_4/BatchNorm_1/beta/Adam_1"
        string_val: "resCONVLSTM_4/BatchNorm_1/moving_mean"
        string_val: "resCONVLSTM_4/BatchNorm_1/moving_variance"
        string_val: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/biased"
        string_val: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/local_step"
        string_val: "resCONVLSTM_4/rnn/conv1/biases"
        string_val: "resCONVLSTM_4/rnn/conv1/biases/Adam"
        string_val: "resCONVLSTM_4/rnn/conv1/biases/Adam_1"
        string_val: "resCONVLSTM_4/rnn/conv1/kernel"
        string_val: "resCONVLSTM_4/rnn/conv1/kernel/Adam"
        string_val: "resCONVLSTM_4/rnn/conv1/kernel/Adam_1"
        string_val: "resCONVLSTM_4/rnn/conv2/biases"
        string_val: "resCONVLSTM_4/rnn/conv2/biases/Adam"
        string_val: "resCONVLSTM_4/rnn/conv2/biases/Adam_1"
        string_val: "resCONVLSTM_4/rnn/conv2/kernel"
        string_val: "resCONVLSTM_4/rnn/conv2/kernel/Adam"
        string_val: "resCONVLSTM_4/rnn/conv2/kernel/Adam_1"
        string_val: "train/beta1_power"
        string_val: "train/beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 172
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "Variable"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "Variable/Adam"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "Variable/Adam_1"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "Variable_1"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "Variable_1/Adam"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "Variable_1/Adam_1"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "dense/bias"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "dense/bias/Adam"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "dense/bias/Adam_1"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "dense/kernel"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "dense/kernel/Adam"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "dense/kernel/Adam_1"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "lstm1/BatchNorm/beta"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "lstm1/BatchNorm/beta/Adam"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "lstm1/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/biased"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/local_step"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "lstm1/BatchNorm/moving_mean"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "lstm1/BatchNorm/moving_variance"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "lstm1/nin1/bias"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "lstm1/nin1/bias/Adam"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "lstm1/nin1/bias/Adam_1"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "lstm1/nin1/kernel"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "lstm1/nin1/kernel/Adam"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "lstm1/nin1/kernel/Adam_1"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/nin1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "lstm1/rnn/lstm_cell/bias"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "lstm1/rnn/lstm_cell/bias/Adam"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "lstm1/rnn/lstm_cell/bias/Adam_1"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "lstm1/rnn/lstm_cell/kernel"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "lstm1/rnn/lstm_cell/kernel/Adam"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "lstm1/rnn/lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "lstm1/rnn/lstm_cell/projection/kernel"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Adam"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "lstm1/rnn/lstm_cell/projection/kernel/Adam_1"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm1/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "lstm2/BatchNorm/beta"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "lstm2/BatchNorm/beta/Adam"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "lstm2/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/biased"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/local_step"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "lstm2/BatchNorm/moving_mean"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "lstm2/BatchNorm/moving_variance"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "lstm2/nin1/bias"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "lstm2/nin1/bias/Adam"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "lstm2/nin1/bias/Adam_1"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "lstm2/nin1/kernel"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "lstm2/nin1/kernel/Adam"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "lstm2/nin1/kernel/Adam_1"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/nin1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "lstm2/rnn/lstm_cell/bias"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "lstm2/rnn/lstm_cell/bias/Adam"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "lstm2/rnn/lstm_cell/bias/Adam_1"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "lstm2/rnn/lstm_cell/kernel"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "lstm2/rnn/lstm_cell/kernel/Adam"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "lstm2/rnn/lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "lstm2/rnn/lstm_cell/projection/kernel"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Adam"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "lstm2/rnn/lstm_cell/projection/kernel/Adam_1"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "lstm3/rnn/lstm_cell/bias"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "lstm3/rnn/lstm_cell/bias/Adam"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "lstm3/rnn/lstm_cell/bias/Adam_1"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "lstm3/rnn/lstm_cell/kernel"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "lstm3/rnn/lstm_cell/kernel/Adam"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "lstm3/rnn/lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "lstm3/rnn/lstm_cell/projection/kernel"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Adam"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "lstm3/rnn/lstm_cell/projection/kernel/Adam_1"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm3/rnn/lstm_cell/projection/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm/beta"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm/beta/Adam"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm/moving_mean"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm/moving_variance"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/biased"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/local_step"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm_1/beta"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm_1/beta/Adam"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm_1/beta/Adam_1"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm_1/moving_mean"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm_1/moving_variance"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/biased"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/local_step"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv1/biases"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv1/biases/Adam"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv1/biases/Adam_1"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv1/kernel"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv1/kernel/Adam"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv1/kernel/Adam_1"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv2/biases"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv2/biases/Adam"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv2/biases/Adam_1"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv2/kernel"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv2/kernel/Adam"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "resCONVLSTM_1/rnn/conv2/kernel/Adam_1"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_1/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm/beta"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm/beta/Adam"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm/moving_mean"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm/moving_variance"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/biased"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/local_step"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm_1/beta"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm_1/beta/Adam"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm_1/beta/Adam_1"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm_1/moving_mean"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm_1/moving_variance"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/biased"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/local_step"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv1/biases"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv1/biases/Adam"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv1/biases/Adam_1"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv1/kernel"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv1/kernel/Adam"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv1/kernel/Adam_1"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv2/biases"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv2/biases/Adam"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv2/biases/Adam_1"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv2/kernel"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv2/kernel/Adam"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "resCONVLSTM_2/rnn/conv2/kernel/Adam_1"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_2/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm/beta"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm/beta/Adam"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm/moving_mean"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm/moving_variance"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/biased"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/local_step"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm_1/beta"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm_1/beta/Adam"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm_1/beta/Adam_1"
  input: "save/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm_1/moving_mean"
  input: "save/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm_1/moving_variance"
  input: "save/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/biased"
  input: "save/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/local_step"
  input: "save/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv1/biases"
  input: "save/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv1/biases/Adam"
  input: "save/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv1/biases/Adam_1"
  input: "save/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv1/kernel"
  input: "save/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv1/kernel/Adam"
  input: "save/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv1/kernel/Adam_1"
  input: "save/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_138"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv2/biases"
  input: "save/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_139"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv2/biases/Adam"
  input: "save/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_140"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv2/biases/Adam_1"
  input: "save/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_141"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv2/kernel"
  input: "save/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_142"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv2/kernel/Adam"
  input: "save/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_143"
  op: "Assign"
  input: "resCONVLSTM_3/rnn/conv2/kernel/Adam_1"
  input: "save/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_3/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_144"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm/beta"
  input: "save/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_145"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm/beta/Adam"
  input: "save/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_146"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_147"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm/moving_mean"
  input: "save/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_148"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm/moving_variance"
  input: "save/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_149"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/biased"
  input: "save/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_150"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/local_step"
  input: "save/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_151"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm_1/beta"
  input: "save/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_152"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm_1/beta/Adam"
  input: "save/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_153"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm_1/beta/Adam_1"
  input: "save/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_154"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm_1/moving_mean"
  input: "save/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_155"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm_1/moving_variance"
  input: "save/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_156"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/biased"
  input: "save/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_157"
  op: "Assign"
  input: "resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/local_step"
  input: "save/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_158"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv1/biases"
  input: "save/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_159"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv1/biases/Adam"
  input: "save/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_160"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv1/biases/Adam_1"
  input: "save/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_161"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv1/kernel"
  input: "save/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_162"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv1/kernel/Adam"
  input: "save/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_163"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv1/kernel/Adam_1"
  input: "save/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_164"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv2/biases"
  input: "save/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_165"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv2/biases/Adam"
  input: "save/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_166"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv2/biases/Adam_1"
  input: "save/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_167"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv2/kernel"
  input: "save/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_168"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv2/kernel/Adam"
  input: "save/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_169"
  op: "Assign"
  input: "resCONVLSTM_4/rnn/conv2/kernel/Adam_1"
  input: "save/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resCONVLSTM_4/rnn/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_170"
  op: "Assign"
  input: "train/beta1_power"
  input: "save/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_171"
  op: "Assign"
  input: "train/beta2_power"
  input: "save/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_11"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_12"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_13"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
  input: "^save/Assign_138"
  input: "^save/Assign_139"
  input: "^save/Assign_14"
  input: "^save/Assign_140"
  input: "^save/Assign_141"
  input: "^save/Assign_142"
  input: "^save/Assign_143"
  input: "^save/Assign_144"
  input: "^save/Assign_145"
  input: "^save/Assign_146"
  input: "^save/Assign_147"
  input: "^save/Assign_148"
  input: "^save/Assign_149"
  input: "^save/Assign_15"
  input: "^save/Assign_150"
  input: "^save/Assign_151"
  input: "^save/Assign_152"
  input: "^save/Assign_153"
  input: "^save/Assign_154"
  input: "^save/Assign_155"
  input: "^save/Assign_156"
  input: "^save/Assign_157"
  input: "^save/Assign_158"
  input: "^save/Assign_159"
  input: "^save/Assign_16"
  input: "^save/Assign_160"
  input: "^save/Assign_161"
  input: "^save/Assign_162"
  input: "^save/Assign_163"
  input: "^save/Assign_164"
  input: "^save/Assign_165"
  input: "^save/Assign_166"
  input: "^save/Assign_167"
  input: "^save/Assign_168"
  input: "^save/Assign_169"
  input: "^save/Assign_17"
  input: "^save/Assign_170"
  input: "^save/Assign_171"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_8"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_9"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "cross_entropy_1"
  input: "accuracy"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^Variable/Adam/Assign"
  input: "^Variable/Adam_1/Assign"
  input: "^Variable/Assign"
  input: "^Variable_1/Adam/Assign"
  input: "^Variable_1/Adam_1/Assign"
  input: "^Variable_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^dense/bias/Assign"
  input: "^dense/kernel/Adam/Assign"
  input: "^dense/kernel/Adam_1/Assign"
  input: "^dense/kernel/Assign"
  input: "^global_step/Assign"
  input: "^lstm1/BatchNorm/beta/Adam/Assign"
  input: "^lstm1/BatchNorm/beta/Adam_1/Assign"
  input: "^lstm1/BatchNorm/beta/Assign"
  input: "^lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/biased/Assign"
  input: "^lstm1/BatchNorm/lstm1/BatchNorm/moving_mean/local_step/Assign"
  input: "^lstm1/BatchNorm/moving_mean/Assign"
  input: "^lstm1/BatchNorm/moving_variance/Assign"
  input: "^lstm1/nin1/bias/Adam/Assign"
  input: "^lstm1/nin1/bias/Adam_1/Assign"
  input: "^lstm1/nin1/bias/Assign"
  input: "^lstm1/nin1/kernel/Adam/Assign"
  input: "^lstm1/nin1/kernel/Adam_1/Assign"
  input: "^lstm1/nin1/kernel/Assign"
  input: "^lstm1/rnn/lstm_cell/bias/Adam/Assign"
  input: "^lstm1/rnn/lstm_cell/bias/Adam_1/Assign"
  input: "^lstm1/rnn/lstm_cell/bias/Assign"
  input: "^lstm1/rnn/lstm_cell/kernel/Adam/Assign"
  input: "^lstm1/rnn/lstm_cell/kernel/Adam_1/Assign"
  input: "^lstm1/rnn/lstm_cell/kernel/Assign"
  input: "^lstm1/rnn/lstm_cell/projection/kernel/Adam/Assign"
  input: "^lstm1/rnn/lstm_cell/projection/kernel/Adam_1/Assign"
  input: "^lstm1/rnn/lstm_cell/projection/kernel/Assign"
  input: "^lstm2/BatchNorm/beta/Adam/Assign"
  input: "^lstm2/BatchNorm/beta/Adam_1/Assign"
  input: "^lstm2/BatchNorm/beta/Assign"
  input: "^lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/biased/Assign"
  input: "^lstm2/BatchNorm/lstm2/BatchNorm/moving_mean/local_step/Assign"
  input: "^lstm2/BatchNorm/moving_mean/Assign"
  input: "^lstm2/BatchNorm/moving_variance/Assign"
  input: "^lstm2/nin1/bias/Adam/Assign"
  input: "^lstm2/nin1/bias/Adam_1/Assign"
  input: "^lstm2/nin1/bias/Assign"
  input: "^lstm2/nin1/kernel/Adam/Assign"
  input: "^lstm2/nin1/kernel/Adam_1/Assign"
  input: "^lstm2/nin1/kernel/Assign"
  input: "^lstm2/rnn/lstm_cell/bias/Adam/Assign"
  input: "^lstm2/rnn/lstm_cell/bias/Adam_1/Assign"
  input: "^lstm2/rnn/lstm_cell/bias/Assign"
  input: "^lstm2/rnn/lstm_cell/kernel/Adam/Assign"
  input: "^lstm2/rnn/lstm_cell/kernel/Adam_1/Assign"
  input: "^lstm2/rnn/lstm_cell/kernel/Assign"
  input: "^lstm2/rnn/lstm_cell/projection/kernel/Adam/Assign"
  input: "^lstm2/rnn/lstm_cell/projection/kernel/Adam_1/Assign"
  input: "^lstm2/rnn/lstm_cell/projection/kernel/Assign"
  input: "^lstm3/rnn/lstm_cell/bias/Adam/Assign"
  input: "^lstm3/rnn/lstm_cell/bias/Adam_1/Assign"
  input: "^lstm3/rnn/lstm_cell/bias/Assign"
  input: "^lstm3/rnn/lstm_cell/kernel/Adam/Assign"
  input: "^lstm3/rnn/lstm_cell/kernel/Adam_1/Assign"
  input: "^lstm3/rnn/lstm_cell/kernel/Assign"
  input: "^lstm3/rnn/lstm_cell/projection/kernel/Adam/Assign"
  input: "^lstm3/rnn/lstm_cell/projection/kernel/Adam_1/Assign"
  input: "^lstm3/rnn/lstm_cell/projection/kernel/Assign"
  input: "^resCONVLSTM_1/BatchNorm/beta/Adam/Assign"
  input: "^resCONVLSTM_1/BatchNorm/beta/Adam_1/Assign"
  input: "^resCONVLSTM_1/BatchNorm/beta/Assign"
  input: "^resCONVLSTM_1/BatchNorm/moving_mean/Assign"
  input: "^resCONVLSTM_1/BatchNorm/moving_variance/Assign"
  input: "^resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/biased/Assign"
  input: "^resCONVLSTM_1/BatchNorm/resCONVLSTM_1/BatchNorm/moving_mean/local_step/Assign"
  input: "^resCONVLSTM_1/BatchNorm_1/beta/Adam/Assign"
  input: "^resCONVLSTM_1/BatchNorm_1/beta/Adam_1/Assign"
  input: "^resCONVLSTM_1/BatchNorm_1/beta/Assign"
  input: "^resCONVLSTM_1/BatchNorm_1/moving_mean/Assign"
  input: "^resCONVLSTM_1/BatchNorm_1/moving_variance/Assign"
  input: "^resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/biased/Assign"
  input: "^resCONVLSTM_1/BatchNorm_1/resCONVLSTM_1/BatchNorm_1/moving_mean/local_step/Assign"
  input: "^resCONVLSTM_1/rnn/conv1/biases/Adam/Assign"
  input: "^resCONVLSTM_1/rnn/conv1/biases/Adam_1/Assign"
  input: "^resCONVLSTM_1/rnn/conv1/biases/Assign"
  input: "^resCONVLSTM_1/rnn/conv1/kernel/Adam/Assign"
  input: "^resCONVLSTM_1/rnn/conv1/kernel/Adam_1/Assign"
  input: "^resCONVLSTM_1/rnn/conv1/kernel/Assign"
  input: "^resCONVLSTM_1/rnn/conv2/biases/Adam/Assign"
  input: "^resCONVLSTM_1/rnn/conv2/biases/Adam_1/Assign"
  input: "^resCONVLSTM_1/rnn/conv2/biases/Assign"
  input: "^resCONVLSTM_1/rnn/conv2/kernel/Adam/Assign"
  input: "^resCONVLSTM_1/rnn/conv2/kernel/Adam_1/Assign"
  input: "^resCONVLSTM_1/rnn/conv2/kernel/Assign"
  input: "^resCONVLSTM_2/BatchNorm/beta/Adam/Assign"
  input: "^resCONVLSTM_2/BatchNorm/beta/Adam_1/Assign"
  input: "^resCONVLSTM_2/BatchNorm/beta/Assign"
  input: "^resCONVLSTM_2/BatchNorm/moving_mean/Assign"
  input: "^resCONVLSTM_2/BatchNorm/moving_variance/Assign"
  input: "^resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/biased/Assign"
  input: "^resCONVLSTM_2/BatchNorm/resCONVLSTM_2/BatchNorm/moving_mean/local_step/Assign"
  input: "^resCONVLSTM_2/BatchNorm_1/beta/Adam/Assign"
  input: "^resCONVLSTM_2/BatchNorm_1/beta/Adam_1/Assign"
  input: "^resCONVLSTM_2/BatchNorm_1/beta/Assign"
  input: "^resCONVLSTM_2/BatchNorm_1/moving_mean/Assign"
  input: "^resCONVLSTM_2/BatchNorm_1/moving_variance/Assign"
  input: "^resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/biased/Assign"
  input: "^resCONVLSTM_2/BatchNorm_1/resCONVLSTM_2/BatchNorm_1/moving_mean/local_step/Assign"
  input: "^resCONVLSTM_2/rnn/conv1/biases/Adam/Assign"
  input: "^resCONVLSTM_2/rnn/conv1/biases/Adam_1/Assign"
  input: "^resCONVLSTM_2/rnn/conv1/biases/Assign"
  input: "^resCONVLSTM_2/rnn/conv1/kernel/Adam/Assign"
  input: "^resCONVLSTM_2/rnn/conv1/kernel/Adam_1/Assign"
  input: "^resCONVLSTM_2/rnn/conv1/kernel/Assign"
  input: "^resCONVLSTM_2/rnn/conv2/biases/Adam/Assign"
  input: "^resCONVLSTM_2/rnn/conv2/biases/Adam_1/Assign"
  input: "^resCONVLSTM_2/rnn/conv2/biases/Assign"
  input: "^resCONVLSTM_2/rnn/conv2/kernel/Adam/Assign"
  input: "^resCONVLSTM_2/rnn/conv2/kernel/Adam_1/Assign"
  input: "^resCONVLSTM_2/rnn/conv2/kernel/Assign"
  input: "^resCONVLSTM_3/BatchNorm/beta/Adam/Assign"
  input: "^resCONVLSTM_3/BatchNorm/beta/Adam_1/Assign"
  input: "^resCONVLSTM_3/BatchNorm/beta/Assign"
  input: "^resCONVLSTM_3/BatchNorm/moving_mean/Assign"
  input: "^resCONVLSTM_3/BatchNorm/moving_variance/Assign"
  input: "^resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/biased/Assign"
  input: "^resCONVLSTM_3/BatchNorm/resCONVLSTM_3/BatchNorm/moving_mean/local_step/Assign"
  input: "^resCONVLSTM_3/BatchNorm_1/beta/Adam/Assign"
  input: "^resCONVLSTM_3/BatchNorm_1/beta/Adam_1/Assign"
  input: "^resCONVLSTM_3/BatchNorm_1/beta/Assign"
  input: "^resCONVLSTM_3/BatchNorm_1/moving_mean/Assign"
  input: "^resCONVLSTM_3/BatchNorm_1/moving_variance/Assign"
  input: "^resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/biased/Assign"
  input: "^resCONVLSTM_3/BatchNorm_1/resCONVLSTM_3/BatchNorm_1/moving_mean/local_step/Assign"
  input: "^resCONVLSTM_3/rnn/conv1/biases/Adam/Assign"
  input: "^resCONVLSTM_3/rnn/conv1/biases/Adam_1/Assign"
  input: "^resCONVLSTM_3/rnn/conv1/biases/Assign"
  input: "^resCONVLSTM_3/rnn/conv1/kernel/Adam/Assign"
  input: "^resCONVLSTM_3/rnn/conv1/kernel/Adam_1/Assign"
  input: "^resCONVLSTM_3/rnn/conv1/kernel/Assign"
  input: "^resCONVLSTM_3/rnn/conv2/biases/Adam/Assign"
  input: "^resCONVLSTM_3/rnn/conv2/biases/Adam_1/Assign"
  input: "^resCONVLSTM_3/rnn/conv2/biases/Assign"
  input: "^resCONVLSTM_3/rnn/conv2/kernel/Adam/Assign"
  input: "^resCONVLSTM_3/rnn/conv2/kernel/Adam_1/Assign"
  input: "^resCONVLSTM_3/rnn/conv2/kernel/Assign"
  input: "^resCONVLSTM_4/BatchNorm/beta/Adam/Assign"
  input: "^resCONVLSTM_4/BatchNorm/beta/Adam_1/Assign"
  input: "^resCONVLSTM_4/BatchNorm/beta/Assign"
  input: "^resCONVLSTM_4/BatchNorm/moving_mean/Assign"
  input: "^resCONVLSTM_4/BatchNorm/moving_variance/Assign"
  input: "^resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/biased/Assign"
  input: "^resCONVLSTM_4/BatchNorm/resCONVLSTM_4/BatchNorm/moving_mean/local_step/Assign"
  input: "^resCONVLSTM_4/BatchNorm_1/beta/Adam/Assign"
  input: "^resCONVLSTM_4/BatchNorm_1/beta/Adam_1/Assign"
  input: "^resCONVLSTM_4/BatchNorm_1/beta/Assign"
  input: "^resCONVLSTM_4/BatchNorm_1/moving_mean/Assign"
  input: "^resCONVLSTM_4/BatchNorm_1/moving_variance/Assign"
  input: "^resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/biased/Assign"
  input: "^resCONVLSTM_4/BatchNorm_1/resCONVLSTM_4/BatchNorm_1/moving_mean/local_step/Assign"
  input: "^resCONVLSTM_4/rnn/conv1/biases/Adam/Assign"
  input: "^resCONVLSTM_4/rnn/conv1/biases/Adam_1/Assign"
  input: "^resCONVLSTM_4/rnn/conv1/biases/Assign"
  input: "^resCONVLSTM_4/rnn/conv1/kernel/Adam/Assign"
  input: "^resCONVLSTM_4/rnn/conv1/kernel/Adam_1/Assign"
  input: "^resCONVLSTM_4/rnn/conv1/kernel/Assign"
  input: "^resCONVLSTM_4/rnn/conv2/biases/Adam/Assign"
  input: "^resCONVLSTM_4/rnn/conv2/biases/Adam_1/Assign"
  input: "^resCONVLSTM_4/rnn/conv2/biases/Assign"
  input: "^resCONVLSTM_4/rnn/conv2/kernel/Adam/Assign"
  input: "^resCONVLSTM_4/rnn/conv2/kernel/Adam_1/Assign"
  input: "^resCONVLSTM_4/rnn/conv2/kernel/Assign"
  input: "^train/beta1_power/Assign"
  input: "^train/beta2_power/Assign"
}
versions {
  producer: 38
}
